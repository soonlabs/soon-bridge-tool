/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../common";

export interface PeripheryDeployConfig0825Interface extends utils.Interface {
  functions: {
    "IS_SCRIPT()": FunctionFragment;
    "create2DeploymentSalt()": FunctionFragment;
    "deployDripchecks()": FunctionFragment;
    "deployFaucetContracts()": FunctionFragment;
    "deployOperationsContracts()": FunctionFragment;
    "faucetAdmin()": FunctionFragment;
    "faucetDrippieOwner()": FunctionFragment;
    "faucetOffchainAuthModuleAdmin()": FunctionFragment;
    "faucetOffchainAuthModuleAmount()": FunctionFragment;
    "faucetOffchainAuthModuleTtl()": FunctionFragment;
    "faucetOnchainAuthModuleAdmin()": FunctionFragment;
    "faucetOnchainAuthModuleAmount()": FunctionFragment;
    "faucetOnchainAuthModuleTtl()": FunctionFragment;
    "gelatoAutomateContract()": FunctionFragment;
    "operationsDrippieOwner()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "IS_SCRIPT"
      | "create2DeploymentSalt"
      | "deployDripchecks"
      | "deployFaucetContracts"
      | "deployOperationsContracts"
      | "faucetAdmin"
      | "faucetDrippieOwner"
      | "faucetOffchainAuthModuleAdmin"
      | "faucetOffchainAuthModuleAmount"
      | "faucetOffchainAuthModuleTtl"
      | "faucetOnchainAuthModuleAdmin"
      | "faucetOnchainAuthModuleAmount"
      | "faucetOnchainAuthModuleTtl"
      | "gelatoAutomateContract"
      | "operationsDrippieOwner"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "IS_SCRIPT", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "create2DeploymentSalt",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "deployDripchecks",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "deployFaucetContracts",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "deployOperationsContracts",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "faucetAdmin",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "faucetDrippieOwner",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "faucetOffchainAuthModuleAdmin",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "faucetOffchainAuthModuleAmount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "faucetOffchainAuthModuleTtl",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "faucetOnchainAuthModuleAdmin",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "faucetOnchainAuthModuleAmount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "faucetOnchainAuthModuleTtl",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "gelatoAutomateContract",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "operationsDrippieOwner",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "IS_SCRIPT", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "create2DeploymentSalt",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deployDripchecks",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deployFaucetContracts",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deployOperationsContracts",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "faucetAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "faucetDrippieOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "faucetOffchainAuthModuleAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "faucetOffchainAuthModuleAmount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "faucetOffchainAuthModuleTtl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "faucetOnchainAuthModuleAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "faucetOnchainAuthModuleAmount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "faucetOnchainAuthModuleTtl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "gelatoAutomateContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "operationsDrippieOwner",
    data: BytesLike
  ): Result;

  events: {};
}

export interface PeripheryDeployConfig0825 extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: PeripheryDeployConfig0825Interface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    IS_SCRIPT(overrides?: CallOverrides): Promise<[boolean]>;

    create2DeploymentSalt(overrides?: CallOverrides): Promise<[string]>;

    deployDripchecks(overrides?: CallOverrides): Promise<[boolean]>;

    deployFaucetContracts(overrides?: CallOverrides): Promise<[boolean]>;

    deployOperationsContracts(overrides?: CallOverrides): Promise<[boolean]>;

    faucetAdmin(overrides?: CallOverrides): Promise<[string]>;

    faucetDrippieOwner(overrides?: CallOverrides): Promise<[string]>;

    faucetOffchainAuthModuleAdmin(overrides?: CallOverrides): Promise<[string]>;

    faucetOffchainAuthModuleAmount(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    faucetOffchainAuthModuleTtl(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    faucetOnchainAuthModuleAdmin(overrides?: CallOverrides): Promise<[string]>;

    faucetOnchainAuthModuleAmount(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    faucetOnchainAuthModuleTtl(overrides?: CallOverrides): Promise<[BigNumber]>;

    gelatoAutomateContract(overrides?: CallOverrides): Promise<[string]>;

    operationsDrippieOwner(overrides?: CallOverrides): Promise<[string]>;
  };

  IS_SCRIPT(overrides?: CallOverrides): Promise<boolean>;

  create2DeploymentSalt(overrides?: CallOverrides): Promise<string>;

  deployDripchecks(overrides?: CallOverrides): Promise<boolean>;

  deployFaucetContracts(overrides?: CallOverrides): Promise<boolean>;

  deployOperationsContracts(overrides?: CallOverrides): Promise<boolean>;

  faucetAdmin(overrides?: CallOverrides): Promise<string>;

  faucetDrippieOwner(overrides?: CallOverrides): Promise<string>;

  faucetOffchainAuthModuleAdmin(overrides?: CallOverrides): Promise<string>;

  faucetOffchainAuthModuleAmount(overrides?: CallOverrides): Promise<BigNumber>;

  faucetOffchainAuthModuleTtl(overrides?: CallOverrides): Promise<BigNumber>;

  faucetOnchainAuthModuleAdmin(overrides?: CallOverrides): Promise<string>;

  faucetOnchainAuthModuleAmount(overrides?: CallOverrides): Promise<BigNumber>;

  faucetOnchainAuthModuleTtl(overrides?: CallOverrides): Promise<BigNumber>;

  gelatoAutomateContract(overrides?: CallOverrides): Promise<string>;

  operationsDrippieOwner(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    IS_SCRIPT(overrides?: CallOverrides): Promise<boolean>;

    create2DeploymentSalt(overrides?: CallOverrides): Promise<string>;

    deployDripchecks(overrides?: CallOverrides): Promise<boolean>;

    deployFaucetContracts(overrides?: CallOverrides): Promise<boolean>;

    deployOperationsContracts(overrides?: CallOverrides): Promise<boolean>;

    faucetAdmin(overrides?: CallOverrides): Promise<string>;

    faucetDrippieOwner(overrides?: CallOverrides): Promise<string>;

    faucetOffchainAuthModuleAdmin(overrides?: CallOverrides): Promise<string>;

    faucetOffchainAuthModuleAmount(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    faucetOffchainAuthModuleTtl(overrides?: CallOverrides): Promise<BigNumber>;

    faucetOnchainAuthModuleAdmin(overrides?: CallOverrides): Promise<string>;

    faucetOnchainAuthModuleAmount(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    faucetOnchainAuthModuleTtl(overrides?: CallOverrides): Promise<BigNumber>;

    gelatoAutomateContract(overrides?: CallOverrides): Promise<string>;

    operationsDrippieOwner(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    IS_SCRIPT(overrides?: CallOverrides): Promise<BigNumber>;

    create2DeploymentSalt(overrides?: CallOverrides): Promise<BigNumber>;

    deployDripchecks(overrides?: CallOverrides): Promise<BigNumber>;

    deployFaucetContracts(overrides?: CallOverrides): Promise<BigNumber>;

    deployOperationsContracts(overrides?: CallOverrides): Promise<BigNumber>;

    faucetAdmin(overrides?: CallOverrides): Promise<BigNumber>;

    faucetDrippieOwner(overrides?: CallOverrides): Promise<BigNumber>;

    faucetOffchainAuthModuleAdmin(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    faucetOffchainAuthModuleAmount(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    faucetOffchainAuthModuleTtl(overrides?: CallOverrides): Promise<BigNumber>;

    faucetOnchainAuthModuleAdmin(overrides?: CallOverrides): Promise<BigNumber>;

    faucetOnchainAuthModuleAmount(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    faucetOnchainAuthModuleTtl(overrides?: CallOverrides): Promise<BigNumber>;

    gelatoAutomateContract(overrides?: CallOverrides): Promise<BigNumber>;

    operationsDrippieOwner(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    IS_SCRIPT(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    create2DeploymentSalt(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    deployDripchecks(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    deployFaucetContracts(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    deployOperationsContracts(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    faucetAdmin(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    faucetDrippieOwner(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    faucetOffchainAuthModuleAdmin(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    faucetOffchainAuthModuleAmount(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    faucetOffchainAuthModuleTtl(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    faucetOnchainAuthModuleAdmin(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    faucetOnchainAuthModuleAmount(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    faucetOnchainAuthModuleTtl(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    gelatoAutomateContract(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    operationsDrippieOwner(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}

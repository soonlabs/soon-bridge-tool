/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CheckBalanceLowTest,
  CheckBalanceLowTestInterface,
} from "../../CheckBalanceLow.t.sol/CheckBalanceLowTest";

const _abi = [
  {
    type: "function",
    name: "IS_TEST",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeArtifacts",
    inputs: [],
    outputs: [
      {
        name: "excludedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeContracts",
    inputs: [],
    outputs: [
      {
        name: "excludedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeSenders",
    inputs: [],
    outputs: [
      {
        name: "excludedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "failed",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setUp",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "targetArtifactSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifactSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetArtifacts",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetContracts",
    inputs: [],
    outputs: [
      {
        name: "targetedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetInterfaces",
    inputs: [],
    outputs: [
      {
        name: "targetedInterfaces_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzInterface[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "artifacts",
            type: "string[]",
            internalType: "string[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSenders",
    inputs: [],
    outputs: [
      {
        name: "targetedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "testFuzz_check_highBalance_fails",
    inputs: [
      {
        name: "_target",
        type: "address",
        internalType: "address",
      },
      {
        name: "_threshold",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testFuzz_check_succeeds",
    inputs: [
      {
        name: "_target",
        type: "address",
        internalType: "address",
      },
      {
        name: "_threshold",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "test_name_succeeds",
    inputs: [],
    outputs: [],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "log",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_address",
    inputs: [
      {
        name: "",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes32",
    inputs: [
      {
        name: "",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_int",
    inputs: [
      {
        name: "",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_address",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes32",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_string",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_string",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_uint",
    inputs: [
      {
        name: "",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "logs",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x6080604052600c8054600160ff199182168117909255601e8054909116909117905534801561002d57600080fd5b50611b138061003d6000396000f3fe60806040523480156200001157600080fd5b5060043610620001095760003560e01c806385226c8111620000a3578063ba414fa6116200006e578063ba414fa614620001d0578063e20c9f7114620001eb578063fa7626d414620001f5578063fb86ef4e146200020357600080fd5b806385226c811462000199578063885c08ff14620001b2578063916a17c614620001bc578063b5508aa914620001c657600080fd5b8063396b488911620000e4578063396b488914620001555780633e5e3c23146200016c5780633f7286f4146200017657806366d9a9a0146200018057600080fd5b80630a9254e4146200010e5780631ed7831c146200011a5780632ade3880146200013c575b600080fd5b620001186200021a565b005b6200012462000288565b60405162000133919062000ff9565b60405180910390f35b62000146620002f9565b604051620001339190620010d4565b6200011862000166366004620011e3565b62000454565b62000124620005d9565b6200012462000648565b6200018a620006b7565b6040516200013391906200122a565b620001a3620007c3565b60405162000133919062001324565b620001186200089d565b6200018a62000995565b620001a362000aa1565b620001da62000b7b565b604051901515815260200162000133565b6200012462000c53565b601e54620001da9060ff1681565b6200011862000214366004620011e3565b62000cc2565b604051620002289062000feb565b604051809103906000f08015801562000245573d6000803e3d6000fd5b50601e60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60606016805480602002602001604051908101604052809291908181526020018280548015620002ef57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620002c3575b5050505050905090565b6060601d805480602002602001604051908101604052809291908181526020016000905b828210156200044b576000848152602080822060408051808201825260028702909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939591948681019491929084015b82821015620004335783829060005260206000200180546200039f90620013a8565b80601f0160208091040260200160405190810160405280929190818152602001828054620003cd90620013a8565b80156200041e5780601f10620003f2576101008083540402835291602001916200041e565b820191906000526020600020905b8154815290600101906020018083116200040057829003601f168201915b5050505050815260200190600101906200037d565b5050505081525050815260200190600101906200031d565b50505050905090565b60408051808201825273ffffffffffffffffffffffffffffffffffffffff84168082526020820184905291517f4c63e56200000000000000000000000000000000000000000000000000000000815291318311600483015290737109709ecfa91a80626ff3989d68f67f5b1dd12d90634c63e5629060240160006040518083038186803b158015620004e557600080fd5b505afa158015620004fa573d6000803e3d6000fd5b5050601e5460408051855173ffffffffffffffffffffffffffffffffffffffff9081166020808401919091528701518284015282518083038401815260608301938490527fc64b3bb500000000000000000000000000000000000000000000000000000000909352620005d49550610100909304909216925063c64b3bb591620005889190606401620013fd565b602060405180830381865afa158015620005a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005cc919062001419565b600162000f0b565b505050565b60606018805480602002602001604051908101604052809291908181526020018280548015620002ef5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620002c3575050505050905090565b60606017805480602002602001604051908101604052809291908181526020018280548015620002ef5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620002c3575050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156200044b57600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939491938583019392830182828015620007aa57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411620007565790505b50505050508152505081526020019060010190620006db565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156200044b5783829060005260206000200180546200080990620013a8565b80601f01602080910402602001604051908101604052809291908181526020018280546200083790620013a8565b8015620008885780601f106200085c5761010080835404028352916020019162000888565b820191906000526020600020905b8154815290600101906020018083116200086a57829003601f168201915b505050505081526020019060010190620007e7565b62000993601e60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156200090f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526200095791908101906200146c565b6040518060400160405280600f81526020017f436865636b42616c616e63654c6f77000000000000000000000000000000000081525062000f97565b565b6060601c805480602002602001604051908101604052809291908181526020016000905b828210156200044b57600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801562000a8857602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841162000a345790505b50505050508152505081526020019060010190620009b9565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156200044b57838290600052602060002001805462000ae790620013a8565b80601f016020809104026020016040519081016040528092919081815260200182805462000b1590620013a8565b801562000b665780601f1062000b3a5761010080835404028352916020019162000b66565b820191906000526020600020905b81548152906001019060200180831162000b4857829003601f168201915b50505050508152602001906001019062000ac5565b60085460009060ff161562000b94575060085460ff1690565b6040517f667f9d70000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d600482018190527f6661696c65640000000000000000000000000000000000000000000000000000602483015260009163667f9d7090604401602060405180830381865afa15801562000c26573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c4c919062001543565b1415905090565b60606015805480602002602001604051908101604052809291908181526020018280548015620002ef5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620002c3575050505050905090565b60408051808201825273ffffffffffffffffffffffffffffffffffffffff841681526020810183905290517f4c63e5620000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8314156004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90634c63e5629060240160006040518083038186803b15801562000d7157600080fd5b505afa15801562000d86573d6000803e3d6000fd5b50737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c88a5e6d915085905062000db58560016200155d565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401600060405180830381600087803b15801562000e2157600080fd5b505af115801562000e36573d6000803e3d6000fd5b5050601e5460408051855173ffffffffffffffffffffffffffffffffffffffff9081166020808401919091528701518284015282518083038401815260608301938490527fc64b3bb500000000000000000000000000000000000000000000000000000000909352620005d49550610100909304909216925063c64b3bb59162000ec49190606401620013fd565b602060405180830381865afa15801562000ee2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f08919062001419565b60005b6040517ff7fe347700000000000000000000000000000000000000000000000000000000815282151560048201528115156024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f7fe3477906044015b60006040518083038186803b15801562000f7a57600080fd5b505afa15801562000f8f573d6000803e3d6000fd5b505050505050565b6040517ff320d963000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f320d9639062000f6190859085906004016200159d565b61053780620015d083390190565b6020808252825182820181905260009190848201906040850190845b818110156200104957835173ffffffffffffffffffffffffffffffffffffffff168352928401929184019160010162001015565b50909695505050505050565b60005b838110156200107257818101518382015260200162001058565b8381111562001082576000848401525b50505050565b60008151808452620010a281602086016020860162001055565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b85811015620011d3577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08b85030187528251805173ffffffffffffffffffffffffffffffffffffffff1685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015620011bc577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0898503018352620011a984865162001088565b948e01949350918d01916001016200116c565b505050978a019794505091880191600101620010fb565b50919a9950505050505050505050565b60008060408385031215620011f757600080fd5b823573ffffffffffffffffffffffffffffffffffffffff811681146200121c57600080fd5b946020939093013593505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101562001315578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b80831015620012ff5783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b0190620012bb565b50978a0197955050509187019160010162001252565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200139b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526200138885835162001088565b945092850192908501906001016200134b565b5092979650505050505050565b600181811c90821680620013bd57607f821691505b602082108103620013f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60208152600062001412602083018462001088565b9392505050565b6000602082840312156200142c57600080fd5b815180151581146200141257600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156200147f57600080fd5b815167ffffffffffffffff808211156200149857600080fd5b818401915084601f830112620014ad57600080fd5b815181811115620014c257620014c26200143d565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156200150b576200150b6200143d565b816040528281528760208487010111156200152557600080fd5b6200153883602083016020880162001055565b979650505050505050565b6000602082840312156200155657600080fd5b5051919050565b6000821982111562001598577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b604081526000620015b2604083018562001088565b8281036020840152620015c6818562001088565b9594505050505056fe60c0604052600f60809081526e436865636b42616c616e63654c6f7760881b60a05260009061002e90826100e0565b5034801561003b57600080fd5b5061019f565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061006b57607f821691505b60208210810361008b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156100db57600081815260208120601f850160051c810160208610156100b85750805b601f850160051c820191505b818110156100d7578281556001016100c4565b5050505b505050565b81516001600160401b038111156100f9576100f9610041565b61010d816101078454610057565b84610091565b602080601f831160018114610142576000841561012a5750858301515b600019600386901b1c1916600185901b1785556100d7565b600085815260208120601f198616915b8281101561017157888601518255948401946001909101908401610152565b508582101561018f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610389806101ae6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806306fdde031461003b578063c64b3bb514610059575b600080fd5b61004361007c565b6040516100509190610147565b60405180910390f35b61006c6100673660046101e9565b61010a565b6040519015158152602001610050565b60008054610089906102b8565b80601f01602080910402602001604051908101604052809291908181526020018280546100b5906102b8565b80156101025780601f106100d757610100808354040283529160200191610102565b820191906000526020600020905b8154815290600101906020018083116100e557829003601f168201915b505050505081565b60008082806020019051810190610121919061030b565b6020810151905173ffffffffffffffffffffffffffffffffffffffff1631109392505050565b600060208083528351808285015260005b8181101561017457858101830151858201604001528201610158565b81811115610186576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156101fb57600080fd5b813567ffffffffffffffff8082111561021357600080fd5b818401915084601f83011261022757600080fd5b813581811115610239576102396101ba565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561027f5761027f6101ba565b8160405282815287602084870101111561029857600080fd5b826020860160208301376000928101602001929092525095945050505050565b600181811c908216806102cc57607f821691505b602082108103610305577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60006040828403121561031d57600080fd5b6040516040810181811067ffffffffffffffff82111715610340576103406101ba565b604052825173ffffffffffffffffffffffffffffffffffffffff8116811461036757600080fd5b8152602092830151928101929092525091905056fea164736f6c634300080f000aa164736f6c634300080f000a";

type CheckBalanceLowTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CheckBalanceLowTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CheckBalanceLowTest__factory extends ContractFactory {
  constructor(...args: CheckBalanceLowTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<CheckBalanceLowTest> {
    return super.deploy(overrides || {}) as Promise<CheckBalanceLowTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CheckBalanceLowTest {
    return super.attach(address) as CheckBalanceLowTest;
  }
  override connect(signer: Signer): CheckBalanceLowTest__factory {
    return super.connect(signer) as CheckBalanceLowTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CheckBalanceLowTestInterface {
    return new utils.Interface(_abi) as CheckBalanceLowTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CheckBalanceLowTest {
    return new Contract(address, _abi, signerOrProvider) as CheckBalanceLowTest;
  }
}

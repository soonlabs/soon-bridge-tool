/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Burn_EthBurner,
  Burn_EthBurnerInterface,
} from "../../Burn.Eth.t.sol/Burn_EthBurner";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_vm",
        type: "address",
        internalType: "contract Vm",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "burnEth",
    inputs: [
      {
        name: "_value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "failedEthBurn",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161070138038061070183398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61066e806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063680b376a1461003b5780639a99f4de14610050575b600080fd5b61004e61004936600461052c565b610089565b005b6000546100759074010000000000000000000000000000000000000000900460ff1681565b604051901515815260200160405180910390f35b60006100a682826fffffffffffffffffffffffffffffffff61019e565b6000546040517fc88a5e6d0000000000000000000000000000000000000000000000000000000081523060048201526024810183905291925073ffffffffffffffffffffffffffffffffffffffff169063c88a5e6d90604401600060405180830381600087803b15801561011957600080fd5b505af115801561012d573d6000803e3d6000fd5b50505050600047905060006101448360008461019e565b905061014f816101f3565b808203471461019857600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790555b50505050565b60006101ab848484610222565b90506101ec6040518060400160405280600c81526020017f426f756e6420726573756c7400000000000000000000000000000000000000008152508261045e565b9392505050565b8060405161020090610520565b6040518091039082f090508015801561021d573d6000803e3d6000fd5b505050565b6000818311156102b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5374645574696c7320626f756e642875696e743235362c75696e743235362c7560448201527f696e74323536293a204d6178206973206c657373207468616e206d696e2e0000606482015260840160405180910390fd5b8284101580156102c85750818411155b156102d45750826101ec565b60006102e08484610574565b6102eb90600161058b565b9050600385111580156102fd57508481115b156103145761030c858561058b565b9150506101ec565b61033f60037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610574565b85101580156103765750610373857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610574565b81115b156103af576103a5857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610574565b61030c9084610574565b828511156104055760006103c38487610574565b905060006103d183836105a3565b9050806000036103e6578493505050506101ec565b60016103f2828861058b565b6103fc9190610574565b93505050610456565b838510156104565760006104198686610574565b9050600061042783836105a3565b90508060000361043c578593505050506101ec565b6104468186610574565b61045190600161058b565b935050505b509392505050565b6104ef82826040516024016104749291906105de565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc000000000000000000000000000000000000000000000000000000001790526104f3565b5050565b6104fc816104ff565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60088061065a83390190565b60006020828403121561053e57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561058657610586610545565b500390565b6000821982111561059e5761059e610545565b500190565b6000826105d9577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b604081526000835180604084015260005b8181101561060c57602081870181015160608684010152016105ef565b8181111561061e576000606083860101525b50602083019390935250601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160160600191905056fe608060405230fffea164736f6c634300080f000a";

type Burn_EthBurnerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Burn_EthBurnerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Burn_EthBurner__factory extends ContractFactory {
  constructor(...args: Burn_EthBurnerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vm: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Burn_EthBurner> {
    return super.deploy(_vm, overrides || {}) as Promise<Burn_EthBurner>;
  }
  override getDeployTransaction(
    _vm: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_vm, overrides || {});
  }
  override attach(address: string): Burn_EthBurner {
    return super.attach(address) as Burn_EthBurner;
  }
  override connect(signer: Signer): Burn_EthBurner__factory {
    return super.connect(signer) as Burn_EthBurner__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Burn_EthBurnerInterface {
    return new utils.Interface(_abi) as Burn_EthBurnerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Burn_EthBurner {
    return new Contract(address, _abi, signerOrProvider) as Burn_EthBurner;
  }
}

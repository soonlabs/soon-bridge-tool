/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LivenessModule,
  LivenessModuleInterface,
} from "../LivenessModule";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_safe",
        type: "address",
        internalType: "contract GnosisSafe",
      },
      {
        name: "_livenessGuard",
        type: "address",
        internalType: "contract LivenessGuard",
      },
      {
        name: "_livenessInterval",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_minOwners",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_thresholdPercentage",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_fallbackOwner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "canRemove",
    inputs: [
      {
        name: "_owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "canRemove_",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "fallbackOwner",
    inputs: [],
    outputs: [
      {
        name: "fallbackOwner_",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRequiredThreshold",
    inputs: [
      {
        name: "_numOwners",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "threshold_",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "livenessGuard",
    inputs: [],
    outputs: [
      {
        name: "livenessGuard_",
        type: "address",
        internalType: "contract LivenessGuard",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "livenessInterval",
    inputs: [],
    outputs: [
      {
        name: "livenessInterval_",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "minOwners",
    inputs: [],
    outputs: [
      {
        name: "minOwners_",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownershipTransferredToFallback",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "removeOwners",
    inputs: [
      {
        name: "_previousOwners",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "_ownersToRemove",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "safe",
    inputs: [],
    outputs: [
      {
        name: "safe_",
        type: "address",
        internalType: "contract GnosisSafe",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "thresholdPercentage",
    inputs: [],
    outputs: [
      {
        name: "thresholdPercentage_",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "version",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "OwnershipTransferredToFallback",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "RemovedOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "OwnerRemovalFailed",
    inputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
  },
] as const;

const _bytecode =
  "0x6101406040523480156200001257600080fd5b5060405162001d7138038062001d71833981016040819052620000359162000260565b6001600160a01b03808716608081905286821660a05260c08690526101008490529082166101205260e08490526040805163a0e67e2b60e01b815290516000929163a0e67e2b91600480830192869291908290030181865afa158015620000a0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000ca9190810190620002e7565b905080518411156200014b576040805162461bcd60e51b81526020600482015260248101919091527f4c6976656e6573734d6f64756c653a206d696e4f776e657273206d757374206260448201527f65206c657373207468616e20746865206e756d626572206f66206f776e65727360648201526084015b60405180910390fd5b60008311620001b25760405162461bcd60e51b815260206004820152603a602482015260008051602062001d5183398151915260448201527f616765206d7573742062652067726561746572207468616e2030000000000000606482015260840162000142565b6064831115620002285760405162461bcd60e51b8152602060048201526045602482015260008051602062001d5183398151915260448201527f616765206d757374206265206c657373207468616e206f7220657175616c207460648201526406f203130360dc1b608482015260a40162000142565b50505050505050620003b9565b6001600160a01b03811681146200024b57600080fd5b50565b80516200025b8162000235565b919050565b60008060008060008060c087890312156200027a57600080fd5b8651620002878162000235565b60208801519096506200029a8162000235565b8095505060408701519350606087015192506080870151915060a0870151620002c38162000235565b809150509295509295509295565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215620002fb57600080fd5b82516001600160401b03808211156200031357600080fd5b818501915085601f8301126200032857600080fd5b8151818111156200033d576200033d620002d1565b8060051b604051601f19603f83011681018181108582111715620003655762000365620002d1565b6040529182528482019250838101850191888311156200038457600080fd5b938501935b82851015620003ad576200039d856200024e565b8452938501939285019262000389565b98975050505050505050565b60805160a05160c05160e05161010051610120516118e062000471600039600081816101fe015281816109630152611063015260008181610172015261028c01526000818161014c0152818161072f0152610a5d01526000818161011c015261045b0152600081816102370152818161047d0152610d7601526000818160d0015281816103140152818161058e015281816108a401528181610b3501528181610cb001528181610e6e015261109001526118e06000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80635b2e9c0311610081578063be81c6941161005b578063be81c69414610235578063d45996f11461025b578063f6ac15c41461026e57600080fd5b80635b2e9c03146101df578063602b263b146101fc57806386644d1e1461022257600080fd5b80634b810d3e116100b25780634b810d3e1461014a5780634ed2859e1461017057806354fd4d501461019657600080fd5b8063186f0354146100ce57806338af7c5c1461011a575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b7f00000000000000000000000000000000000000000000000000000000000000005b604051908152602001610111565b7f000000000000000000000000000000000000000000000000000000000000000061013c565b7f000000000000000000000000000000000000000000000000000000000000000061013c565b6101d26040518060400160405280600581526020017f312e322e3000000000000000000000000000000000000000000000000000000081525081565b60405161011191906112e1565b6000546101ec9060ff1681565b6040519015158152602001610111565b7f00000000000000000000000000000000000000000000000000000000000000006100f0565b61013c6102303660046112fb565b610283565b7f00000000000000000000000000000000000000000000000000000000000000006100f0565b6101ec610269366004611339565b6102cc565b61028161027c36600461146c565b6104f9565b005b600060646102b17f0000000000000000000000000000000000000000000000000000000000000000846114ff565b6102bc90606361153c565b6102c69190611554565b92915050565b6040517f2f54bf6e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690632f54bf6e90602401602060405180830381865afa15801561035d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038191906115a4565b61041457604080517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482015260248101919091527f4c6976656e6573734d6f64756c653a20746865206f776e657220746f2072656d60448201527f6f7665206d75737420626520616e206f776e6572206f6620746865205361666560648201526084015b60405180910390fd5b6040517fe458779b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015242917f0000000000000000000000000000000000000000000000000000000000000000917f0000000000000000000000000000000000000000000000000000000000000000169063e458779b90602401602060405180830381865afa1580156104c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e891906115bf565b6104f2919061153c565b1092915050565b805182511461058a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f4c6976656e6573734d6f64756c653a20617272617973206d757374206265207460448201527f68652073616d65206c656e677468000000000000000000000000000000000000606482015260840161040b565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a0e67e2b6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156105f7573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261063d91908101906115d8565b60005490915060ff161561071f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152606f60248201527f4c6976656e6573734d6f64756c653a205468652073616665206861732062656560448201527f6e2073687574646f776e2c20746865204c6976656e6573734d6f64756c65206160648201527f6e64204c6976656e65737347756172642073686f756c642062652072656d6f7660848201527f6564206f72207265706c616365642e000000000000000000000000000000000060a482015260c40161040b565b805160005b8451811015610864577f000000000000000000000000000000000000000000000000000000000000000082106108025761077684828151811061076957610769611672565b60200260200101516102cc565b610802576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f4c6976656e6573734d6f64756c653a20746865206f776e657220746f2072656d60448201527f6f766520686173207369676e656420726563656e746c79000000000000000000606482015260840161040b565b8161080c816116a1565b92505061084c85828151811061082457610824611672565b602002602001015185838151811061083e5761083e611672565b602002602001015184610873565b8115610864578061085c816116d6565b915050610724565b5061086d6108a0565b50505050565b801561089157600061088482610283565b905061086d848483610e38565b61089b8383611039565b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a0e67e2b6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561090d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261095391908101906115d8565b80519091506001819003610a5b577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16826000815181106109ab576109ab611672565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614610a56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603960248201527f4c6976656e6573734d6f64756c653a206d757374207472616e73666572206f7760448201527f6e65727368697020746f2066616c6c6261636b206f776e657200000000000000606482015260840161040b565b610b31565b7f0000000000000000000000000000000000000000000000000000000000000000811015610b31576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152605e60248201527f4c6976656e6573734d6f64756c653a206d7573742072656d6f766520616c6c2060448201527f6f776e65727320616e64207472616e7366657220746f2066616c6c6261636b2060648201527f6f776e6572206966206e756d4f776e657273203c206d696e4f776e6572730000608482015260a40161040b565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e75235b86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc291906115bf565b9050610bcd82610283565b8114610c5b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603f60248201527f4c6976656e6573734d6f64756c653a20496e73756666696369656e742074687260448201527f6573686f6c6420666f7220746865206e756d626572206f66206f776e65727300606482015260840161040b565b6040517f5624b25b0000000000000000000000000000000000000000000000000000000081527f4a204f620c8c5ccdca3fd54d003badd85ba500436a431f0cbda4f558c93c34c86004820152600160248201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690635624b25b90604401600060405180830381865afa158015610d0c573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d529190810190611798565b610d5b906117cd565b60001c73ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff161461089b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4c6976656e6573734d6f64756c653a20677561726420686173206265656e206360448201527f68616e6765640000000000000000000000000000000000000000000000000000606482015260840161040b565b60405173ffffffffffffffffffffffffffffffffffffffff848116602483015283811660448301526064820183905260009182917f000000000000000000000000000000000000000000000000000000000000000090811691635229073f91908490608401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167ff8dc5dd900000000000000000000000000000000000000000000000000000000179052517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b168152610f4f93929190600090600401611812565b6000604051808303816000875af1158015610f6e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610fb4919081019061188f565b9150915081610ff157806040517fe94e84e900000000000000000000000000000000000000000000000000000000815260040161040b91906112e1565b60405173ffffffffffffffffffffffffffffffffffffffff8516907ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf90600090a25050505050565b60405173ffffffffffffffffffffffffffffffffffffffff838116602483015282811660448301527f00000000000000000000000000000000000000000000000000000000000000008116606483015260009182917f000000000000000000000000000000000000000000000000000000000000000090811691635229073f91908490608401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fe318b52b00000000000000000000000000000000000000000000000000000000179052517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815261117193929190600090600401611812565b6000604051808303816000875af1158015611190573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526111d6919081019061188f565b915091508161121357806040517fe94e84e900000000000000000000000000000000000000000000000000000000815260040161040b91906112e1565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011781556040517f903af33ae084e750e45a10a53f61a69a4c5444f13a59954f5b3cf96e2862b5f49190a150505050565b60005b8381101561128657818101518382015260200161126e565b8381111561086d5750506000910152565b600081518084526112af81602086016020860161126b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006112f46020830184611297565b9392505050565b60006020828403121561130d57600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461133657600080fd5b50565b60006020828403121561134b57600080fd5b81356112f481611314565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156113cc576113cc611356565b604052919050565b600067ffffffffffffffff8211156113ee576113ee611356565b5060051b60200190565b600082601f83011261140957600080fd5b8135602061141e611419836113d4565b611385565b82815260059290921b8401810191818101908684111561143d57600080fd5b8286015b8481101561146157803561145481611314565b8352918301918301611441565b509695505050505050565b6000806040838503121561147f57600080fd5b823567ffffffffffffffff8082111561149757600080fd5b6114a3868387016113f8565b935060208501359150808211156114b957600080fd5b506114c6858286016113f8565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611537576115376114d0565b500290565b6000821982111561154f5761154f6114d0565b500190565b60008261158a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b8051801515811461159f57600080fd5b919050565b6000602082840312156115b657600080fd5b6112f48261158f565b6000602082840312156115d157600080fd5b5051919050565b600060208083850312156115eb57600080fd5b825167ffffffffffffffff81111561160257600080fd5b8301601f8101851361161357600080fd5b8051611621611419826113d4565b81815260059190911b8201830190838101908783111561164057600080fd5b928401925b8284101561166757835161165881611314565b82529284019290840190611645565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000816116b0576116b06114d0565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611707576117076114d0565b5060010190565b600082601f83011261171f57600080fd5b815167ffffffffffffffff81111561173957611739611356565b61176a60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611385565b81815284602083860101111561177f57600080fd5b61179082602083016020870161126b565b949350505050565b6000602082840312156117aa57600080fd5b815167ffffffffffffffff8111156117c157600080fd5b6117908482850161170e565b8051602080830151919081101561180c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8160200360031b1b821691505b50919050565b73ffffffffffffffffffffffffffffffffffffffff851681528360208201526080604082015260006118476080830185611297565b905060028310611880577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82606083015295945050505050565b600080604083850312156118a257600080fd5b6118ab8361158f565b9150602083015167ffffffffffffffff8111156118c757600080fd5b6114c68582860161170e56fea164736f6c634300080f000a4c6976656e6573734d6f64756c653a207468726573686f6c6450657263656e74";

type LivenessModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LivenessModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LivenessModule__factory extends ContractFactory {
  constructor(...args: LivenessModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _safe: string,
    _livenessGuard: string,
    _livenessInterval: BigNumberish,
    _minOwners: BigNumberish,
    _thresholdPercentage: BigNumberish,
    _fallbackOwner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<LivenessModule> {
    return super.deploy(
      _safe,
      _livenessGuard,
      _livenessInterval,
      _minOwners,
      _thresholdPercentage,
      _fallbackOwner,
      overrides || {}
    ) as Promise<LivenessModule>;
  }
  override getDeployTransaction(
    _safe: string,
    _livenessGuard: string,
    _livenessInterval: BigNumberish,
    _minOwners: BigNumberish,
    _thresholdPercentage: BigNumberish,
    _fallbackOwner: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _safe,
      _livenessGuard,
      _livenessInterval,
      _minOwners,
      _thresholdPercentage,
      _fallbackOwner,
      overrides || {}
    );
  }
  override attach(address: string): LivenessModule {
    return super.attach(address) as LivenessModule;
  }
  override connect(signer: Signer): LivenessModule__factory {
    return super.connect(signer) as LivenessModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LivenessModuleInterface {
    return new utils.Interface(_abi) as LivenessModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LivenessModule {
    return new Contract(address, _abi, signerOrProvider) as LivenessModule;
  }
}

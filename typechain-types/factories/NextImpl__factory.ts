/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NextImpl, NextImplInterface } from "../NextImpl";

const _abi = [
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_init",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "slot21Init",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610222806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634351e6b61461003b578063942d341314610050575b600080fd5b61004e6100493660046101eb565b610089565b005b6100777f133700000000000000000000000000000000000000000000000000000000000081565b60405190815260200160405180910390f35b6000548190610100900460ff161580156100aa575060005460ff8083169116105b61013a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840160405180910390fd5b600080547f13370000000000000000000000000000000000000000000000000000000000006015557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001660ff8316908117610100177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6000602082840312156101fd57600080fd5b813560ff8116811461020e57600080fd5b939250505056fea164736f6c634300080f000a";

type NextImplConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NextImplConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NextImpl__factory extends ContractFactory {
  constructor(...args: NextImplConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<NextImpl> {
    return super.deploy(overrides || {}) as Promise<NextImpl>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NextImpl {
    return super.attach(address) as NextImpl;
  }
  override connect(signer: Signer): NextImpl__factory {
    return super.connect(signer) as NextImpl__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NextImplInterface {
    return new utils.Interface(_abi) as NextImplInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NextImpl {
    return new Contract(address, _abi, signerOrProvider) as NextImpl;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RelayActor,
  RelayActorInterface,
} from "../../CrossDomainMessenger.t.sol/RelayActor";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_op",
        type: "address",
        internalType: "contract OptimismPortal",
      },
      {
        name: "_xdm",
        type: "address",
        internalType: "contract L1CrossDomainMessenger",
      },
      {
        name: "_vm",
        type: "address",
        internalType: "contract Vm",
      },
      {
        name: "_doFail",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "hashes",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "numHashes",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "relay",
    inputs: [
      {
        name: "_value",
        type: "uint8",
        internalType: "uint8",
      },
      {
        name: "_message",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "reverted",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
] as const;

const _bytecode =
  "0x60806040526002805460ff1916905534801561001a57600080fd5b506040516111ce3803806111ce833981016040819052610039916100b3565b60028054610100600160a81b0319166101006001600160a01b0396871602179055600380546001600160a01b0319169385169390931790925560048054919093166001600160a81b031990911617600160a01b91151591909102179055610117565b6001600160a01b03811681146100b057600080fd5b50565b600080600080608085870312156100c957600080fd5b84516100d48161009b565b60208601519094506100e58161009b565b60408601519093506100f68161009b565b6060860151909250801515811461010c57600080fd5b939692955090935050565b6110a8806101266000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063348a71cb14610051578063501895ae1461006d5780635bc5eb4c14610080578063bc0af82a14610095575b600080fd5b61005a60005481565b6040519081526020015b60405180910390f35b61005a61007b366004610c43565b6100b2565b61009361008e366004610c8b565b6100d3565b005b6002546100a29060ff1681565b6040519015158152602001610064565b600181815481106100c257600080fd5b600091825260209091200154905081565b80516004907f02c806312cb859f1bc25448e39f87aa09857d83ccb4a837df55648e0000000009060009060209061010b90601f610da2565b6101159190610de9565b610120906003610dfd565b61012b90600f610da2565b600480546002546040517f70ca10bb00000000000000000000000000000000000000000000000000000000815261010090910473ffffffffffffffffffffffffffffffffffffffff90811693820193909352603260248201526044810186905292935016906370ca10bb90606401600060405180830381600087803b1580156101b357600080fd5b505af11580156101c7573d6000803e3d6000fd5b505050506002856101d89190610e3a565b60045490955060009074010000000000000000000000000000000000000000900460ff166102a8576003546040517fb28ade2500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063b28ade25906102589088908690600401610ec7565b602060405180830381865afa158015610275573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102999190610eef565b67ffffffffffffffff166102be565b6102be8263ffffffff1661ea6062013880610775565b905060006102f87e0100000000000000000000000000000000000000000000000000000000000085878a60ff168763ffffffff168b6107ca565b60018054808201825560008281527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6909101839055805492935090918190610341908490610da2565b9091555050600480546003546040517fb1b1b20900000000000000000000000000000000000000000000000000000000815292830184905273ffffffffffffffffffffffffffffffffffffffff91821692634c63e562929091169063b1b1b20990602401602060405180830381865afa1580156103c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e69190610f19565b15801561048357506003546040517fa4e7f8bd0000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff9091169063a4e7f8bd90602401602060405180830381865afa15801561045d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104819190610f19565b155b6040518263ffffffff1660e01b81526004016104a3911515815260200190565b60006040518083038186803b1580156104bb57600080fd5b505afa1580156104cf573d6000803e3d6000fd5b5050600480546002546040517f06447d5600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff6101009092048216938101939093521692506306447d569150602401600060405180830381600087803b15801561054957600080fd5b505af115801561055d573d6000803e3d6000fd5b505060045474010000000000000000000000000000000000000000900460ff169150610613905057600480546040517f08e4e11600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116916308e4e116916105e091908b9088908c908401610f3b565b600060405180830381600087803b1580156105fa57600080fd5b505af115801561060e573d6000803e3d6000fd5b505050505b60035473ffffffffffffffffffffffffffffffffffffffff166354aa43a38361064360ff8b16633b9aca00610f7f565b63ffffffff167e01000000000000000000000000000000000000000000000000000000000000888a8d8a8e6040518963ffffffff1660e01b815260040161068f96959493929190610fab565b6000604051808303818589803b1580156106a857600080fd5b5088f194505050505080156106bb575060015b6106eb57600280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555b60048054604080517f90c5013b000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff909216926390c5013b92828201926000929082900301818387803b15801561075457600080fd5b505af1158015610768573d6000803e3d6000fd5b5050505050505050505050565b6000610782848484610887565b90506107c36040518060400160405280600c81526020017f426f756e6420726573756c74000000000000000000000000000000000000000081525082610abf565b9392505050565b600060f087901c60018190036107f0576107e8888888888888610b54565b91505061087d565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f48617368696e673a20756e6b6e6f776e2063726f737320646f6d61696e206d6560448201527f73736167652076657273696f6e0000000000000000000000000000000000000060648201526084015b60405180910390fd5b9695505050505050565b600081831115610919576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5374645574696c7320626f756e642875696e743235362c75696e743235362c7560448201527f696e74323536293a204d6178206973206c657373207468616e206d696e2e00006064820152608401610874565b8284101580156109295750818411155b156109355750826107c3565b60006109418484611007565b61094c906001610da2565b90506003851115801561095e57508481115b156109755761096d8585610da2565b9150506107c3565b6109a060037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611007565b85101580156109d757506109d4857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611007565b81115b15610a1057610a06857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611007565b61096d9084611007565b82851115610a66576000610a248487611007565b90506000610a32838361101e565b905080600003610a47578493505050506107c3565b6001610a538288610da2565b610a5d9190611007565b93505050610ab7565b83851015610ab7576000610a7a8686611007565b90506000610a88838361101e565b905080600003610a9d578593505050506107c3565b610aa78186611007565b610ab2906001610da2565b935050505b509392505050565b610b508282604051602401610ad5929190611032565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc00000000000000000000000000000000000000000000000000000000179052610b77565b5050565b6000610b64878787878787610b83565b8051906020012090509695505050505050565b610b8081610c22565b50565b6060868686868686604051602401610ba096959493929190611054565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f54aa43a30000000000000000000000000000000000000000000000000000000017905290509695505050505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600060208284031215610c5557600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060408385031215610c9e57600080fd5b823560ff81168114610caf57600080fd5b9150602083013567ffffffffffffffff80821115610ccc57600080fd5b818501915085601f830112610ce057600080fd5b813581811115610cf257610cf2610c5c565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610d3857610d38610c5c565b81604052828152886020848701011115610d5157600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115610db557610db5610d73565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082610df857610df8610dba565b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e3557610e35610d73565b500290565b600060ff831680610e4d57610e4d610dba565b8060ff84160691505092915050565b6000815180845260005b81811015610e8257602081850181015186830182015201610e66565b81811115610e94576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b604081526000610eda6040830185610e5c565b905063ffffffff831660208301529392505050565b600060208284031215610f0157600080fd5b815167ffffffffffffffff811681146107c357600080fd5b600060208284031215610f2b57600080fd5b815180151581146107c357600080fd5b73ffffffffffffffffffffffffffffffffffffffff8516815260ff8416602082015263ffffffff8316604082015260806060820152600061087d6080830184610e5c565b600063ffffffff80831681851681830481118215151615610fa257610fa2610d73565b02949350505050565b86815285602082015273ffffffffffffffffffffffffffffffffffffffff8516604082015260ff8416606082015263ffffffff8316608082015260c060a08201526000610ffb60c0830184610e5c565b98975050505050505050565b60008282101561101957611019610d73565b500390565b60008261102d5761102d610dba565b500690565b6040815260006110456040830185610e5c565b90508260208301529392505050565b86815285602082015273ffffffffffffffffffffffffffffffffffffffff8516604082015283606082015282608082015260c060a08201526000610ffb60c0830184610e5c56fea164736f6c634300080f000a";

type RelayActorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayActorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RelayActor__factory extends ContractFactory {
  constructor(...args: RelayActorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _op: string,
    _xdm: string,
    _vm: string,
    _doFail: boolean,
    overrides?: Overrides & { from?: string }
  ): Promise<RelayActor> {
    return super.deploy(
      _op,
      _xdm,
      _vm,
      _doFail,
      overrides || {}
    ) as Promise<RelayActor>;
  }
  override getDeployTransaction(
    _op: string,
    _xdm: string,
    _vm: string,
    _doFail: boolean,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_op, _xdm, _vm, _doFail, overrides || {});
  }
  override attach(address: string): RelayActor {
    return super.attach(address) as RelayActor;
  }
  override connect(signer: Signer): RelayActor__factory {
    return super.connect(signer) as RelayActor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayActorInterface {
    return new utils.Interface(_abi) as RelayActorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RelayActor {
    return new Contract(address, _abi, signerOrProvider) as RelayActor;
  }
}

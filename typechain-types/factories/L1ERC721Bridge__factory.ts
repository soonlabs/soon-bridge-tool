/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  L1ERC721Bridge,
  L1ERC721BridgeInterface,
} from "../L1ERC721Bridge";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "MESSENGER",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract CrossDomainMessenger",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "OTHER_BRIDGE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "bridgeERC721",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "bridgeERC721To",
    inputs: [
      {
        name: "_localToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "_remoteToken",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_to",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_minGasLimit",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "_extraData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "deposits",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "finalizeBridgeERC721",
    inputs: [
      {
        name: "_localToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "_remoteToken",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_from",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_to",
        type: "address",
        internalType: "address",
      },
      {
        name: "_tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_extraData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_messenger",
        type: "address",
        internalType: "contract CrossDomainMessenger",
      },
      {
        name: "_superchainConfig",
        type: "address",
        internalType: "contract SuperchainConfig",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "messenger",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract CrossDomainMessenger",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "otherBridge",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "paused",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "superchainConfig",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract SuperchainConfig",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "version",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "ERC721BridgeFinalized",
    inputs: [
      {
        name: "localToken",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "remoteToken",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "from",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "to",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "extraData",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ERC721BridgeInitiated",
    inputs: [
      {
        name: "localToken",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "remoteToken",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "extraData",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001f60008062000025565b62000238565b600054610100900460ff1615808015620000465750600054600160ff909116105b8062000076575062000063306200019660201b62000a551760201c565b15801562000076575060005460ff166001145b620000df5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801562000103576000805461ff0019166101001790555b603280546001600160a01b0319166001600160a01b0384161790556200014a837f02c806312cb859f1bc25448e39f87aa09857d83ccb4a837df55648e000000000620001a5565b801562000191576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6001600160a01b03163b151590565b600054610100900460ff16620002125760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401620000d6565b600180546001600160a01b0319166001600160a01b039390931692909217909155600255565b6112b980620002486000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063698c58231161008157806399051c601161005b57806399051c6014610230578063b1ba537314610243578063c89701a21461025657600080fd5b8063698c5823146101ed5780637f46ddb214610200578063927ede2d1461021257600080fd5b8063485cc955116100b2578063485cc9551461018757806354fd4d501461019c5780635c975abb146101e557600080fd5b806311f4b572146100d957806335e80ab3146101225780633cb747bf14610167575b600080fd5b61010d6100e7366004610e86565b603160209081526000938452604080852082529284528284209052825290205460ff1681565b60405190151581526020015b60405180910390f35b6032546101429073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610119565b6001546101429073ffffffffffffffffffffffffffffffffffffffff1681565b61019a610195366004610ebb565b61025f565b005b6101d86040518060400160405280600c81526020017f322e312e312b626574612e31000000000000000000000000000000000000000081525081565b6040516101199190610f5f565b61010d61045a565b61019a6101fb366004610fdb565b6104f3565b6002545b604051908152602001610119565b60015473ffffffffffffffffffffffffffffffffffffffff16610142565b61019a61023e36600461105f565b610599565b61019a6102513660046110c6565b6109f3565b61020460025481565b600054610100900460ff161580801561027f5750600054600160ff909116105b806102995750303b158015610299575060005460ff166001145b61032a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561038857600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b603280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84161790556103f2837f02c806312cb859f1bc25448e39f87aa09857d83ccb4a837df55648e000000000610a71565b801561045557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b603254604080517f5c975abb000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff1691635c975abb9160048083019260209291908290030181865afa1580156104ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ee9190611140565b905090565b84610580576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f4552433732314272696467653a206e667420726563697069656e742063616e6e60448201527f6f742062652061646472657373283029000000000000000000000000000000006064820152608401610321565b6105908787338888888888610b53565b50505050505050565b60015473ffffffffffffffffffffffffffffffffffffffff16331480156106515750600254600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa15801561062b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064f9190611162565b145b6106dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603f60248201527f4552433732314272696467653a2066756e6374696f6e2063616e206f6e6c792060448201527f62652063616c6c65642066726f6d20746865206f7468657220627269646765006064820152608401610321565b6106e561045a565b1561074c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4c314552433732314272696467653a20706175736564000000000000000000006044820152606401610321565b3073ffffffffffffffffffffffffffffffffffffffff8816036107f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f4c314552433732314272696467653a206c6f63616c20746f6b656e2063616e6e60448201527f6f742062652073656c66000000000000000000000000000000000000000000006064820152608401610321565b73ffffffffffffffffffffffffffffffffffffffff87166000908152603160209081526040808320898452825280832086845290915290205460ff1615156001146108be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603960248201527f4c314552433732314272696467653a20546f6b656e204944206973206e6f742060448201527f657363726f77656420696e20746865204c3120427269646765000000000000006064820152608401610321565b73ffffffffffffffffffffffffffffffffffffffff87811660008181526031602090815260408083208b845282528083208884529091529081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055517f42842e0e000000000000000000000000000000000000000000000000000000008152306004820152918616602483015260448201859052906342842e0e90606401600060405180830381600087803b15801561097c57600080fd5b505af1158015610990573d6000803e3d6000fd5b5050505084868873ffffffffffffffffffffffffffffffffffffffff167fe2f372017c275f95383230d247edd3a33f30f7886fea54725142b8a28ff74613878787876040516109e294939291906111c4565b60405180910390a450505050505050565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f646973616c6c6f770000000000000000000000000000000000000000000000006044820152606401610321565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b600054610100900460ff16610b08576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610321565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9390931692909217909155600255565b86610be0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f4c314552433732314272696467653a2072656d6f746520746f6b656e2063616e60448201527f6e6f7420626520616464726573732830290000000000000000000000000000006064820152608401610321565b60006399051c6060e01b888a8989898888604051602401610c079796959493929190611204565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000959095169490941790935273ffffffffffffffffffffffffffffffffffffffff8c81166000818152603186528381208e825286528381208b82529095529382902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905590517f23b872dd000000000000000000000000000000000000000000000000000000008152908a166004820152306024820152604481018890529092506323b872dd90606401600060405180830381600087803b158015610d4557600080fd5b505af1158015610d59573d6000803e3d6000fd5b50506001546002546040517fe223d3db00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216935063e223d3db9250610db8918590899060040161125d565b600060405180830381600087803b158015610dd257600080fd5b505af1158015610de6573d6000803e3d6000fd5b505050508673ffffffffffffffffffffffffffffffffffffffff16888a73ffffffffffffffffffffffffffffffffffffffff167fe813d38164389e1a410b2aa5950f676511ff51ee99b4f64b2584c911319006b289898888604051610e4e949392919061128c565b60405180910390a4505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610e8357600080fd5b50565b600080600060608486031215610e9b57600080fd5b8335610ea681610e61565b95602085013595506040909401359392505050565b60008060408385031215610ece57600080fd5b8235610ed981610e61565b91506020830135610ee981610e61565b809150509250929050565b6000815180845260005b81811015610f1a57602081850181015186830182015201610efe565b81811115610f2c576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610f726020830184610ef4565b9392505050565b803563ffffffff81168114610f8d57600080fd5b919050565b60008083601f840112610fa457600080fd5b50813567ffffffffffffffff811115610fbc57600080fd5b602083019150836020828501011115610fd457600080fd5b9250929050565b600080600080600080600060c0888a031215610ff657600080fd5b873561100181610e61565b965060208801359550604088013594506060880135935061102460808901610f79565b925060a088013567ffffffffffffffff81111561104057600080fd5b61104c8a828b01610f92565b989b979a50959850939692959293505050565b600080600080600080600060c0888a03121561107a57600080fd5b873561108581610e61565b9650602088013595506040880135945060608801356110a381610e61565b93506080880135925060a088013567ffffffffffffffff81111561104057600080fd5b60008060008060008060a087890312156110df57600080fd5b86356110ea81610e61565b9550602087013594506040870135935061110660608801610f79565b9250608087013567ffffffffffffffff81111561112257600080fd5b61112e89828a01610f92565b979a9699509497509295939492505050565b60006020828403121561115257600080fd5b81518015158114610f7257600080fd5b60006020828403121561117457600080fd5b5051919050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b73ffffffffffffffffffffffffffffffffffffffff851681528360208201526060604082015260006111fa60608301848661117b565b9695505050505050565b878152600073ffffffffffffffffffffffffffffffffffffffff808916602084015280881660408401525085606083015284608083015260c060a083015261125060c08301848661117b565b9998505050505050505050565b8381526060602082015260006112766060830185610ef4565b905063ffffffff83166040830152949350505050565b8481528360208201526060604082015260006111fa60608301848661117b56fea164736f6c634300080f000a";

type L1ERC721BridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L1ERC721BridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L1ERC721Bridge__factory extends ContractFactory {
  constructor(...args: L1ERC721BridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<L1ERC721Bridge> {
    return super.deploy(overrides || {}) as Promise<L1ERC721Bridge>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): L1ERC721Bridge {
    return super.attach(address) as L1ERC721Bridge;
  }
  override connect(signer: Signer): L1ERC721Bridge__factory {
    return super.connect(signer) as L1ERC721Bridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L1ERC721BridgeInterface {
    return new utils.Interface(_abi) as L1ERC721BridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L1ERC721Bridge {
    return new Contract(address, _abi, signerOrProvider) as L1ERC721Bridge;
  }
}

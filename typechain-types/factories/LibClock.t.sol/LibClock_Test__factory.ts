/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LibClock_Test,
  LibClock_TestInterface,
} from "../../LibClock.t.sol/LibClock_Test";

const _abi = [
  {
    type: "function",
    name: "IS_TEST",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeArtifacts",
    inputs: [],
    outputs: [
      {
        name: "excludedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeContracts",
    inputs: [],
    outputs: [
      {
        name: "excludedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeSenders",
    inputs: [],
    outputs: [
      {
        name: "excludedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "failed",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetArtifactSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifactSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetArtifacts",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetContracts",
    inputs: [],
    outputs: [
      {
        name: "targetedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetInterfaces",
    inputs: [],
    outputs: [
      {
        name: "targetedInterfaces_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzInterface[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "artifacts",
            type: "string[]",
            internalType: "string[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSenders",
    inputs: [],
    outputs: [
      {
        name: "targetedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "testFuzz_duration_succeeds",
    inputs: [
      {
        name: "_duration",
        type: "uint64",
        internalType: "Duration",
      },
      {
        name: "_timestamp",
        type: "uint64",
        internalType: "Timestamp",
      },
    ],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "testFuzz_timestamp_succeeds",
    inputs: [
      {
        name: "_duration",
        type: "uint64",
        internalType: "Duration",
      },
      {
        name: "_timestamp",
        type: "uint64",
        internalType: "Timestamp",
      },
    ],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "event",
    name: "log",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_address",
    inputs: [
      {
        name: "",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes32",
    inputs: [
      {
        name: "",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_int",
    inputs: [
      {
        name: "",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_address",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes32",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_string",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_string",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_uint",
    inputs: [
      {
        name: "",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "logs",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x6080604052600c8054600160ff199182168117909255601e80549091169091179055348015602b575f80fd5b50610de0806100395f395ff3fe608060405234801561000f575f80fd5b50600436106100da575f3560e01c806385226c8111610088578063b5508aa911610063578063b5508aa91461017b578063ba414fa614610183578063e20c9f711461019b578063fa7626d4146101a3575f80fd5b806385226c811461014b578063916a17c614610160578063aa27447714610168575f80fd5b80633f7286f4116100b85780633f7286f41461011957806366d9a9a014610121578063693d349014610136575f80fd5b80631ed7831c146100de5780632ade3880146100fc5780633e5e3c2314610111575b5f80fd5b6100e66101b0565b6040516100f391906109ec565b60405180910390f35b61010461021d565b6040516100f39190610a45565b6100e6610366565b6100e66103d1565b61012961043c565b6040516100f39190610b83565b610149610144366004610c81565b61053f565b005b610153610562565b6040516100f39190610cb8565b61012961062d565b610149610176366004610c81565b610730565b610153610763565b61018b61082e565b60405190151581526020016100f3565b6100e66108fe565b601e5461018b9060ff1681565b6060601680548060200260200160405190810160405280929190818152602001828054801561021357602002820191905f5260205f20905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116101e8575b5050505050905090565b6060601d805480602002602001604051908101604052809291908181526020015f905b8282101561035d575f848152602080822060408051808201825260028702909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939591948681019491929084015b82821015610346578382905f5260205f200180546102bb90610d6b565b80601f01602080910402602001604051908101604052809291908181526020018280546102e790610d6b565b80156103325780601f1061030957610100808354040283529160200191610332565b820191905f5260205f20905b81548152906001019060200180831161031557829003601f168201915b50505050508152602001906001019061029e565b505050508152505081526020019060010190610240565b50505050905090565b6060601880548060200260200160405190810160405280929190818152602001828054801561021357602002820191905f5260205f2090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116101e8575050505050905090565b6060601780548060200260200160405190810160405280929190818152602001828054801561021357602002820191905f5260205f2090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116101e8575050505050905090565b6060601b805480602002602001604051908101604052809291908181526020015f905b8282101561035d575f84815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561052757602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116104d45790505b5050505050815250508152602001906001019061045f565b604082901b811761055d67ffffffffffffffff808316908416610969565b505050565b6060601a805480602002602001604051908101604052809291908181526020015f905b8282101561035d578382905f5260205f200180546105a290610d6b565b80601f01602080910402602001604051908101604052809291908181526020018280546105ce90610d6b565b80156106195780601f106105f057610100808354040283529160200191610619565b820191905f5260205f20905b8154815290600101906020018083116105fc57829003601f168201915b505050505081526020019060010190610585565b6060601c805480602002602001604051908101604052809291908181526020015f905b8282101561035d575f84815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561071857602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116106c55790505b50505050508152505081526020019060010190610650565b604082811b82179061055d9082901c67ffffffffffffffff1667ffffffffffffffff168467ffffffffffffffff16610969565b60606019805480602002602001604051908101604052809291908181526020015f905b8282101561035d578382905f5260205f200180546107a390610d6b565b80601f01602080910402602001604051908101604052809291908181526020018280546107cf90610d6b565b801561081a5780601f106107f15761010080835404028352916020019161081a565b820191905f5260205f20905b8154815290600101906020018083116107fd57829003601f168201915b505050505081526020019060010190610786565b6008545f9060ff1615610845575060085460ff1690565b6040517f667f9d70000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d600482018190527f6661696c6564000000000000000000000000000000000000000000000000000060248301525f9163667f9d7090604401602060405180830381865afa1580156108d3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108f79190610dbc565b1415905090565b6060601580548060200260200160405190810160405280929190818152602001828054801561021357602002820191905f5260205f2090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116101e8575050505050905090565b6040517f98296c540000000000000000000000000000000000000000000000000000000081526004810183905260248101829052737109709ecfa91a80626ff3989d68f67f5b1dd12d906398296c54906044015f6040518083038186803b1580156109d2575f80fd5b505afa1580156109e4573d5f803e3d5ffd5b505050505050565b602080825282518282018190525f9190848201906040850190845b81811015610a3957835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610a07565b50909695505050505050565b5f60208083018184528085518083526040925060408601915060408160051b8701018488015f5b83811015610b75577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08984030185528151805173ffffffffffffffffffffffffffffffffffffffff1684528701518784018790528051878501819052908801906060600582901b8601810191908601905f5b81811015610b5f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa088850301835284518051808652808e83018f88015e5f8682018f0152958d0195601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169094018c019350918b0191600101610ade565b5050509588019593505090860190600101610a6c565b509098975050505050505050565b5f60208083018184528085518083526040925060408601915060408160051b8701018488015f5b83811015610b75578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00185528151805173ffffffffffffffffffffffffffffffffffffffff1684528701518784018790528051878501819052908801905f9060608601905b80831015610c545783517fffffffff00000000000000000000000000000000000000000000000000000000168252928a019260019290920191908a0190610c12565b50968901969450505090860190600101610baa565b67ffffffffffffffff81168114610c7e575f80fd5b50565b5f8060408385031215610c92575f80fd5b8235610c9d81610c69565b91506020830135610cad81610c69565b809150509250929050565b5f602080830181845280855180835260408601915060408160051b87010192508387015f5b82811015610d5e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845281518051808752808883018989015e5f878201890152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016909501860194509285019290850190600101610cdd565b5092979650505050505050565b600181811c90821680610d7f57607f821691505b602082108103610db6577f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b50919050565b5f60208284031215610dcc575f80fd5b505191905056fea164736f6c6343000819000a";

type LibClock_TestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LibClock_TestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LibClock_Test__factory extends ContractFactory {
  constructor(...args: LibClock_TestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<LibClock_Test> {
    return super.deploy(overrides || {}) as Promise<LibClock_Test>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LibClock_Test {
    return super.attach(address) as LibClock_Test;
  }
  override connect(signer: Signer): LibClock_Test__factory {
    return super.connect(signer) as LibClock_Test__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibClock_TestInterface {
    return new utils.Interface(_abi) as LibClock_TestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibClock_Test {
    return new Contract(address, _abi, signerOrProvider) as LibClock_Test;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CheckGelatoLow,
  CheckGelatoLowInterface,
} from "../../CheckGelatoLow.sol/CheckGelatoLow";

const _abi = [
  {
    type: "function",
    name: "check",
    inputs: [
      {
        name: "_params",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "execute_",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "_EventToExposeStructInABI__Params",
    inputs: [
      {
        name: "params",
        type: "tuple",
        indexed: false,
        internalType: "struct CheckGelatoLow.Params",
        components: [
          {
            name: "treasury",
            type: "address",
            internalType: "address",
          },
          {
            name: "threshold",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "recipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60c0604052600e60809081526d436865636b47656c61746f4c6f7760901b60a05260009061002d90826100df565b5034801561003a57600080fd5b5061019e565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061006a57607f821691505b60208210810361008a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156100da57600081815260208120601f850160051c810160208610156100b75750805b601f850160051c820191505b818110156100d6578281556001016100c3565b5050505b505050565b81516001600160401b038111156100f8576100f8610040565b61010c816101068454610056565b84610090565b602080601f83116001811461014157600084156101295750858301515b600019600386901b1c1916600185901b1785556100d6565b600085815260208120601f198616915b8281101561017057888601518255948401946001909101908401610151565b508582101561018e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610558806101ad6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806306fdde031461003b578063c64b3bb514610059575b600080fd5b61004361007c565b60405161005091906102a2565b60405180910390f35b61006c610067366004610344565b61010a565b6040519015158152602001610050565b6000805461008990610413565b80601f01602080910402602001604051908101604052809291908181526020018280546100b590610413565b80156101025780601f106100d757610100808354040283529160200191610102565b820191906000526020600020905b8154815290600101906020018083116100e557829003601f168201915b505050505081565b60008082806020019051810190610121919061048f565b805160408083015190517f562ac3dc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216600482015273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee60248201819052939450600092919091169063562ac3dc90604401602060405180830381865afa1580156101b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101dc91906104f4565b835160408086015190517fe1380b7200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182166004820152858216602482015292935060009291169063e1380b7290604401602060405180830381865afa15801561025d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028191906104f4565b9050600061028f828461050d565b6020909501519094109695505050505050565b600060208083528351808285015260005b818110156102cf578581018301518582016040015282016102b3565b818111156102e1576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561035657600080fd5b813567ffffffffffffffff8082111561036e57600080fd5b818401915084601f83011261038257600080fd5b81358181111561039457610394610315565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156103da576103da610315565b816040528281528760208487010111156103f357600080fd5b826020860160208301376000928101602001929092525095945050505050565b600181811c9082168061042757607f821691505b602082108103610460577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b805173ffffffffffffffffffffffffffffffffffffffff8116811461048a57600080fd5b919050565b6000606082840312156104a157600080fd5b6040516060810181811067ffffffffffffffff821117156104c4576104c4610315565b6040526104d083610466565b8152602083015160208201526104e860408401610466565b60408201529392505050565b60006020828403121561050657600080fd5b5051919050565b600082821015610546577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50039056fea164736f6c634300080f000a";

type CheckGelatoLowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CheckGelatoLowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CheckGelatoLow__factory extends ContractFactory {
  constructor(...args: CheckGelatoLowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<CheckGelatoLow> {
    return super.deploy(overrides || {}) as Promise<CheckGelatoLow>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CheckGelatoLow {
    return super.attach(address) as CheckGelatoLow;
  }
  override connect(signer: Signer): CheckGelatoLow__factory {
    return super.connect(signer) as CheckGelatoLow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CheckGelatoLowInterface {
    return new utils.Interface(_abi) as CheckGelatoLowInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CheckGelatoLow {
    return new Contract(address, _abi, signerOrProvider) as CheckGelatoLow;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TransientReentrancyAwareTest,
  TransientReentrancyAwareTestInterface,
} from "../../TransientContext.t.sol/TransientReentrancyAwareTest";

const _abi = [
  {
    type: "function",
    name: "IS_TEST",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeArtifacts",
    inputs: [],
    outputs: [
      {
        name: "excludedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeContracts",
    inputs: [],
    outputs: [
      {
        name: "excludedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeSenders",
    inputs: [],
    outputs: [
      {
        name: "excludedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "failed",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetArtifactSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifactSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetArtifacts",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetContracts",
    inputs: [],
    outputs: [
      {
        name: "targetedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetInterfaces",
    inputs: [],
    outputs: [
      {
        name: "targetedInterfaces_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzInterface[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "artifacts",
            type: "string[]",
            internalType: "string[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSenders",
    inputs: [],
    outputs: [
      {
        name: "targetedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "testFuzz_callDepth_succeeds",
    inputs: [
      {
        name: "_callDepth",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testFuzz_decrement_succeeds",
    inputs: [
      {
        name: "_startingCallDepth",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testFuzz_get_succeeds",
    inputs: [
      {
        name: "_slot",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testFuzz_increment_succeeds",
    inputs: [
      {
        name: "_startingCallDepth",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testFuzz_reentrantAware_multiDepth_succeeds",
    inputs: [
      {
        name: "_callDepth",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_slot",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_value1",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_value2",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testFuzz_reentrantAware_succeeds",
    inputs: [
      {
        name: "_callDepth",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_slot",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testFuzz_setGet_succeeds",
    inputs: [
      {
        name: "_slot",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testFuzz_setGet_twice_differentDepth_succeeds",
    inputs: [
      {
        name: "_slot",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_value1",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_value2",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testFuzz_setGet_twice_sameDepth_succeeds",
    inputs: [
      {
        name: "_slot",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_value1",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_value2",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testFuzz_set_succeeds",
    inputs: [
      {
        name: "_slot",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "log",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_address",
    inputs: [
      {
        name: "",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes32",
    inputs: [
      {
        name: "",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_int",
    inputs: [
      {
        name: "",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_address",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes32",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_string",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_string",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_uint",
    inputs: [
      {
        name: "",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "logs",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "NotEntered",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrantCall",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052600c8054600160ff199182168117909255601e8054909116821790556048907f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5d605a565b601f553480156055575f80fd5b50607e565b81810381811115607857634e487b7160e01b5f52601160045260245ffd5b92915050565b6119898061008b5f395ff3fe608060405234801561000f575f80fd5b506004361061016e575f3560e01c80634320f5d1116100d2578063b5508aa911610088578063e20c9f7111610063578063e20c9f71146102b4578063edfa0f0f146102bc578063fa7626d4146102cf575f80fd5b8063b5508aa914610281578063ba414fa614610289578063d3360109146102a1575f80fd5b806385226c81116100b857806385226c811461025157806388c366a014610266578063916a17c614610279575f80fd5b80634320f5d11461022957806366d9a9a01461023c575f80fd5b806329208e6b11610127578063301e9c711161010d578063301e9c71146102065780633e5e3c23146102195780633f7286f414610221575f80fd5b806329208e6b146101de5780632ade3880146101f1575f80fd5b80631ed7831c116101575780631ed7831c1461019a57806324ddf8b0146101b85780632712f66c146101cb575f80fd5b806306ed7459146101725780631ea4e17e14610187575b5f80fd5b6101856101803660046114fc565b6102dc565b005b6101856101953660046114fc565b6103c1565b6101a2610510565b6040516101af9190611525565b60405180910390f35b6101856101c636600461157e565b61057d565b6101856101d936600461157e565b6105e4565b6101856101ec36600461159e565b6106a8565b6101f96108ab565b6040516101af91906115cd565b6101856102143660046114fc565b6109f4565b6101a2610b71565b6101a2610bdc565b61018561023736600461170b565b610c47565b610244610d2a565b6040516101af9190611722565b610259610e2d565b6040516101af9190611808565b61018561027436600461157e565b610ef8565b610244610f3f565b610259611042565b61029161110d565b60405190151581526020016101af565b6101856102af36600461170b565b6111dd565b6101a261120c565b6101856102ca36600461170b565b611277565b601e546102919060ff1681565b6103087f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c5b5f611377565b610312838361057d565b7f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c5f90815260208490526040902061034d905c5b83611377565b6103777f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c610302565b610381838261057d565b7f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c5f9081526020849052604090206103bc905c5b82611377565b505050565b6103eb7f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c610302565b6103f5838361057d565b7f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c5f90815260208490526040902061042e905c610347565b6104366113fa565b6104627f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c6001611377565b61046c838261057d565b7f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c5f9081526020849052604090206104a5905c6103b6565b6104ad611443565b6104d77f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c610302565b7f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c5f9081526020849052604090206103bc905c610347565b6060601680548060200260200160405190810160405280929190818152602001828054801561057357602002820191905f5260205f20905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610548575b5050505050905090565b610587828261148c565b604080517f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c60208083019190915281830185905282518083038401815260609092019092528051910120805c6105de8184611377565b50505050565b7f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c5f90815260208390526040902061061d905c610302565b5f7f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c604080516020810192909252810184905260600160405160208183030381529060405280519060200120905081815d7f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c5f9081526020849052604090206103bc905c610347565b737109709ecfa91a80626ff3989d68f67f5b1dd12d634c63e5626106ed60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6118e8565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815290871060048201526024015f6040518083038186803b15801561073a575f80fd5b505afa15801561074c573d5f803e3d5ffd5b5050505083601f545d6107807f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c85611377565b61078b8383836114be565b7f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c5f9081526020849052604090206107c4905c610302565b6107cc6113fa565b6108017f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c6107fc866001611901565b611377565b7f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c5f90815260208490526040902061083a905c610347565b6108426113fa565b6108727f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c6107fc866002611901565b7f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c5f9081526020849052604090206105de905c6103b6565b6060601d805480602002602001604051908101604052809291908181526020015f905b828210156109eb575f848152602080822060408051808201825260028702909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939591948681019491929084015b828210156109d4578382905f5260205f2001805461094990611914565b80601f016020809104026020016040519081016040528092919081815260200182805461097590611914565b80156109c05780601f10610997576101008083540402835291602001916109c0565b820191905f5260205f20905b8154815290600101906020018083116109a357829003601f168201915b50505050508152602001906001019061092c565b5050505081525050815260200190600101906108ce565b50505050905090565b6040517f4c63e5620000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84106004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90634c63e562906024015f6040518083038186803b158015610a77575f80fd5b505afa158015610a89573d5f803e3d5ffd5b5050505082601f545d610abd7f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c84611377565b610ac782826114e2565b7f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c5f908152602083905260409020610b00905c610302565b610b086113fa565b610b387f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c6107fc856001611901565b7f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c5f9081526020839052604090206103bc905c6103b6565b6060601880548060200260200160405190810160405280929190818152602001828054801561057357602002820191905f5260205f2090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610548575050505050905090565b6060601780548060200260200160405190810160405280929190818152602001828054801561057357602002820191905f5260205f2090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610548575050505050905090565b6040517f4c63e5620000000000000000000000000000000000000000000000000000000081528115156004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90634c63e562906024015f6040518083038186803b158015610caa575f80fd5b505afa158015610cbc573d5f803e3d5ffd5b5050505080601f545d610cef7f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c6103b6565b610cf7611443565b610d277f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c6107fc6001846118e8565b50565b6060601b805480602002602001604051908101604052809291908181526020015f905b828210156109eb575f84815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939491938583019392830182828015610e1557602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411610dc25790505b50505050508152505081526020019060010190610d4d565b6060601a805480602002602001604051908101604052809291908181526020015f905b828210156109eb578382905f5260205f20018054610e6d90611914565b80601f0160208091040260200160405190810160405280929190818152602001828054610e9990611914565b8015610ee45780601f10610ebb57610100808354040283529160200191610ee4565b820191905f5260205f20905b815481529060010190602001808311610ec757829003601f168201915b505050505081526020019060010190610e50565b610f02828261057d565b7f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c5f908152602083905260409020610f3b905c6103b6565b5050565b6060601c805480602002602001604051908101604052809291908181526020015f905b828210156109eb575f84815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561102a57602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411610fd75790505b50505050508152505081526020019060010190610f62565b60606019805480602002602001604051908101604052809291908181526020015f905b828210156109eb578382905f5260205f2001805461108290611914565b80601f01602080910402602001604051908101604052809291908181526020018280546110ae90611914565b80156110f95780601f106110d0576101008083540402835291602001916110f9565b820191905f5260205f20905b8154815290600101906020018083116110dc57829003601f168201915b505050505081526020019060010190611065565b6008545f9060ff1615611124575060085460ff1690565b6040517f667f9d70000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d600482018190527f6661696c6564000000000000000000000000000000000000000000000000000060248301525f9163667f9d7090604401602060405180830381865afa1580156111b2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111d69190611965565b1415905090565b80601f545d610d277f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c6103b6565b6060601580548060200260200160405190810160405280929190818152602001828054801561057357602002820191905f5260205f2090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610548575050505050905090565b6040517f4c63e5620000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82106004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90634c63e562906024015f6040518083038186803b1580156112fa575f80fd5b505afa15801561130c573d5f803e3d5ffd5b5050505080601f545d61133f7f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c6103b6565b6113476113fa565b610d277f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c6107fc836001611901565b6040517f98296c540000000000000000000000000000000000000000000000000000000081526004810183905260248101829052737109709ecfa91a80626ff3989d68f67f5b1dd12d906398296c54906044015f6040518083038186803b1580156113e0575f80fd5b505afa1580156113f2573d5f803e3d5ffd5b505050505050565b60017f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c017f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5d565b60017f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c037f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5d565b7f7a74fd168763fd280eaec3bcd2fd62d0e795027adc8183a693c497a7c2b10b5c5c5f52816020528060405f205d5050565b6114c66113fa565b6114d0838361148c565b6114da83826114e2565b6103bc611443565b6114ea6113fa565b6114f4828261148c565b610f3b611443565b5f805f6060848603121561150e575f80fd5b505081359360208301359350604090920135919050565b602080825282518282018190525f9190848201906040850190845b8181101561157257835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101611540565b50909695505050505050565b5f806040838503121561158f575f80fd5b50508035926020909101359150565b5f805f80608085870312156115b1575f80fd5b5050823594602084013594506040840135936060013592509050565b5f60208083018184528085518083526040925060408601915060408160051b8701018488015f5b838110156116fd577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08984030185528151805173ffffffffffffffffffffffffffffffffffffffff1684528701518784018790528051878501819052908801906060600582901b8601810191908601905f5b818110156116e7577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa088850301835284518051808652808e83018f88015e5f8682018f0152958d0195601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169094018c019350918b0191600101611666565b50505095880195935050908601906001016115f4565b509098975050505050505050565b5f6020828403121561171b575f80fd5b5035919050565b5f60208083018184528085518083526040925060408601915060408160051b8701018488015f5b838110156116fd578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00185528151805173ffffffffffffffffffffffffffffffffffffffff1684528701518784018790528051878501819052908801905f9060608601905b808310156117f35783517fffffffff00000000000000000000000000000000000000000000000000000000168252928a019260019290920191908a01906117b1565b50968901969450505090860190600101611749565b5f602080830181845280855180835260408601915060408160051b87010192508387015f5b828110156118ae577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845281518051808752808883018989015e5f878201890152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690950186019450928501929085019060010161182d565b5092979650505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b818103818111156118fb576118fb6118bb565b92915050565b808201808211156118fb576118fb6118bb565b600181811c9082168061192857607f821691505b60208210810361195f577f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b50919050565b5f60208284031215611975575f80fd5b505191905056fea164736f6c6343000819000a";

type TransientReentrancyAwareTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransientReentrancyAwareTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TransientReentrancyAwareTest__factory extends ContractFactory {
  constructor(...args: TransientReentrancyAwareTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<TransientReentrancyAwareTest> {
    return super.deploy(
      overrides || {}
    ) as Promise<TransientReentrancyAwareTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TransientReentrancyAwareTest {
    return super.attach(address) as TransientReentrancyAwareTest;
  }
  override connect(signer: Signer): TransientReentrancyAwareTest__factory {
    return super.connect(signer) as TransientReentrancyAwareTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransientReentrancyAwareTestInterface {
    return new utils.Interface(_abi) as TransientReentrancyAwareTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TransientReentrancyAwareTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TransientReentrancyAwareTest;
  }
}

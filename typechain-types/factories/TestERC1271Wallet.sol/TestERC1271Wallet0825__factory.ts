/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestERC1271Wallet0825,
  TestERC1271Wallet0825Interface,
} from "../../TestERC1271Wallet.sol/TestERC1271Wallet0825";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "originalOwner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isValidSignature",
    inputs: [
      {
        name: "hash",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "magicValue",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b506040516109e73803806109e783398101604081905261002e9161016e565b61003733610046565b61004081610095565b5061019b565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61009d610113565b6001600160a01b0381166101075760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61011081610046565b50565b5f546001600160a01b0316331461016c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100fe565b565b5f6020828403121561017e575f80fd5b81516001600160a01b0381168114610194575f80fd5b9392505050565b61083f806101a85f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c80631626ba7e1461004e578063715018a6146100975780638da5cb5b146100a1578063f2fde38b146100c8575b5f80fd5b61006161005c3660046106ff565b6100db565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b61009f610148565b005b5f5460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161008e565b61009f6100d63660046107d2565b61015b565b5f805473ffffffffffffffffffffffffffffffffffffffff166100fe8484610217565b73ffffffffffffffffffffffffffffffffffffffff161461011f575f610141565b7f1626ba7e000000000000000000000000000000000000000000000000000000005b9392505050565b610150610239565b6101595f6102b9565b565b610163610239565b73ffffffffffffffffffffffffffffffffffffffff811661020b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610214816102b9565b50565b5f805f610224858561032d565b915091506102318161036f565b509392505050565b5f5473ffffffffffffffffffffffffffffffffffffffff163314610159576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610202565b5f805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f808251604103610361576020830151604084015160608501515f1a610355878285856105c2565b94509450505050610368565b505f905060025b9250929050565b5f81600481111561038257610382610805565b0361038a5750565b600181600481111561039e5761039e610805565b03610405576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610202565b600281600481111561041957610419610805565b03610480576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610202565b600381600481111561049457610494610805565b03610521576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401610202565b600481600481111561053557610535610805565b03610214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401610202565b5f807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156105f757505f905060036106c9565b8460ff16601b1415801561060f57508460ff16601c14155b1561061f57505f905060046106c9565b604080515f8082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610670573d5f803e3d5ffd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166106c3575f600192509250506106c9565b91505f90505b94509492505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f8060408385031215610710575f80fd5b82359150602083013567ffffffffffffffff8082111561072e575f80fd5b818501915085601f830112610741575f80fd5b813581811115610753576107536106d2565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610799576107996106d2565b816040528281528860208487010111156107b1575f80fd5b826020860160208301375f6020848301015280955050505050509250929050565b5f602082840312156107e2575f80fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610141575f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffdfea164736f6c6343000819000a";

type TestERC1271Wallet0825ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestERC1271Wallet0825ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestERC1271Wallet0825__factory extends ContractFactory {
  constructor(...args: TestERC1271Wallet0825ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    originalOwner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<TestERC1271Wallet0825> {
    return super.deploy(
      originalOwner,
      overrides || {}
    ) as Promise<TestERC1271Wallet0825>;
  }
  override getDeployTransaction(
    originalOwner: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(originalOwner, overrides || {});
  }
  override attach(address: string): TestERC1271Wallet0825 {
    return super.attach(address) as TestERC1271Wallet0825;
  }
  override connect(signer: Signer): TestERC1271Wallet0825__factory {
    return super.connect(signer) as TestERC1271Wallet0825__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC1271Wallet0825Interface {
    return new utils.Interface(_abi) as TestERC1271Wallet0825Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC1271Wallet0825 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestERC1271Wallet0825;
  }
}

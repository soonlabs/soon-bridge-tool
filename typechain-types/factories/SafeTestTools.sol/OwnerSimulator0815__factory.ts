/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OwnerSimulator0815,
  OwnerSimulator0815Interface,
} from "../../SafeTestTools.sol/OwnerSimulator0815";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_owners",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "_threshold",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addOwnerWithThreshold",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_threshold",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "changeThreshold",
    inputs: [
      {
        name: "_threshold",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getOwners",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getThreshold",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "removeOwner",
    inputs: [
      {
        name: "prevOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_threshold",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removeOwnerWrapped",
    inputs: [
      {
        name: "prevOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_threshold",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "swapOwner",
    inputs: [
      {
        name: "prevOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "oldOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "AddedOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ChangedThreshold",
    inputs: [
      {
        name: "threshold",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RemovedOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620013a3380380620013a38339810160408190526200003491620002c4565b62000040828262000048565b5050620003dc565b60025415620000865760405162461bcd60e51b8152602060048201526005602482015264047533230360dc1b60448201526064015b60405180910390fd5b8151811115620000c15760405162461bcd60e51b8152602060048201526005602482015264475332303160d81b60448201526064016200007d565b6001811015620000fc5760405162461bcd60e51b815260206004820152600560248201526423a999181960d91b60448201526064016200007d565b600160005b83518110156200025b5760008482815181106200012257620001226200039e565b6020026020010151905060006001600160a01b0316816001600160a01b0316141580156200015a57506001600160a01b038116600114155b80156200017057506001600160a01b0381163014155b80156200018f5750806001600160a01b0316836001600160a01b031614155b620001c55760405162461bcd60e51b8152602060048201526005602482015264475332303360d81b60448201526064016200007d565b6001600160a01b038181166000908152602081905260409020541615620002175760405162461bcd60e51b815260206004820152600560248201526411d4cc8c0d60da1b60448201526064016200007d565b6001600160a01b03928316600090815260208190526040902080546001600160a01b03191693821693909317909255806200025281620003b4565b91505062000101565b506001600160a01b0316600090815260208190526040902080546001600160a01b03191660019081179091559151909155600255565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b0381168114620002bf57600080fd5b919050565b60008060408385031215620002d857600080fd5b82516001600160401b0380821115620002f057600080fd5b818501915085601f8301126200030557600080fd5b81516020828211156200031c576200031c62000291565b8160051b604051601f19603f8301168101818110868211171562000344576200034462000291565b6040529283528183019350848101820192898411156200036357600080fd5b948201945b838610156200038c576200037c86620002a7565b8552948201949382019362000368565b97909101519698969750505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620003d557634e487b7160e01b600052601160045260246000fd5b5060010190565b610fb780620003ec6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063e318b52b1161005b578063e318b52b146100f2578063e75235b814610105578063f8dc5dd914610116578063fcb7a4951461012957600080fd5b80630d582f131461008d5780632f54bf6e146100a2578063694e80c3146100ca578063a0e67e2b146100dd575b600080fd5b6100a061009b366004610d5b565b61013c565b005b6100b56100b0366004610d85565b610393565b60405190151581526020015b60405180910390f35b6100a06100d8366004610da7565b6103e8565b6100e5610502565b6040516100c19190610dc0565b6100a0610100366004610e1a565b610619565b6002546040519081526020016100c1565b6100a0610124366004610e5d565b6109a3565b6100a0610137366004610e5d565b610c34565b610144610cc7565b73ffffffffffffffffffffffffffffffffffffffff821615801590610180575073ffffffffffffffffffffffffffffffffffffffff8216600114155b80156101a2575073ffffffffffffffffffffffffffffffffffffffff82163014155b61020d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303300000000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff828116600090815260208190526040902054161561029c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533230340000000000000000000000000000000000000000000000000000006044820152606401610204565b600060208190527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d805473ffffffffffffffffffffffffffffffffffffffff858116808552604085208054929093167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179092556001808552835490911690911790915580549161032f83610ec8565b909155505060405173ffffffffffffffffffffffffffffffffffffffff831681527f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea269060200160405180910390a1806002541461038f5761038f816103e8565b5050565b600073ffffffffffffffffffffffffffffffffffffffff82166001148015906103e2575073ffffffffffffffffffffffffffffffffffffffff8281166000908152602081905260409020541615155b92915050565b6103f0610cc7565b60015481111561045c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533230310000000000000000000000000000000000000000000000000000006044820152606401610204565b60018110156104c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533230320000000000000000000000000000000000000000000000000000006044820152606401610204565b60028190556040518181527f610f7ff2b304ae8903c3de74c60c6ab1f7d6226b3f52c5161905bb5ad4039c939060200160405180910390a150565b6060600060015467ffffffffffffffff81111561052157610521610f00565b60405190808252806020026020018201604052801561054a578160200160208202803683370190505b506001600090815260208190527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d549192509073ffffffffffffffffffffffffffffffffffffffff165b73ffffffffffffffffffffffffffffffffffffffff811660011461061157808383815181106105c5576105c5610f2f565b73ffffffffffffffffffffffffffffffffffffffff928316602091820292909201810191909152918116600090815291829052604090912054168161060981610ec8565b925050610594565b509092915050565b610621610cc7565b73ffffffffffffffffffffffffffffffffffffffff81161580159061065d575073ffffffffffffffffffffffffffffffffffffffff8116600114155b801561067f575073ffffffffffffffffffffffffffffffffffffffff81163014155b6106e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533230330000000000000000000000000000000000000000000000000000006044820152606401610204565b73ffffffffffffffffffffffffffffffffffffffff8181166000908152602081905260409020541615610774576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533230340000000000000000000000000000000000000000000000000000006044820152606401610204565b73ffffffffffffffffffffffffffffffffffffffff8216158015906107b0575073ffffffffffffffffffffffffffffffffffffffff8216600114155b610816576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533230330000000000000000000000000000000000000000000000000000006044820152606401610204565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152602081905260409020548116908316146108a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533230350000000000000000000000000000000000000000000000000000006044820152606401610204565b73ffffffffffffffffffffffffffffffffffffffff828116600081815260208181526040808320805487871680865283862080549289167fffffffffffffffffffffffff0000000000000000000000000000000000000000938416179055968a1685528285208054821690971790965592849052825490941690915591519081527ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf910160405180910390a160405173ffffffffffffffffffffffffffffffffffffffff821681527f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea269060200160405180910390a1505050565b6109ab610cc7565b80600180546109ba9190610f5e565b1015610a22576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533230310000000000000000000000000000000000000000000000000000006044820152606401610204565b73ffffffffffffffffffffffffffffffffffffffff821615801590610a5e575073ffffffffffffffffffffffffffffffffffffffff8216600114155b610ac4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533230330000000000000000000000000000000000000000000000000000006044820152606401610204565b73ffffffffffffffffffffffffffffffffffffffff838116600090815260208190526040902054811690831614610b57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533230350000000000000000000000000000000000000000000000000000006044820152606401610204565b73ffffffffffffffffffffffffffffffffffffffff828116600081815260208190526040808220805488861684529183208054929095167fffffffffffffffffffffffff00000000000000000000000000000000000000009283161790945591815282549091169091556001805491610bcf83610f75565b909155505060405173ffffffffffffffffffffffffffffffffffffffff831681527ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf9060200160405180910390a18060025414610c2f57610c2f816103e8565b505050565b6040517ff8dc5dd900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80851660048301528316602482015260448101829052309063f8dc5dd990606401600060405180830381600087803b158015610caa57600080fd5b505af1158015610cbe573d6000803e3d6000fd5b50505050505050565b333014610d30576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533033310000000000000000000000000000000000000000000000000000006044820152606401610204565b565b803573ffffffffffffffffffffffffffffffffffffffff81168114610d5657600080fd5b919050565b60008060408385031215610d6e57600080fd5b610d7783610d32565b946020939093013593505050565b600060208284031215610d9757600080fd5b610da082610d32565b9392505050565b600060208284031215610db957600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610e0e57835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610ddc565b50909695505050505050565b600080600060608486031215610e2f57600080fd5b610e3884610d32565b9250610e4660208501610d32565b9150610e5460408501610d32565b90509250925092565b600080600060608486031215610e7257600080fd5b610e7b84610d32565b9250610e8960208501610d32565b9150604084013590509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ef957610ef9610e99565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082821015610f7057610f70610e99565b500390565b600081610f8457610f84610e99565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea164736f6c634300080f000a";

type OwnerSimulator0815ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OwnerSimulator0815ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OwnerSimulator0815__factory extends ContractFactory {
  constructor(...args: OwnerSimulator0815ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owners: string[],
    _threshold: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<OwnerSimulator0815> {
    return super.deploy(
      _owners,
      _threshold,
      overrides || {}
    ) as Promise<OwnerSimulator0815>;
  }
  override getDeployTransaction(
    _owners: string[],
    _threshold: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_owners, _threshold, overrides || {});
  }
  override attach(address: string): OwnerSimulator0815 {
    return super.attach(address) as OwnerSimulator0815;
  }
  override connect(signer: Signer): OwnerSimulator0815__factory {
    return super.connect(signer) as OwnerSimulator0815__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnerSimulator0815Interface {
    return new utils.Interface(_abi) as OwnerSimulator0815Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OwnerSimulator0815 {
    return new Contract(address, _abi, signerOrProvider) as OwnerSimulator0815;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OwnerSimulator0825,
  OwnerSimulator0825Interface,
} from "../../SafeTestTools.sol/OwnerSimulator0825";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_owners",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "_threshold",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addOwnerWithThreshold",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_threshold",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "changeThreshold",
    inputs: [
      {
        name: "_threshold",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getOwners",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getThreshold",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "removeOwner",
    inputs: [
      {
        name: "prevOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_threshold",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removeOwnerWrapped",
    inputs: [
      {
        name: "prevOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_threshold",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "swapOwner",
    inputs: [
      {
        name: "prevOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "oldOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "AddedOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ChangedThreshold",
    inputs: [
      {
        name: "threshold",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RemovedOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b5060405161130438038061130483398101604081905261002e91610294565b610038828261003f565b505061036f565b6002541561007c5760405162461bcd60e51b8152602060048201526005602482015264047533230360dc1b60448201526064015b60405180910390fd5b81518111156100b55760405162461bcd60e51b8152602060048201526005602482015264475332303160d81b6044820152606401610073565b60018110156100ee5760405162461bcd60e51b815260206004820152600560248201526423a999181960d91b6044820152606401610073565b60015f5b8351811015610230575f84828151811061010e5761010e61035b565b602002602001015190505f6001600160a01b0316816001600160a01b03161415801561014457506001600160a01b038116600114155b801561015957506001600160a01b0381163014155b80156101775750806001600160a01b0316836001600160a01b031614155b6101ab5760405162461bcd60e51b8152602060048201526005602482015264475332303360d81b6044820152606401610073565b6001600160a01b038181165f9081526020819052604090205416156101fa5760405162461bcd60e51b815260206004820152600560248201526411d4cc8c0d60da1b6044820152606401610073565b6001600160a01b039283165f90815260208190526040902080546001600160a01b031916938216939093179092556001016100f2565b506001600160a01b03165f90815260208190526040902080546001600160a01b03191660019081179091559151909155600255565b634e487b7160e01b5f52604160045260245ffd5b80516001600160a01b038116811461028f575f80fd5b919050565b5f80604083850312156102a5575f80fd5b82516001600160401b03808211156102bb575f80fd5b818501915085601f8301126102ce575f80fd5b81516020828211156102e2576102e2610265565b8160051b604051601f19603f8301168101818110868211171561030757610307610265565b604052928352818301935084810182019289841115610324575f80fd5b948201945b838610156103495761033a86610279565b85529482019493820193610329565b97909101519698969750505050505050565b634e487b7160e01b5f52603260045260245ffd5b610f888061037c5f395ff3fe608060405234801561000f575f80fd5b5060043610610085575f3560e01c8063e318b52b11610058578063e318b52b146100ee578063e75235b814610101578063f8dc5dd914610112578063fcb7a49514610125575f80fd5b80630d582f13146100895780632f54bf6e1461009e578063694e80c3146100c6578063a0e67e2b146100d9575b5f80fd5b61009c610097366004610d45565b610138565b005b6100b16100ac366004610d6d565b61038d565b60405190151581526020015b60405180910390f35b61009c6100d4366004610d8d565b6103e0565b6100e16104fa565b6040516100bd9190610da4565b61009c6100fc366004610dfd565b61060e565b6002546040519081526020016100bd565b61009c610120366004610e3d565b610995565b61009c610133366004610e3d565b610c24565b610140610cb2565b73ffffffffffffffffffffffffffffffffffffffff82161580159061017c575073ffffffffffffffffffffffffffffffffffffffff8216600114155b801561019e575073ffffffffffffffffffffffffffffffffffffffff82163014155b610209576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303300000000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8281165f908152602081905260409020541615610297576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533230340000000000000000000000000000000000000000000000000000006044820152606401610200565b5f60208190527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d805473ffffffffffffffffffffffffffffffffffffffff858116808552604085208054929093167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179092556001808552835490911690911790915580549161032983610ea3565b909155505060405173ffffffffffffffffffffffffffffffffffffffff831681527f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea269060200160405180910390a1806002541461038957610389816103e0565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff82166001148015906103da575073ffffffffffffffffffffffffffffffffffffffff8281165f908152602081905260409020541615155b92915050565b6103e8610cb2565b600154811115610454576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533230310000000000000000000000000000000000000000000000000000006044820152606401610200565b60018110156104bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533230320000000000000000000000000000000000000000000000000000006044820152606401610200565b60028190556040518181527f610f7ff2b304ae8903c3de74c60c6ab1f7d6226b3f52c5161905bb5ad4039c939060200160405180910390a150565b60605f60015467ffffffffffffffff81111561051857610518610eda565b604051908082528060200260200182016040528015610541578160200160208202803683370190505b5060015f90815260208190527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d549192509073ffffffffffffffffffffffffffffffffffffffff165b73ffffffffffffffffffffffffffffffffffffffff811660011461060657808383815181106105bb576105bb610f07565b73ffffffffffffffffffffffffffffffffffffffff9283166020918202929092018101919091529181165f9081529182905260409091205416816105fe81610ea3565b92505061058a565b509092915050565b610616610cb2565b73ffffffffffffffffffffffffffffffffffffffff811615801590610652575073ffffffffffffffffffffffffffffffffffffffff8116600114155b8015610674575073ffffffffffffffffffffffffffffffffffffffff81163014155b6106da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533230330000000000000000000000000000000000000000000000000000006044820152606401610200565b73ffffffffffffffffffffffffffffffffffffffff8181165f908152602081905260409020541615610768576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533230340000000000000000000000000000000000000000000000000000006044820152606401610200565b73ffffffffffffffffffffffffffffffffffffffff8216158015906107a4575073ffffffffffffffffffffffffffffffffffffffff8216600114155b61080a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533230330000000000000000000000000000000000000000000000000000006044820152606401610200565b73ffffffffffffffffffffffffffffffffffffffff8381165f9081526020819052604090205481169083161461089c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533230350000000000000000000000000000000000000000000000000000006044820152606401610200565b73ffffffffffffffffffffffffffffffffffffffff8281165f81815260208181526040808320805487871680865283862080549289167fffffffffffffffffffffffff0000000000000000000000000000000000000000938416179055968a1685528285208054821690971790965592849052825490941690915591519081527ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf910160405180910390a160405173ffffffffffffffffffffffffffffffffffffffff821681527f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea269060200160405180910390a1505050565b61099d610cb2565b80600180546109ac9190610f34565b1015610a14576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533230310000000000000000000000000000000000000000000000000000006044820152606401610200565b73ffffffffffffffffffffffffffffffffffffffff821615801590610a50575073ffffffffffffffffffffffffffffffffffffffff8216600114155b610ab6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533230330000000000000000000000000000000000000000000000000000006044820152606401610200565b73ffffffffffffffffffffffffffffffffffffffff8381165f90815260208190526040902054811690831614610b48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533230350000000000000000000000000000000000000000000000000000006044820152606401610200565b73ffffffffffffffffffffffffffffffffffffffff8281165f81815260208190526040808220805488861684529183208054929095167fffffffffffffffffffffffff00000000000000000000000000000000000000009283161790945591815282549091169091556001805491610bbf83610f47565b909155505060405173ffffffffffffffffffffffffffffffffffffffff831681527ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf9060200160405180910390a18060025414610c1f57610c1f816103e0565b505050565b6040517ff8dc5dd900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80851660048301528316602482015260448101829052309063f8dc5dd9906064015f604051808303815f87803b158015610c97575f80fd5b505af1158015610ca9573d5f803e3d5ffd5b50505050505050565b333014610d1b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533033310000000000000000000000000000000000000000000000000000006044820152606401610200565b565b803573ffffffffffffffffffffffffffffffffffffffff81168114610d40575f80fd5b919050565b5f8060408385031215610d56575f80fd5b610d5f83610d1d565b946020939093013593505050565b5f60208284031215610d7d575f80fd5b610d8682610d1d565b9392505050565b5f60208284031215610d9d575f80fd5b5035919050565b602080825282518282018190525f9190848201906040850190845b81811015610df157835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610dbf565b50909695505050505050565b5f805f60608486031215610e0f575f80fd5b610e1884610d1d565b9250610e2660208501610d1d565b9150610e3460408501610d1d565b90509250925092565b5f805f60608486031215610e4f575f80fd5b610e5884610d1d565b9250610e6660208501610d1d565b9150604084013590509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ed357610ed3610e76565b5060010190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b818103818111156103da576103da610e76565b5f81610f5557610f55610e76565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea164736f6c6343000819000a";

type OwnerSimulator0825ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OwnerSimulator0825ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OwnerSimulator0825__factory extends ContractFactory {
  constructor(...args: OwnerSimulator0825ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owners: string[],
    _threshold: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<OwnerSimulator0825> {
    return super.deploy(
      _owners,
      _threshold,
      overrides || {}
    ) as Promise<OwnerSimulator0825>;
  }
  override getDeployTransaction(
    _owners: string[],
    _threshold: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_owners, _threshold, overrides || {});
  }
  override attach(address: string): OwnerSimulator0825 {
    return super.attach(address) as OwnerSimulator0825;
  }
  override connect(signer: Signer): OwnerSimulator0825__factory {
    return super.connect(signer) as OwnerSimulator0825__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnerSimulator0825Interface {
    return new utils.Interface(_abi) as OwnerSimulator0825Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OwnerSimulator0825 {
    return new Contract(address, _abi, signerOrProvider) as OwnerSimulator0825;
  }
}

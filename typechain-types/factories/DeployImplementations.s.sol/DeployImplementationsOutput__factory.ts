/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DeployImplementationsOutput,
  DeployImplementationsOutputInterface,
} from "../../DeployImplementations.s.sol/DeployImplementationsOutput";

const _abi = [
  {
    type: "function",
    name: "checkOutput",
    inputs: [],
    outputs: [],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "delayedWETHImpl",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract DelayedWETH",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "l1CrossDomainMessengerImpl",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract L1CrossDomainMessenger",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "l1ERC721BridgeImpl",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract L1ERC721Bridge",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "l1StandardBridgeImpl",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract L1StandardBridge",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mipsSingleton",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract MIPS",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "optimismMintableERC20FactoryImpl",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract OptimismMintableERC20Factory",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "optimismPortal2Impl",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract OptimismPortal2",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "output",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct DeployImplementationsOutput.Output",
        components: [
          {
            name: "delayedWETHImpl",
            type: "address",
            internalType: "contract DelayedWETH",
          },
          {
            name: "optimismPortal2Impl",
            type: "address",
            internalType: "contract OptimismPortal2",
          },
          {
            name: "preimageOracleSingleton",
            type: "address",
            internalType: "contract PreimageOracle",
          },
          {
            name: "mipsSingleton",
            type: "address",
            internalType: "contract MIPS",
          },
          {
            name: "systemConfigImpl",
            type: "address",
            internalType: "contract SystemConfig",
          },
          {
            name: "l1CrossDomainMessengerImpl",
            type: "address",
            internalType: "contract L1CrossDomainMessenger",
          },
          {
            name: "l1ERC721BridgeImpl",
            type: "address",
            internalType: "contract L1ERC721Bridge",
          },
          {
            name: "l1StandardBridgeImpl",
            type: "address",
            internalType: "contract L1StandardBridge",
          },
          {
            name: "optimismMintableERC20FactoryImpl",
            type: "address",
            internalType: "contract OptimismMintableERC20Factory",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "preimageOracleSingleton",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract PreimageOracle",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "set",
    inputs: [
      {
        name: "sel",
        type: "bytes4",
        internalType: "bytes4",
      },
      {
        name: "_addr",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "systemConfigImpl",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract SystemConfig",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "writeOutputFile",
    inputs: [
      {
        name: "_outfile",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "pure",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611746806100206000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063b1ce6b441161008c578063c3e3925011610066578063c3e3925014610163578063e3fef4a814610176578063ef8ad94e1461017e578063f20eaeb81461018657600080fd5b8063b1ce6b441461014b578063bc3f6fd414610153578063c34e047a1461015b57600080fd5b80637a8d8e0a116100bd5780637a8d8e0a146101335780637d8bd0d81461013b5780639ff91e6b1461014357600080fd5b806317d50726146100e457806358256afb146100f957806374459cf31461012b575b600080fd5b6100f76100f23660046112a1565b61025f565b005b6101016102ef565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b610101610331565b610101610371565b6101016103b3565b6101016103f5565b6100f7610437565b610101610498565b6101016104da565b6100f7610171366004611370565b61051c565b610101610a9d565b610101610adf565b6102526040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915250604080516101208101825260005473ffffffffffffffffffffffffffffffffffffffff9081168252600154811660208301526002548116928201929092526003548216606082015260045482166080820152600554821660a0820152600654821660c0820152600754821660e082015260085490911661010082015290565b60405161012291906113e7565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4465706c6f79496d706c656d656e746174696f6e734f75747075743a206e6f7460448201527f20696d706c656d656e746564000000000000000000000000000000000000000060648201526084015b60405180910390fd5b50565b6005546000906103149073ffffffffffffffffffffffffffffffffffffffff16610b21565b5060055473ffffffffffffffffffffffffffffffffffffffff1690565b600080546103549073ffffffffffffffffffffffffffffffffffffffff16610b21565b5060005473ffffffffffffffffffffffffffffffffffffffff1690565b6003546000906103969073ffffffffffffffffffffffffffffffffffffffff16610b21565b5060035473ffffffffffffffffffffffffffffffffffffffff1690565b6006546000906103d89073ffffffffffffffffffffffffffffffffffffffff16610b21565b5060065473ffffffffffffffffffffffffffffffffffffffff1690565b60015460009061041a9073ffffffffffffffffffffffffffffffffffffffff16610b21565b5060015473ffffffffffffffffffffffffffffffffffffffff1690565b60015460008054600254600354600454600554600654600754600854979861048d9873ffffffffffffffffffffffffffffffffffffffff9182169882169782169682169582169482169382169282169116610c19565b90506102ec81610efa565b6004546000906104bd9073ffffffffffffffffffffffffffffffffffffffff16610b21565b5060045473ffffffffffffffffffffffffffffffffffffffff1690565b6007546000906104ff9073ffffffffffffffffffffffffffffffffffffffff16610b21565b5060075473ffffffffffffffffffffffffffffffffffffffff1690565b7f6006e195000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316016105a957600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83161790555050565b7f8bba630d000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000083160161063657600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83161790555050565b7f107526b2000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316016106c357600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83161790555050565b7f857271f6000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000083160161075057600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83161790555050565b7f43c0902c000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316016107dd57600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83161790555050565b7fa7da9505000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000083160161086a57600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83161790555050565b7f82742f28000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316016108f757600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83161790555050565b7f3cb1fb86000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000083160161098457600780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83161790555050565b7f1c010b58000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831601610a1157600880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83161790555050565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f4465706c6f79496d706c656d656e746174696f6e734f75747075743a20756e6b60448201527f6e6f776e2073656c6563746f720000000000000000000000000000000000000060648201526084016102e3565b5050565b600854600090610ac29073ffffffffffffffffffffffffffffffffffffffff16610b21565b5060085473ffffffffffffffffffffffffffffffffffffffff1690565b600254600090610b049073ffffffffffffffffffffffffffffffffffffffff16610b21565b5060025473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff8116610b9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4465706c6f795574696c733a207a65726f20616464726573730000000000000060448201526064016102e3565b60008173ffffffffffffffffffffffffffffffffffffffff163b11610bc28261105f565b604051602001610bd29190611574565b60405160208183030381529060405290610a99576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e391906115b9565b60408051600980825261014082019092526060916000919060208201610120803683370190505090508a81600081518110610c5657610c5661160a565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508981600181518110610ca457610ca461160a565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508881600281518110610cf257610cf261160a565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508781600381518110610d4057610d4061160a565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508681600481518110610d8e57610d8e61160a565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508581600581518110610ddc57610ddc61160a565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508481600681518110610e2a57610e2a61160a565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508381600781518110610e7857610e7861160a565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508281600881518110610ec657610ec661160a565b73ffffffffffffffffffffffffffffffffffffffff9092166020928302919091019091015290509998505050505050505050565b60005b8151811015610f40576000828281518110610f1a57610f1a61160a565b60200260200101519050610f2d81610b21565b5080610f3881611668565b915050610efd565b5060005b8151811015610a99576000610f5a8260016116a0565b90505b825181101561104c576000610f7183611141565b610f7a83611141565b604051602001610f8b9291906116b8565b6040516020818303038152906040529050838281518110610fae57610fae61160a565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16848481518110610fde57610fde61160a565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614158190611037576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e391906115b9565b5050808061104490611668565b915050610f5d565b508061105781611668565b915050610f44565b606061106a826111a3565b6028602282019081209192507f4040404040404040404040404040404040404040404040404040404040404040917f8888888888888888888888888888888888888888888888888888888888888880167e8800000000000000000000000000000000000000000000000000000000000060005b82811a82028180015260018101907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed016110dd57505050818151166000511660011c8151188152602081019050818151166020511660011c81511881525050919050565b60606080604051019050602081016040526000815280600019835b928101926030600a8206018453600a90048061115c5750508190037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0909101908152919050565b60606111ae826111e5565b805161307882526002017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe90910190815292915050565b60606040519050608081016040526f30313233343536373839616263646566600f526002810190506028815260208101600060288201528260601b925060005b808101820184821a600f81165160018301538060041c518253505060018101907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed01611225575050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156112b357600080fd5b813567ffffffffffffffff808211156112cb57600080fd5b818401915084601f8301126112df57600080fd5b8135818111156112f1576112f1611272565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561133757611337611272565b8160405282815287602084870101111561135057600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000806040838503121561138357600080fd5b82357fffffffff00000000000000000000000000000000000000000000000000000000811681146113b357600080fd5b9150602083013573ffffffffffffffffffffffffffffffffffffffff811681146113dc57600080fd5b809150509250929050565b815173ffffffffffffffffffffffffffffffffffffffff16815260208083015161012083019161142e9084018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151611456604084018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015161147e606084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060808301516114a6608084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060a08301516114ce60a084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060c08301516114f660c084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060e083015161151e60e084018273ffffffffffffffffffffffffffffffffffffffff169052565b506101009283015173ffffffffffffffffffffffffffffffffffffffff16919092015290565b60005b8381101561155f578181015183820152602001611547565b8381111561156e576000848401525b50505050565b7f4465706c6f795574696c733a206e6f20636f64652061742000000000000000008152600082516115ac816018850160208701611544565b9190910160180192915050565b60208152600082518060208401526115d8816040850160208701611544565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361169957611699611639565b5060010190565b600082198211156116b3576116b3611639565b500190565b7f636865636b206661696c65643a206475706c69636174657320617420000000008152600083516116f081601c850160208801611544565b7f2c00000000000000000000000000000000000000000000000000000000000000601c91840191820152835161172d81601d840160208801611544565b01601d0194935050505056fea164736f6c634300080f000a";

type DeployImplementationsOutputConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeployImplementationsOutputConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeployImplementationsOutput__factory extends ContractFactory {
  constructor(...args: DeployImplementationsOutputConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<DeployImplementationsOutput> {
    return super.deploy(
      overrides || {}
    ) as Promise<DeployImplementationsOutput>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DeployImplementationsOutput {
    return super.attach(address) as DeployImplementationsOutput;
  }
  override connect(signer: Signer): DeployImplementationsOutput__factory {
    return super.connect(signer) as DeployImplementationsOutput__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeployImplementationsOutputInterface {
    return new utils.Interface(_abi) as DeployImplementationsOutputInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeployImplementationsOutput {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DeployImplementationsOutput;
  }
}

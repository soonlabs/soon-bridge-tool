/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CheckBalanceLow,
  CheckBalanceLowInterface,
} from "../CheckBalanceLow";

const _abi = [
  {
    type: "function",
    name: "check",
    inputs: [
      {
        name: "_params",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "execute_",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "_EventToExposeStructInABI__Params",
    inputs: [
      {
        name: "params",
        type: "tuple",
        indexed: false,
        internalType: "struct CheckBalanceLow.Params",
        components: [
          {
            name: "target",
            type: "address",
            internalType: "address",
          },
          {
            name: "threshold",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60c0604052600f60809081526e436865636b42616c616e63654c6f7760881b60a05260009061002e90826100e0565b5034801561003b57600080fd5b5061019f565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061006b57607f821691505b60208210810361008b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156100db57600081815260208120601f850160051c810160208610156100b85750805b601f850160051c820191505b818110156100d7578281556001016100c4565b5050505b505050565b81516001600160401b038111156100f9576100f9610041565b61010d816101078454610057565b84610091565b602080601f831160018114610142576000841561012a5750858301515b600019600386901b1c1916600185901b1785556100d7565b600085815260208120601f198616915b8281101561017157888601518255948401946001909101908401610152565b508582101561018f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610389806101ae6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806306fdde031461003b578063c64b3bb514610059575b600080fd5b61004361007c565b6040516100509190610147565b60405180910390f35b61006c6100673660046101e9565b61010a565b6040519015158152602001610050565b60008054610089906102b8565b80601f01602080910402602001604051908101604052809291908181526020018280546100b5906102b8565b80156101025780601f106100d757610100808354040283529160200191610102565b820191906000526020600020905b8154815290600101906020018083116100e557829003601f168201915b505050505081565b60008082806020019051810190610121919061030b565b6020810151905173ffffffffffffffffffffffffffffffffffffffff1631109392505050565b600060208083528351808285015260005b8181101561017457858101830151858201604001528201610158565b81811115610186576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156101fb57600080fd5b813567ffffffffffffffff8082111561021357600080fd5b818401915084601f83011261022757600080fd5b813581811115610239576102396101ba565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561027f5761027f6101ba565b8160405282815287602084870101111561029857600080fd5b826020860160208301376000928101602001929092525095945050505050565b600181811c908216806102cc57607f821691505b602082108103610305577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60006040828403121561031d57600080fd5b6040516040810181811067ffffffffffffffff82111715610340576103406101ba565b604052825173ffffffffffffffffffffffffffffffffffffffff8116811461036757600080fd5b8152602092830151928101929092525091905056fea164736f6c634300080f000a";

type CheckBalanceLowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CheckBalanceLowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CheckBalanceLow__factory extends ContractFactory {
  constructor(...args: CheckBalanceLowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<CheckBalanceLow> {
    return super.deploy(overrides || {}) as Promise<CheckBalanceLow>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CheckBalanceLow {
    return super.attach(address) as CheckBalanceLow;
  }
  override connect(signer: Signer): CheckBalanceLow__factory {
    return super.connect(signer) as CheckBalanceLow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CheckBalanceLowInterface {
    return new utils.Interface(_abi) as CheckBalanceLowInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CheckBalanceLow {
    return new Contract(address, _abi, signerOrProvider) as CheckBalanceLow;
  }
}

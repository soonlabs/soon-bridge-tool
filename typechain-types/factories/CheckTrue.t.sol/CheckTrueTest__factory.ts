/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CheckTrueTest,
  CheckTrueTestInterface,
} from "../../CheckTrue.t.sol/CheckTrueTest";

const _abi = [
  {
    type: "function",
    name: "IS_TEST",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeArtifacts",
    inputs: [],
    outputs: [
      {
        name: "excludedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeContracts",
    inputs: [],
    outputs: [
      {
        name: "excludedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeSenders",
    inputs: [],
    outputs: [
      {
        name: "excludedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "failed",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setUp",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "targetArtifactSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifactSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetArtifacts",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetContracts",
    inputs: [],
    outputs: [
      {
        name: "targetedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetInterfaces",
    inputs: [],
    outputs: [
      {
        name: "targetedInterfaces_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzInterface[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "artifacts",
            type: "string[]",
            internalType: "string[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSenders",
    inputs: [],
    outputs: [
      {
        name: "targetedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "testFuzz_always_true_succeeds",
    inputs: [
      {
        name: "input",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "test_name_succeeds",
    inputs: [],
    outputs: [],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "log",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_address",
    inputs: [
      {
        name: "",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes32",
    inputs: [
      {
        name: "",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_int",
    inputs: [
      {
        name: "",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_address",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes32",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_string",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_string",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_uint",
    inputs: [
      {
        name: "",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "logs",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x6080604052600c8054600160ff199182168117909255601e8054909116909117905534801561002d57600080fd5b5061175f8061003d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000fd5760003560e01c8063885c08ff1162000097578063b5508aa9116200006e578063b5508aa914620001ba578063ba414fa614620001c4578063e20c9f7114620001df578063fa7626d414620001e957600080fd5b8063885c08ff146200018f578063916a17c614620001995780639f8dedea14620001a357600080fd5b80633e5e3c2311620000d85780633e5e3c2314620001495780633f7286f4146200015357806366d9a9a0146200015d57806385226c81146200017657600080fd5b80630a9254e414620001025780631ed7831c146200010e5780632ade38801462000130575b600080fd5b6200010c620001f7565b005b6200011862000265565b60405162000127919062000cbc565b60405180910390f35b6200013a620002d6565b60405162000127919062000d97565b6200011862000431565b62000118620004a0565b620001676200050f565b60405162000127919062000ea6565b620001806200061b565b60405162000127919062000fa0565b6200010c620006f5565b62000167620007ed565b6200010c620001b4366004620010ee565b620008f9565b62000180620009a8565b620001ce62000a82565b604051901515815260200162000127565b6200011862000b5a565b601e54620001ce9060ff1681565b604051620002059062000cae565b604051809103906000f08015801562000222573d6000803e3d6000fd5b50601e60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60606016805480602002602001604051908101604052809291908181526020018280548015620002cc57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620002a0575b5050505050905090565b6060601d805480602002602001604051908101604052809291908181526020016000905b8282101562000428576000848152602080822060408051808201825260028702909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939591948681019491929084015b82821015620004105783829060005260206000200180546200037c9062001176565b80601f0160208091040260200160405190810160405280929190818152602001828054620003aa9062001176565b8015620003fb5780601f10620003cf57610100808354040283529160200191620003fb565b820191906000526020600020905b815481529060010190602001808311620003dd57829003601f168201915b5050505050815260200190600101906200035a565b505050508152505081526020019060010190620002fa565b50505050905090565b60606018805480602002602001604051908101604052809291908181526020018280548015620002cc5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620002a0575050505050905090565b60606017805480602002602001604051908101604052809291908181526020018280548015620002cc5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620002a0575050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156200042857600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff1683526001810180548351818702810187019094528084529394919385830193928301828280156200060257602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411620005ae5790505b5050505050815250508152602001906001019062000533565b6060601a805480602002602001604051908101604052809291908181526020016000905b8282101562000428578382906000526020600020018054620006619062001176565b80601f01602080910402602001604051908101604052809291908181526020018280546200068f9062001176565b8015620006e05780601f10620006b457610100808354040283529160200191620006e0565b820191906000526020600020905b815481529060010190602001808311620006c257829003601f168201915b5050505050815260200190600101906200063f565b620007eb601e60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000767573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052620007af9190810190620011cb565b6040518060400160405280600981526020017f436865636b54727565000000000000000000000000000000000000000000000081525062000bc9565b565b6060601c805480602002602001604051908101604052809291908181526020016000905b828210156200042857600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939491938583019392830182828015620008e057602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116200088c5790505b5050505050815250508152602001906001019062000811565b601e546040517fc64b3bb5000000000000000000000000000000000000000000000000000000008152620009a591610100900473ffffffffffffffffffffffffffffffffffffffff169063c64b3bb590620009599085906004016200124b565b602060405180830381865afa15801562000977573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200099d919062001267565b600162000c53565b50565b60606019805480602002602001604051908101604052809291908181526020016000905b8282101562000428578382906000526020600020018054620009ee9062001176565b80601f016020809104026020016040519081016040528092919081815260200182805462000a1c9062001176565b801562000a6d5780601f1062000a415761010080835404028352916020019162000a6d565b820191906000526020600020905b81548152906001019060200180831162000a4f57829003601f168201915b505050505081526020019060010190620009cc565b60085460009060ff161562000a9b575060085460ff1690565b6040517f667f9d70000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d600482018190527f6661696c65640000000000000000000000000000000000000000000000000000602483015260009163667f9d7090604401602060405180830381865afa15801562000b2d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b5391906200128b565b1415905090565b60606015805480602002602001604051908101604052809291908181526020018280548015620002cc5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620002a0575050505050905090565b6040517ff320d963000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f320d9639062000c1d9085908590600401620012a5565b60006040518083038186803b15801562000c3657600080fd5b505afa15801562000c4b573d6000803e3d6000fd5b505050505050565b6040517ff7fe347700000000000000000000000000000000000000000000000000000000815282151560048201528115156024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f7fe34779060440162000c1d565b61048480620012cf83390190565b6020808252825182820181905260009190848201906040850190845b8181101562000d0c57835173ffffffffffffffffffffffffffffffffffffffff168352928401929184019160010162000cd8565b50909695505050505050565b60005b8381101562000d3557818101518382015260200162000d1b565b8381111562000d45576000848401525b50505050565b6000815180845262000d6581602086016020860162000d18565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b8581101562000e96577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08b85030187528251805173ffffffffffffffffffffffffffffffffffffffff1685528901518985018990528051898601819052908a0190606081881b870181019190870190855b8181101562000e7f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa089850301835262000e6c84865162000d4b565b948e01949350918d019160010162000e2f565b505050978a01979450509188019160010162000dbe565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101562000f91578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b8083101562000f7b5783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b019062000f37565b50978a0197955050509187019160010162000ece565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562001017577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526200100485835162000d4b565b9450928501929085019060010162000fc7565b5092979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156200109d576200109d62001024565b604052919050565b600067ffffffffffffffff821115620010c257620010c262001024565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000602082840312156200110157600080fd5b813567ffffffffffffffff8111156200111957600080fd5b8201601f810184136200112b57600080fd5b8035620011426200113c82620010a5565b62001053565b8181528560208385010111156200115857600080fd5b81602084016020830137600091810160200191909152949350505050565b600181811c908216806200118b57607f821691505b602082108103620011c5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215620011de57600080fd5b815167ffffffffffffffff811115620011f657600080fd5b8201601f810184136200120857600080fd5b8051620012196200113c82620010a5565b8181528560208385010111156200122f57600080fd5b6200124282602083016020860162000d18565b95945050505050565b60208152600062001260602083018462000d4b565b9392505050565b6000602082840312156200127a57600080fd5b815180151581146200126057600080fd5b6000602082840312156200129e57600080fd5b5051919050565b604081526000620012ba604083018562000d4b565b828103602084015262001242818562000d4b56fe60c06040526009608090815268436865636b5472756560b81b60a05260009061002890826100da565b5034801561003557600080fd5b50610199565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061006557607f821691505b60208210810361008557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156100d557600081815260208120601f850160051c810160208610156100b25750805b601f850160051c820191505b818110156100d1578281556001016100be565b5050505b505050565b81516001600160401b038111156100f3576100f361003b565b610107816101018454610051565b8461008b565b602080601f83116001811461013c57600084156101245750858301515b600019600386901b1c1916600185901b1785556100d1565b600085815260208120601f198616915b8281101561016b5788860151825594840194600190910190840161014c565b50858210156101895787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6102dc806101a86000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806306fdde031461003b578063c64b3bb514610059575b600080fd5b61004361007d565b604051610050919061010b565b60405180910390f35b61006d6100673660046101ad565b50600190565b6040519015158152602001610050565b6000805461008a9061027c565b80601f01602080910402602001604051908101604052809291908181526020018280546100b69061027c565b80156101035780601f106100d857610100808354040283529160200191610103565b820191906000526020600020905b8154815290600101906020018083116100e657829003601f168201915b505050505081565b600060208083528351808285015260005b818110156101385785810183015185820160400152820161011c565b8181111561014a576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156101bf57600080fd5b813567ffffffffffffffff808211156101d757600080fd5b818401915084601f8301126101eb57600080fd5b8135818111156101fd576101fd61017e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156102435761024361017e565b8160405282815287602084870101111561025c57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600181811c9082168061029057607f821691505b6020821081036102c9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea164736f6c634300080f000aa164736f6c634300080f000a";

type CheckTrueTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CheckTrueTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CheckTrueTest__factory extends ContractFactory {
  constructor(...args: CheckTrueTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<CheckTrueTest> {
    return super.deploy(overrides || {}) as Promise<CheckTrueTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CheckTrueTest {
    return super.attach(address) as CheckTrueTest;
  }
  override connect(signer: Signer): CheckTrueTest__factory {
    return super.connect(signer) as CheckTrueTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CheckTrueTestInterface {
    return new utils.Interface(_abi) as CheckTrueTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CheckTrueTest {
    return new Contract(address, _abi, signerOrProvider) as CheckTrueTest;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IMulticall3,
  IMulticall3Interface,
} from "../../Optimist.t.sol/IMulticall3";

const _abi = [
  {
    type: "function",
    name: "aggregate3",
    inputs: [
      {
        name: "calls",
        type: "tuple[]",
        internalType: "struct IMulticall3.Call3[]",
        components: [
          {
            name: "target",
            type: "address",
            internalType: "address",
          },
          {
            name: "allowFailure",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "returnData",
        type: "tuple[]",
        internalType: "struct IMulticall3.Result[]",
        components: [
          {
            name: "success",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "returnData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    stateMutability: "payable",
  },
] as const;

export class IMulticall3__factory {
  static readonly abi = _abi;
  static createInterface(): IMulticall3Interface {
    return new utils.Interface(_abi) as IMulticall3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMulticall3 {
    return new Contract(address, _abi, signerOrProvider) as IMulticall3;
  }
}

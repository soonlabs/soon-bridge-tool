/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SuperchainConfig,
  SuperchainConfigInterface,
} from "../SuperchainConfig";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "GUARDIAN_SLOT",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "PAUSED_SLOT",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "guardian",
    inputs: [],
    outputs: [
      {
        name: "guardian_",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_guardian",
        type: "address",
        internalType: "address",
      },
      {
        name: "_paused",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "pause",
    inputs: [
      {
        name: "_identifier",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "paused",
    inputs: [],
    outputs: [
      {
        name: "paused_",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "unpause",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateGuardian",
    inputs: [
      {
        name: "_guardian",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "version",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "ConfigUpdate",
    inputs: [
      {
        name: "updateType",
        type: "uint8",
        indexed: true,
        internalType: "enum SuperchainConfig.UpdateType",
      },
      {
        name: "data",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Paused",
    inputs: [
      {
        name: "identifier",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Unpaused",
    inputs: [],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001f60008062000025565b62000361565b600054610100900460ff1615808015620000465750600054600160ff909116105b8062000076575062000063306200019460201b620006f61760201c565b15801562000076575060005460ff166001145b620000de5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff19166001179055801562000102576000805461ff0019166101001790555b6200010d83620001a3565b81156200014857604080518082019091526012815271125b9a5d1a585b1a5e995c881c185d5cd95960721b6020820152620001489062000248565b80156200018f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6001600160a01b03163b151590565b620001e9620001d460017fd30e835d3f35624761057ff5b27d558f97bd5be034621e62240e5c0b784abe69620002cf565b60001b82620002cb60201b620007121760201c565b6000604080516001600160a01b03841660208201527f7b743789cff01dafdeae47739925425aab5dfd02d0c8229e4a508bcd2b9f42bb910160408051601f19818403018152908290526200023d9162000345565b60405180910390a250565b6200028f6200027960017f54176ff9944c4784e5857ec4e5ef560a462c483bf534eda43f91bb01a470b1b7620002cf565b60001b6001620002cb60201b620007121760201c565b7fc32e6d5d6d1de257f64eac19ddb1f700ba13527983849c9486b1ab007ea2838181604051620002c0919062000345565b60405180910390a150565b9055565b600082821015620002f057634e487b7160e01b600052601160045260246000fd5b500390565b6000815180845260005b818110156200031d57602081850181015186830182015201620002ff565b8181111562000330576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006200035a6020830184620002f5565b9392505050565b610a8d80620003716000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80635c975abb116100765780637fbf7b6a1161005b5780637fbf7b6a1461016b578063c23a451a14610181578063fc5253951461018957600080fd5b80635c975abb146101405780636da663551461015857600080fd5b80633f4ba83a146100a8578063400ada75146100b2578063452a9320146100c557806354fd4d50146100f7575b600080fd5b6100b061019c565b005b6100b06100c0366004610868565b6102c2565b6100cd61049b565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6101336040518060400160405280600581526020017f312e312e3000000000000000000000000000000000000000000000000000000081525081565b6040516100ee919061090f565b6101486104d4565b60405190151581526020016100ee565b6100b0610166366004610958565b610504565b6101736105d2565b6040519081526020016100ee565b610173610600565b6100b0610197366004610a27565b61062b565b6101a461049b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610263576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f5375706572636861696e436f6e6669673a206f6e6c7920677561726469616e2060448201527f63616e20756e706175736500000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61029761029160017f54176ff9944c4784e5857ec4e5ef560a462c483bf534eda43f91bb01a470b1b7610a42565b60009055565b6040517fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693390600090a1565b600054610100900460ff16158080156102e25750600054600160ff909116105b806102fc5750303b1580156102fc575060005460ff166001145b610388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161025a565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905580156103e657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b6103ef83610716565b8115610433576104336040518060400160405280601281526020017f496e697469616c697a65722070617573656400000000000000000000000000008152506107d1565b801561049657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b60006104cf6104cb60017fd30e835d3f35624761057ff5b27d558f97bd5be034621e62240e5c0b784abe69610a42565b5490565b905090565b60006104cf6104cb60017f54176ff9944c4784e5857ec4e5ef560a462c483bf534eda43f91bb01a470b1b7610a42565b61050c61049b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f5375706572636861696e436f6e6669673a206f6e6c7920677561726469616e2060448201527f63616e2070617573650000000000000000000000000000000000000000000000606482015260840161025a565b6105cf816107d1565b50565b6105fd60017f54176ff9944c4784e5857ec4e5ef560a462c483bf534eda43f91bb01a470b1b7610a42565b81565b6105fd60017fd30e835d3f35624761057ff5b27d558f97bd5be034621e62240e5c0b784abe69610a42565b61063361049b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f5375706572636861696e436f6e6669673a206f6e6c7920677561726469616e2060448201527f63616e2075706461746520677561726469616e20616464726573730000000000606482015260840161025a565b6105cf81610716565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b9055565b61074961074460017fd30e835d3f35624761057ff5b27d558f97bd5be034621e62240e5c0b784abe69610a42565b829055565b60006040805173ffffffffffffffffffffffffffffffffffffffff841660208201527f7b743789cff01dafdeae47739925425aab5dfd02d0c8229e4a508bcd2b9f42bb9101604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526107c69161090f565b60405180910390a250565b6108056107ff60017f54176ff9944c4784e5857ec4e5ef560a462c483bf534eda43f91bb01a470b1b7610a42565b60019055565b7fc32e6d5d6d1de257f64eac19ddb1f700ba13527983849c9486b1ab007ea2838181604051610834919061090f565b60405180910390a150565b803573ffffffffffffffffffffffffffffffffffffffff8116811461086357600080fd5b919050565b6000806040838503121561087b57600080fd5b6108848361083f565b91506020830135801515811461089957600080fd5b809150509250929050565b6000815180845260005b818110156108ca576020818501810151868301820152016108ae565b818111156108dc576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061092260208301846108a4565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561096a57600080fd5b813567ffffffffffffffff8082111561098257600080fd5b818401915084601f83011261099657600080fd5b8135818111156109a8576109a8610929565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156109ee576109ee610929565b81604052828152876020848701011115610a0757600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208284031215610a3957600080fd5b6109228261083f565b600082821015610a7b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50039056fea164736f6c634300080f000a";

type SuperchainConfigConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SuperchainConfigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SuperchainConfig__factory extends ContractFactory {
  constructor(...args: SuperchainConfigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<SuperchainConfig> {
    return super.deploy(overrides || {}) as Promise<SuperchainConfig>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SuperchainConfig {
    return super.attach(address) as SuperchainConfig;
  }
  override connect(signer: Signer): SuperchainConfig__factory {
    return super.connect(signer) as SuperchainConfig__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SuperchainConfigInterface {
    return new utils.Interface(_abi) as SuperchainConfigInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SuperchainConfig {
    return new Contract(address, _abi, signerOrProvider) as SuperchainConfig;
  }
}

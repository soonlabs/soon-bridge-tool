/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Hash_CrossDomainHasher,
  Hash_CrossDomainHasherInterface,
} from "../../Hashing.t.sol/Hash_CrossDomainHasher";

const _abi = [
  {
    type: "function",
    name: "failedCrossDomainHashV1",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "failedCrossDomainHashWrongVersion",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hashCrossDomainMessageV1",
    inputs: [
      {
        name: "_nonce",
        type: "uint240",
        internalType: "uint240",
      },
      {
        name: "_sender",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_target",
        type: "address",
        internalType: "address",
      },
      {
        name: "_value",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_gasLimit",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "hashCrossDomainMessageWrongVersion",
    inputs: [
      {
        name: "_version",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "_nonce",
        type: "uint240",
        internalType: "uint240",
      },
      {
        name: "_sender",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_target",
        type: "address",
        internalType: "address",
      },
      {
        name: "_value",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_gasLimit",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061060a806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806364fbe55b146100515780639768168514610066578063b32fcf9a14610079578063e2146b691461009f575b600080fd5b61006461005f366004610441565b6100ac565b005b6100646100743660046104d6565b61010d565b60005461008b90610100900460ff1681565b604051901515815260200160405180910390f35b60005461008b9060ff1681565b60006100ba878960f01b1790565b90506100ca818787878787610192565b508761ffff1660011461010357600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555b5050505050505050565b7e010000000000000000000000000000000000000000000000000000000000008617600061013f828888888888610192565b9050600061015183898989898961024e565b905080821461018757600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b505050505050505050565b600060f087901c60018190036101b8576101b088888888888861024e565b915050610244565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f48617368696e673a20756e6b6e6f776e2063726f737320646f6d61696e206d6560448201527f73736167652076657273696f6e00000000000000000000000000000000000000606482015260840160405180910390fd5b9695505050505050565b600061025e878787878787610271565b8051906020012090509695505050505050565b606086868686868660405160240161028e96959493929190610550565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f54aa43a30000000000000000000000000000000000000000000000000000000017905290509695505050505050565b80357dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8116811461033e57600080fd5b919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461033e57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126103a757600080fd5b813567ffffffffffffffff808211156103c2576103c2610367565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561040857610408610367565b8160405283815286602085880101111561042157600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600080600060e0888a03121561045c57600080fd5b873561ffff8116811461046e57600080fd5b965061047c60208901610310565b95506040880135945061049160608901610343565b93506080880135925060a0880135915060c088013567ffffffffffffffff8111156104bb57600080fd5b6104c78a828b01610396565b91505092959891949750929550565b60008060008060008060c087890312156104ef57600080fd5b6104f887610310565b95506020870135945061050d60408801610343565b9350606087013592506080870135915060a087013567ffffffffffffffff81111561053757600080fd5b61054389828a01610396565b9150509295509295509295565b86815260006020878184015273ffffffffffffffffffffffffffffffffffffffff8716604084015285606084015284608084015260c060a084015283518060c085015260005b818110156105b25785810183015185820160e001528201610596565b818111156105c457600060e083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160e0019897505050505050505056fea164736f6c634300080f000a";

type Hash_CrossDomainHasherConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Hash_CrossDomainHasherConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Hash_CrossDomainHasher__factory extends ContractFactory {
  constructor(...args: Hash_CrossDomainHasherConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<Hash_CrossDomainHasher> {
    return super.deploy(overrides || {}) as Promise<Hash_CrossDomainHasher>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Hash_CrossDomainHasher {
    return super.attach(address) as Hash_CrossDomainHasher;
  }
  override connect(signer: Signer): Hash_CrossDomainHasher__factory {
    return super.connect(signer) as Hash_CrossDomainHasher__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Hash_CrossDomainHasherInterface {
    return new utils.Interface(_abi) as Hash_CrossDomainHasherInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Hash_CrossDomainHasher {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as Hash_CrossDomainHasher;
  }
}

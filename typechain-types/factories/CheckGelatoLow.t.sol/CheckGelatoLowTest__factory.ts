/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CheckGelatoLowTest,
  CheckGelatoLowTestInterface,
} from "../../CheckGelatoLow.t.sol/CheckGelatoLowTest";

const _abi = [
  {
    type: "function",
    name: "IS_TEST",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeArtifacts",
    inputs: [],
    outputs: [
      {
        name: "excludedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeContracts",
    inputs: [],
    outputs: [
      {
        name: "excludedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeSenders",
    inputs: [],
    outputs: [
      {
        name: "excludedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "failed",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setUp",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "targetArtifactSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifactSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetArtifacts",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetContracts",
    inputs: [],
    outputs: [
      {
        name: "targetedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetInterfaces",
    inputs: [],
    outputs: [
      {
        name: "targetedInterfaces_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzInterface[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "artifacts",
            type: "string[]",
            internalType: "string[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSenders",
    inputs: [],
    outputs: [
      {
        name: "targetedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "testFuzz_check_highBalance_fails",
    inputs: [
      {
        name: "_threshold",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_recipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testFuzz_check_succeeds",
    inputs: [
      {
        name: "_threshold",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_recipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "test_name_succeeds",
    inputs: [],
    outputs: [],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "log",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_address",
    inputs: [
      {
        name: "",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes32",
    inputs: [
      {
        name: "",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_int",
    inputs: [
      {
        name: "",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_address",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes32",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_string",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_string",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_uint",
    inputs: [
      {
        name: "",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "logs",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x6080604052600c8054600160ff199182168117909255601e8054909116909117905534801561002d57600080fd5b50611ff68061003d6000396000f3fe60806040523480156200001157600080fd5b5060043610620001095760003560e01c80637d44788611620000a3578063b5508aa9116200006e578063b5508aa914620001dd578063ba414fa614620001e7578063e20c9f711462000202578063fa7626d4146200020c57600080fd5b80637d447886146200019957806385226c8114620001b0578063885c08ff14620001c9578063916a17c614620001d357600080fd5b80633e5e3c2311620000e45780633e5e3c2314620001555780633f7286f4146200015f57806366d9a9a0146200016957806375a7b620146200018257600080fd5b80630a9254e4146200010e5780631ed7831c146200011a5780632ade3880146200013c575b600080fd5b620001186200021a565b005b62000124620002f9565b6040516200013391906200111c565b60405180910390f35b620001466200036a565b604051620001339190620011f7565b62000124620004c5565b6200012462000534565b62000173620005a3565b60405162000133919062001306565b620001186200019336600462001400565b620006af565b62000118620001aa36600462001400565b62000844565b620001ba62000b21565b6040516200013391906200144b565b6200011862000bfb565b6200017362000cf3565b620001ba62000dff565b620001f162000ed9565b604051901515815260200162000133565b6200012462000fb1565b601e54620001f19060ff1681565b604051620002289062001100565b604051809103906000f08015801562000245573d6000803e3d6000fd5b50601e60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060405162000294906200110e565b604051809103906000f080158015620002b1573d6000803e3d6000fd5b50601f80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b606060168054806020026020016040519081016040528092919081815260200182805480156200036057602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831162000334575b5050505050905090565b6060601d805480602002602001604051908101604052809291908181526020016000905b82821015620004bc576000848152602080822060408051808201825260028702909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939591948681019491929084015b82821015620004a45783829060005260206000200180546200041090620014cf565b80601f01602080910402602001604051908101604052809291908181526020018280546200043e90620014cf565b80156200048f5780601f1062000463576101008083540402835291602001916200048f565b820191906000526020600020905b8154815290600101906020018083116200047157829003601f168201915b505050505081526020019060010190620003ee565b5050505081525050815260200190600101906200038e565b50505050905090565b60606018805480602002602001604051908101604052809291908181526020018280548015620003605760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831162000334575050505050905090565b60606017805480602002602001604051908101604052809291908181526020018280548015620003605760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831162000334575050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b82821015620004bc57600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff1683526001810180548351818702810187019094528084529394919385830193928301828280156200069657602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411620006425790505b50505050508152505081526020019060010190620005c7565b60408051606081018252601f5473ffffffffffffffffffffffffffffffffffffffff9081168083526020830186905290841682840181905292517f72eec294000000000000000000000000000000000000000000000000000000008152600481019390935273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee60248401526044830185905290916372eec29490606401600060405180830381600087803b1580156200075b57600080fd5b505af115801562000770573d6000803e3d6000fd5b5050601e5460408051855173ffffffffffffffffffffffffffffffffffffffff9081166020808401919091528701518284015291860151821660608201526200083f945061010090920416915063c64b3bb5906080016040516020818303038152906040526040518263ffffffff1660e01b8152600401620007f3919062001524565b602060405180830381865afa15801562000811573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000837919062001540565b600062001020565b505050565b60408051606081018252601f5473ffffffffffffffffffffffffffffffffffffffff9081168083526020830186905290841682840181905292517fe1380b72000000000000000000000000000000000000000000000000000000008152600481019390935273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee60248401529091737109709ecfa91a80626ff3989d68f67f5b1dd12d91634c63e5629186919063e1380b7290604401602060405180830381865afa1580156200090b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000931919062001564565b601f546040517f562ac3dc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff888116600483015273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee60248301529091169063562ac3dc90604401602060405180830381865afa158015620009bc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009e2919062001564565b620009ee91906200157e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681529111600482015260240160006040518083038186803b15801562000a3d57600080fd5b505afa15801562000a52573d6000803e3d6000fd5b5050601e5460408051855173ffffffffffffffffffffffffffffffffffffffff9081166020808401919091528701518284015291860151821660608201526200083f945061010090920416915063c64b3bb5906080016040516020818303038152906040526040518263ffffffff1660e01b815260040162000ad5919062001524565b602060405180830381865afa15801562000af3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b19919062001540565b600162001020565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620004bc57838290600052602060002001805462000b6790620014cf565b80601f016020809104026020016040519081016040528092919081815260200182805462000b9590620014cf565b801562000be65780601f1062000bba5761010080835404028352916020019162000be6565b820191906000526020600020905b81548152906001019060200180831162000bc857829003601f168201915b50505050508152602001906001019062000b45565b62000cf1601e60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000c6d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405262000cb59190810190620015ec565b6040518060400160405280600e81526020017f436865636b47656c61746f4c6f77000000000000000000000000000000000000815250620010ac565b565b6060601c805480602002602001604051908101604052809291908181526020016000905b82821015620004bc57600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801562000de657602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841162000d925790505b5050505050815250508152602001906001019062000d17565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620004bc57838290600052602060002001805462000e4590620014cf565b80601f016020809104026020016040519081016040528092919081815260200182805462000e7390620014cf565b801562000ec45780601f1062000e985761010080835404028352916020019162000ec4565b820191906000526020600020905b81548152906001019060200180831162000ea657829003601f168201915b50505050508152602001906001019062000e23565b60085460009060ff161562000ef2575060085460ff1690565b6040517f667f9d70000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d600482018190527f6661696c65640000000000000000000000000000000000000000000000000000602483015260009163667f9d7090604401602060405180830381865afa15801562000f84573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000faa919062001564565b1415905090565b60606015805480602002602001604051908101604052809291908181526020018280548015620003605760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831162000334575050505050905090565b6040517ff7fe347700000000000000000000000000000000000000000000000000000000815282151560048201528115156024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f7fe3477906044015b60006040518083038186803b1580156200108f57600080fd5b505afa158015620010a4573d6000803e3d6000fd5b505050505050565b6040517ff320d963000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f320d96390620010769085908590600401620016c3565b61070580620016f683390190565b6101ef8062001dfb83390190565b6020808252825182820181905260009190848201906040850190845b818110156200116c57835173ffffffffffffffffffffffffffffffffffffffff168352928401929184019160010162001138565b50909695505050505050565b60005b83811015620011955781810151838201526020016200117b565b83811115620011a5576000848401525b50505050565b60008151808452620011c581602086016020860162001178565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b85811015620012f6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08b85030187528251805173ffffffffffffffffffffffffffffffffffffffff1685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015620012df577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0898503018352620012cc848651620011ab565b948e01949350918d01916001016200128f565b505050978a0197945050918801916001016200121e565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015620013f1578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b80831015620013db5783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b019062001397565b50978a019795505050918701916001016200132e565b50919998505050505050505050565b600080604083850312156200141457600080fd5b82359150602083013573ffffffffffffffffffffffffffffffffffffffff811681146200144057600080fd5b809150509250929050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015620014c2577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452620014af858351620011ab565b9450928501929085019060010162001472565b5092979650505050505050565b600181811c90821680620014e457607f821691505b6020821081036200151e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b602081526000620015396020830184620011ab565b9392505050565b6000602082840312156200155357600080fd5b815180151581146200153957600080fd5b6000602082840312156200157757600080fd5b5051919050565b600082821015620015b8577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060208284031215620015ff57600080fd5b815167ffffffffffffffff808211156200161857600080fd5b818401915084601f8301126200162d57600080fd5b815181811115620016425762001642620015bd565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156200168b576200168b620015bd565b81604052828152876020848701011115620016a557600080fd5b620016b883602083016020880162001178565b979650505050505050565b604081526000620016d86040830185620011ab565b8281036020840152620016ec8185620011ab565b9594505050505056fe60c0604052600e60809081526d436865636b47656c61746f4c6f7760901b60a05260009061002d90826100df565b5034801561003a57600080fd5b5061019e565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061006a57607f821691505b60208210810361008a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156100da57600081815260208120601f850160051c810160208610156100b75750805b601f850160051c820191505b818110156100d6578281556001016100c3565b5050505b505050565b81516001600160401b038111156100f8576100f8610040565b61010c816101068454610056565b84610090565b602080601f83116001811461014157600084156101295750858301515b600019600386901b1c1916600185901b1785556100d6565b600085815260208120601f198616915b8281101561017057888601518255948401946001909101908401610151565b508582101561018e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610558806101ad6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806306fdde031461003b578063c64b3bb514610059575b600080fd5b61004361007c565b60405161005091906102a2565b60405180910390f35b61006c610067366004610344565b61010a565b6040519015158152602001610050565b6000805461008990610413565b80601f01602080910402602001604051908101604052809291908181526020018280546100b590610413565b80156101025780601f106100d757610100808354040283529160200191610102565b820191906000526020600020905b8154815290600101906020018083116100e557829003601f168201915b505050505081565b60008082806020019051810190610121919061048f565b805160408083015190517f562ac3dc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216600482015273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee60248201819052939450600092919091169063562ac3dc90604401602060405180830381865afa1580156101b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101dc91906104f4565b835160408086015190517fe1380b7200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182166004820152858216602482015292935060009291169063e1380b7290604401602060405180830381865afa15801561025d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028191906104f4565b9050600061028f828461050d565b6020909501519094109695505050505050565b600060208083528351808285015260005b818110156102cf578581018301518582016040015282016102b3565b818111156102e1576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561035657600080fd5b813567ffffffffffffffff8082111561036e57600080fd5b818401915084601f83011261038257600080fd5b81358181111561039457610394610315565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156103da576103da610315565b816040528281528760208487010111156103f357600080fd5b826020860160208301376000928101602001929092525095945050505050565b600181811c9082168061042757607f821691505b602082108103610460577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b805173ffffffffffffffffffffffffffffffffffffffff8116811461048a57600080fd5b919050565b6000606082840312156104a157600080fd5b6040516060810181811067ffffffffffffffff821117156104c4576104c4610315565b6040526104d083610466565b8152602083015160208201526104e860408401610466565b60408201529392505050565b60006020828403121561050657600080fd5b5051919050565b600082821015610546577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50039056fea164736f6c634300080f000a608060405234801561001057600080fd5b506101cf806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063562ac3dc1461004657806372eec2941461009d578063e1380b72146100e3575b600080fd5b61008b610054366004610153565b73ffffffffffffffffffffffffffffffffffffffff8082166000908152602081815260408083209386168352929052205492915050565b60405190815260200160405180910390f35b6100e16100ab366004610186565b73ffffffffffffffffffffffffffffffffffffffff91821660009081526020818152604080832095909416825293909352912055565b005b61008b6100f1366004610153565b73ffffffffffffffffffffffffffffffffffffffff80821660009081526001602090815260408083209386168352929052205492915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461014e57600080fd5b919050565b6000806040838503121561016657600080fd5b61016f8361012a565b915061017d6020840161012a565b90509250929050565b60008060006060848603121561019b57600080fd5b6101a48461012a565b92506101b26020850161012a565b915060408401359050925092509256fea164736f6c634300080f000aa164736f6c634300080f000a";

type CheckGelatoLowTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CheckGelatoLowTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CheckGelatoLowTest__factory extends ContractFactory {
  constructor(...args: CheckGelatoLowTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<CheckGelatoLowTest> {
    return super.deploy(overrides || {}) as Promise<CheckGelatoLowTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CheckGelatoLowTest {
    return super.attach(address) as CheckGelatoLowTest;
  }
  override connect(signer: Signer): CheckGelatoLowTest__factory {
    return super.connect(signer) as CheckGelatoLowTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CheckGelatoLowTestInterface {
    return new utils.Interface(_abi) as CheckGelatoLowTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CheckGelatoLowTest {
    return new Contract(address, _abi, signerOrProvider) as CheckGelatoLowTest;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RLPWriter_writeString_Test,
  RLPWriter_writeString_TestInterface,
} from "../../RLPWriter.t.sol/RLPWriter_writeString_Test";

const _abi = [
  {
    type: "function",
    name: "IS_TEST",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeArtifacts",
    inputs: [],
    outputs: [
      {
        name: "excludedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeContracts",
    inputs: [],
    outputs: [
      {
        name: "excludedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeSenders",
    inputs: [],
    outputs: [
      {
        name: "excludedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "failed",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetArtifactSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifactSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetArtifacts",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetContracts",
    inputs: [],
    outputs: [
      {
        name: "targetedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetInterfaces",
    inputs: [],
    outputs: [
      {
        name: "targetedInterfaces_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzInterface[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "artifacts",
            type: "string[]",
            internalType: "string[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSenders",
    inputs: [],
    outputs: [
      {
        name: "targetedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "test_writeString_bytestring00_succeeds",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "test_writeString_bytestring01_succeeds",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "test_writeString_bytestring7f_succeeds",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "test_writeString_empty_succeeds",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "test_writeString_longstring2_succeeds",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "test_writeString_longstring_succeeds",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "test_writeString_shortstring2_succeeds",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "test_writeString_shortstring_succeeds",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "event",
    name: "log",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_address",
    inputs: [
      {
        name: "",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes32",
    inputs: [
      {
        name: "",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_int",
    inputs: [
      {
        name: "",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_address",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes32",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_string",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_string",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_uint",
    inputs: [
      {
        name: "",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "logs",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x6080604052600c8054600160ff199182168117909255601e8054909116909117905534801561002d57600080fd5b50611f838061003d6000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c8063916a17c6116100cd578063d17428be11610081578063e20c9f7111610066578063e20c9f7114610225578063e358a3d91461022d578063fa7626d41461023557600080fd5b8063d17428be14610215578063d5b771541461021d57600080fd5b8063b5508aa9116100b2578063b5508aa9146101ed578063ba414fa6146101f5578063ca48e2921461020d57600080fd5b8063916a17c6146101dd57806397c3a4d4146101e557600080fd5b80633e5e3c231161012457806366d9a9a01161010957806366d9a9a0146101ab57806377472181146101c057806385226c81146101c857600080fd5b80633e5e3c231461019b5780633f7286f4146101a357600080fd5b80630e7de651146101565780630ed76557146101605780631ed7831c146101685780632ade388014610186575b600080fd5b61015e610242565b005b61015e61029a565b6101706102d8565b60405161017d9190610f96565b60405180910390f35b61018e610347565b60405161017d919061106a565b610170610496565b610170610503565b6101b3610570565b60405161017d9190611173565b61015e610678565b6101d06106ba565b60405161017d9190611269565b6101b361078a565b61015e610892565b6101d061090e565b6101fd6109de565b604051901515815260200161017d565b61015e610ab2565b61015e610b2e565b61015e610baa565b610170610bf2565b61015e610c5f565b601e546101fd9060ff1681565b61029861025d60405180602001604052806000815250610ca1565b6040518060400160405280600181526020017f8000000000000000000000000000000000000000000000000000000000000000815250610cb2565b565b6102986102bc6040518060400160405280600181526020016000815250610ca1565b6040518060400160405280600181526020016000815250610cb2565b6060601680548060200260200160405190810160405280929190818152602001828054801561033d57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610312575b5050505050905090565b6060601d805480602002602001604051908101604052809291908181526020016000905b8282101561048d576000848152602080822060408051808201825260028702909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939591948681019491929084015b828210156104765783829060005260206000200180546103e9906112e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610415906112e9565b80156104625780601f1061043757610100808354040283529160200191610462565b820191906000526020600020905b81548152906001019060200180831161044557829003601f168201915b5050505050815260200190600101906103ca565b50505050815250508152602001906001019061036b565b50505050905090565b6060601880548060200260200160405190810160405280929190818152602001828054801561033d5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610312575050505050905090565b6060601780548060200260200160405190810160405280929190818152602001828054801561033d5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610312575050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b8282101561048d57600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561066057602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841161060d5790505b50505050508152505081526020019060010190610594565b61029861069c604051806060016040528060388152602001611f3f60389139610ca1565b6040518060600160405280603a8152602001611f05603a9139610cb2565b6060601a805480602002602001604051908101604052809291908181526020016000905b8282101561048d5783829060005260206000200180546106fd906112e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610729906112e9565b80156107765780601f1061074b57610100808354040283529160200191610776565b820191906000526020600020905b81548152906001019060200180831161075957829003601f168201915b5050505050815260200190600101906106de565b6060601c805480602002602001604051908101604052809291908181526020016000905b8282101561048d57600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561087a57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116108275790505b505050505081525050815260200190600101906107ae565b6102986108d36040518060400160405280600181526020017f0100000000000000000000000000000000000000000000000000000000000000815250610ca1565b6040518060400160405280600181526020017f0100000000000000000000000000000000000000000000000000000000000000815250610cb2565b60606019805480602002602001604051908101604052809291908181526020016000905b8282101561048d578382906000526020600020018054610951906112e9565b80601f016020809104026020016040519081016040528092919081815260200182805461097d906112e9565b80156109ca5780601f1061099f576101008083540402835291602001916109ca565b820191906000526020600020905b8154815290600101906020018083116109ad57829003601f168201915b505050505081526020019060010190610932565b60085460009060ff16156109f6575060085460ff1690565b6040517f667f9d70000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d600482018190527f6661696c65640000000000000000000000000000000000000000000000000000602483015260009163667f9d7090604401602060405180830381865afa158015610a87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aab919061133c565b1415905090565b610298610af36040518060400160405280600181526020017f7f00000000000000000000000000000000000000000000000000000000000000815250610ca1565b6040518060400160405280600181526020017f7f00000000000000000000000000000000000000000000000000000000000000815250610cb2565b610298610b6f6040518060400160405280600381526020017f646f670000000000000000000000000000000000000000000000000000000000815250610ca1565b6040518060400160405280600481526020017f83646f6700000000000000000000000000000000000000000000000000000000815250610cb2565b610298610bd160405180610420016040528061040081526020016116cb6104009139610ca1565b6040518061044001604052806104038152602001611acb6104039139610cb2565b6060601580548060200260200160405190810160405280929190818152602001828054801561033d5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610312575050505050905090565b610298610c83604051806060016040528060378152602001611ece60379139610ca1565b60405180606001604052806038815260200161169360389139610cb2565b6060610cac82610d38565b92915050565b6040517f97624631000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d90639762463190610d049085908590600401611355565b60006040518083038186803b158015610d1c57600080fd5b505afa158015610d30573d6000803e3d6000fd5b505050505050565b606081516001148015610d655750608082600081518110610d5b57610d5b611383565b016020015160f81c105b15610d6e575090565b610d7a82516080610da2565b82604051602001610d8c9291906113b2565b6040516020818303038152906040529050919050565b60606038831015610e205760408051600180825281830190925290602082018180368337019050509050610dd6828461143f565b60f81b81600081518110610dec57610dec611383565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610cac565b600060015b610e2f8186611493565b15610e555781610e3e816114a7565b9250610e4e9050610100826114df565b9050610e25565b610e6082600161151c565b67ffffffffffffffff811115610e7857610e786113e1565b6040519080825280601f01601f191660200182016040528015610ea2576020820181803683370190505b509250610eaf848361143f565b610eba90603761143f565b60f81b83600081518110610ed057610ed0611383565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600190505b818111610f8e57610100610f188284611534565b610f249061010061166b565b610f2e9087611493565b610f38919061167e565b60f81b838281518110610f4d57610f4d611383565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080610f86816114a7565b915050610f04565b505092915050565b6020808252825182820181905260009190848201906040850190845b81811015610fe457835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610fb2565b50909695505050505050565b60005b8381101561100b578181015183820152602001610ff3565b8381111561101a576000848401525b50505050565b60008151808452611038816020860160208601610ff0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b85811015611163577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08b85030187528251805173ffffffffffffffffffffffffffffffffffffffff1685528901518985018990528051898601819052908a0190606081881b870181019190870190855b8181101561114d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa089850301835261113b848651611020565b948e01949350918d0191600101611101565b505050978a019794505091880191600101611091565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561125a578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b808310156112455783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b0190611203565b50978a0197955050509187019160010161119b565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156112dc577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526112ca858351611020565b94509285019290850190600101611290565b5092979650505050505050565b600181811c908216806112fd57607f821691505b602082108103611336577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60006020828403121561134e57600080fd5b5051919050565b6040815260006113686040830185611020565b828103602084015261137a8185611020565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600083516113c4818460208801610ff0565b8351908301906113d8818360208801610ff0565b01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060ff821660ff84168060ff0382111561145c5761145c611410565b019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826114a2576114a2611464565b500490565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036114d8576114d8611410565b5060010190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561151757611517611410565b500290565b6000821982111561152f5761152f611410565b500190565b60008282101561154657611546611410565b500390565b600181815b808511156115a457817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561158a5761158a611410565b8085161561159757918102915b93841c9390800290611550565b509250929050565b6000826115bb57506001610cac565b816115c857506000610cac565b81600181146115de57600281146115e857611604565b6001915050610cac565b60ff8411156115f9576115f9611410565b50506001821b610cac565b5060208310610133831016604e8410600b8410161715611627575081810a610cac565b611631838361154b565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561166357611663611410565b029392505050565b600061167783836115ac565b9392505050565b60008261168d5761168d611464565b50069056feb74c6f72656d20697073756d20646f6c6f722073697420616d65742c20636f6e7365637465747572206164697069736963696e6720656c694c6f72656d20697073756d20646f6c6f722073697420616d65742c20636f6e73656374657475722061646970697363696e6720656c69742e20437572616269747572206d6175726973206d61676e612c20737573636970697420736564207665686963756c61206e6f6e2c20696163756c697320666175636962757320746f72746f722e2050726f696e20737573636970697420756c74726963696573206d616c6573756164612e204475697320746f72746f7220656c69742c2064696374756d2071756973207472697374697175652065752c20756c7472696365732061742072697375732e204d6f72626920612065737420696d70657264696574206d6920756c6c616d636f7270657220616c6971756574207375736369706974206e6563206c6f72656d2e2041656e65616e2071756973206c656f206d6f6c6c69732c2076756c70757461746520656c6974207661726975732c20636f6e73657175617420656e696d2e204e756c6c6120756c74726963657320747572706973206a7573746f2c20657420706f73756572652075726e6120636f6e7365637465747572206e65632e2050726f696e206e6f6e20636f6e76616c6c6973206d657475732e20446f6e65632074656d706f7220697073756d20696e206d617572697320636f6e67756520736f6c6c696369747564696e2e20566573746962756c756d20616e746520697073756d207072696d697320696e206661756369627573206f726369206c756374757320657420756c74726963657320706f737565726520637562696c69612043757261653b2053757370656e646973736520636f6e76616c6c69732073656d2076656c206d617373612066617563696275732c2065676574206c6163696e6961206c616375732074656d706f722e204e756c6c61207175697320756c747269636965732070757275732e2050726f696e20617563746f722072686f6e637573206e69626820636f6e64696d656e74756d206d6f6c6c69732e20416c697175616d20636f6e73657175617420656e696d206174206d65747573206c75637475732c206120656c656966656e6420707572757320656765737461732e20437572616269747572206174206e696268206d657475732e204e616d20626962656e64756d2c206e6571756520617420617563746f72207472697374697175652c206c6f72656d206c696265726f20616c697175657420617263752c206e6f6e20696e74657264756d2074656c6c7573206c65637475732073697420616d65742065726f732e20437261732072686f6e6375732c206d65747573206163206f726e617265206375727375732c20646f6c6f72206a7573746f20756c747269636573206d657475732c20617420756c6c616d636f7270657220766f6c7574706174b904004c6f72656d20697073756d20646f6c6f722073697420616d65742c20636f6e73656374657475722061646970697363696e6720656c69742e20437572616269747572206d6175726973206d61676e612c20737573636970697420736564207665686963756c61206e6f6e2c20696163756c697320666175636962757320746f72746f722e2050726f696e20737573636970697420756c74726963696573206d616c6573756164612e204475697320746f72746f7220656c69742c2064696374756d2071756973207472697374697175652065752c20756c7472696365732061742072697375732e204d6f72626920612065737420696d70657264696574206d6920756c6c616d636f7270657220616c6971756574207375736369706974206e6563206c6f72656d2e2041656e65616e2071756973206c656f206d6f6c6c69732c2076756c70757461746520656c6974207661726975732c20636f6e73657175617420656e696d2e204e756c6c6120756c74726963657320747572706973206a7573746f2c20657420706f73756572652075726e6120636f6e7365637465747572206e65632e2050726f696e206e6f6e20636f6e76616c6c6973206d657475732e20446f6e65632074656d706f7220697073756d20696e206d617572697320636f6e67756520736f6c6c696369747564696e2e20566573746962756c756d20616e746520697073756d207072696d697320696e206661756369627573206f726369206c756374757320657420756c74726963657320706f737565726520637562696c69612043757261653b2053757370656e646973736520636f6e76616c6c69732073656d2076656c206d617373612066617563696275732c2065676574206c6163696e6961206c616375732074656d706f722e204e756c6c61207175697320756c747269636965732070757275732e2050726f696e20617563746f722072686f6e637573206e69626820636f6e64696d656e74756d206d6f6c6c69732e20416c697175616d20636f6e73657175617420656e696d206174206d65747573206c75637475732c206120656c656966656e6420707572757320656765737461732e20437572616269747572206174206e696268206d657475732e204e616d20626962656e64756d2c206e6571756520617420617563746f72207472697374697175652c206c6f72656d206c696265726f20616c697175657420617263752c206e6f6e20696e74657264756d2074656c6c7573206c65637475732073697420616d65742065726f732e20437261732072686f6e6375732c206d65747573206163206f726e617265206375727375732c20646f6c6f72206a7573746f20756c747269636573206d657475732c20617420756c6c616d636f7270657220766f6c75747061744c6f72656d20697073756d20646f6c6f722073697420616d65742c20636f6e7365637465747572206164697069736963696e6720656c69b8384c6f72656d20697073756d20646f6c6f722073697420616d65742c20636f6e7365637465747572206164697069736963696e6720656c69744c6f72656d20697073756d20646f6c6f722073697420616d65742c20636f6e7365637465747572206164697069736963696e6720656c6974a164736f6c634300080f000a";

type RLPWriter_writeString_TestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RLPWriter_writeString_TestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RLPWriter_writeString_Test__factory extends ContractFactory {
  constructor(...args: RLPWriter_writeString_TestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<RLPWriter_writeString_Test> {
    return super.deploy(overrides || {}) as Promise<RLPWriter_writeString_Test>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RLPWriter_writeString_Test {
    return super.attach(address) as RLPWriter_writeString_Test;
  }
  override connect(signer: Signer): RLPWriter_writeString_Test__factory {
    return super.connect(signer) as RLPWriter_writeString_Test__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RLPWriter_writeString_TestInterface {
    return new utils.Interface(_abi) as RLPWriter_writeString_TestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RLPWriter_writeString_Test {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RLPWriter_writeString_Test;
  }
}

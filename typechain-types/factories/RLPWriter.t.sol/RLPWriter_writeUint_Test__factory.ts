/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RLPWriter_writeUint_Test,
  RLPWriter_writeUint_TestInterface,
} from "../../RLPWriter.t.sol/RLPWriter_writeUint_Test";

const _abi = [
  {
    type: "function",
    name: "IS_TEST",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeArtifacts",
    inputs: [],
    outputs: [
      {
        name: "excludedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeContracts",
    inputs: [],
    outputs: [
      {
        name: "excludedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeSenders",
    inputs: [],
    outputs: [
      {
        name: "excludedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "failed",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetArtifactSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifactSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetArtifacts",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetContracts",
    inputs: [],
    outputs: [
      {
        name: "targetedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetInterfaces",
    inputs: [],
    outputs: [
      {
        name: "targetedInterfaces_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzInterface[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "artifacts",
            type: "string[]",
            internalType: "string[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSenders",
    inputs: [],
    outputs: [
      {
        name: "targetedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "test_writeUint_mediumint2_succeeds",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "test_writeUint_mediumint3_succeeds",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "test_writeUint_mediumint_succeeds",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "test_writeUint_smallint2_succeeds",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "test_writeUint_smallint3_succeeds",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "test_writeUint_smallint4_succeeds",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "test_writeUint_smallint_succeeds",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "test_writeUint_zero_succeeds",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "event",
    name: "log",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_address",
    inputs: [
      {
        name: "",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes32",
    inputs: [
      {
        name: "",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_int",
    inputs: [
      {
        name: "",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_address",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes32",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_string",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_string",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_uint",
    inputs: [
      {
        name: "",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "logs",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x6080604052600c8054600160ff199182168117909255601e8054909116909117905534801561002d57600080fd5b5061177b8061003d6000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c80637b6b851e116100cd578063ba414fa611610081578063e20c9f7111610066578063e20c9f7114610225578063fa7626d41461022d578063ffbbcbb01461023a57600080fd5b8063ba414fa614610205578063c37e26731461021d57600080fd5b80638acae7b8116100b25780638acae7b8146101ed578063916a17c6146101f5578063b5508aa9146101fd57600080fd5b80637b6b851e146101d057806385226c81146101d857600080fd5b80634739d42d1161012457806361fa9b7b1161010957806361fa9b7b146101ab57806366d9a9a0146101b35780637545bbfd146101c857600080fd5b80634739d42d146101995780634c1524ea146101a357600080fd5b80631ed7831c146101565780632ade3880146101745780633e5e3c23146101895780633f7286f414610191575b600080fd5b61015e610242565b60405161016b9190611072565b60405180910390f35b61017c6102b1565b60405161016b9190611146565b61015e610400565b61015e61046d565b6101a16104da565b005b6101a1610524565b6101a161056c565b6101bb6105b4565b60405161016b919061124f565b6101a16106bc565b6101a1610705565b6101e061074d565b60405161016b9190611345565b6101a161081d565b6101bb610865565b6101e061096d565b61020d610a3d565b604051901515815260200161016b565b6101a1610b11565b61015e610b59565b601e5461020d9060ff1681565b6101a1610bc6565b606060168054806020026020016040519081016040528092919081815260200182805480156102a757602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161027c575b5050505050905090565b6060601d805480602002602001604051908101604052809291908181526020016000905b828210156103f7576000848152602080822060408051808201825260028702909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939591948681019491929084015b828210156103e0578382906000526020600020018054610353906113c5565b80601f016020809104026020016040519081016040528092919081815260200182805461037f906113c5565b80156103cc5780601f106103a1576101008083540402835291602001916103cc565b820191906000526020600020905b8154815290600101906020018083116103af57829003601f168201915b505050505081526020019060010190610334565b5050505081525050815260200190600101906102d5565b50505050905090565b606060188054806020026020016040519081016040528092919081815260200182805480156102a75760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161027c575050505050905090565b606060178054806020026020016040519081016040528092919081815260200182805480156102a75760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161027c575050505050905090565b6105226104e76001610c10565b6040518060400160405280600181526020017f0100000000000000000000000000000000000000000000000000000000000000815250610c29565b565b610522610531607f610c10565b6040518060400160405280600181526020017f7f00000000000000000000000000000000000000000000000000000000000000815250610c29565b6105226105796080610c10565b6040518060400160405280600281526020017f8180000000000000000000000000000000000000000000000000000000000000815250610c29565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156103f757600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff1683526001810180548351818702810187019094528084529394919385830193928301828280156106a457602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116106515790505b505050505081525050815260200190600101906105d8565b6105226106ca6103e8610c10565b6040518060400160405280600381526020017f8203e80000000000000000000000000000000000000000000000000000000000815250610c29565b6105226107126000610c10565b6040518060400160405280600181526020017f8000000000000000000000000000000000000000000000000000000000000000815250610c29565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156103f7578382906000526020600020018054610790906113c5565b80601f01602080910402602001604051908101604052809291908181526020018280546107bc906113c5565b80156108095780601f106107de57610100808354040283529160200191610809565b820191906000526020600020905b8154815290600101906020018083116107ec57829003601f168201915b505050505081526020019060010190610771565b61052261082a6010610c10565b6040518060400160405280600181526020017f1000000000000000000000000000000000000000000000000000000000000000815250610c29565b6060601c805480602002602001604051908101604052809291908181526020016000905b828210156103f757600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561095557602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116109025790505b50505050508152505081526020019060010190610889565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156103f75783829060005260206000200180546109b0906113c5565b80601f01602080910402602001604051908101604052809291908181526020018280546109dc906113c5565b8015610a295780601f106109fe57610100808354040283529160200191610a29565b820191906000526020600020905b815481529060010190602001808311610a0c57829003601f168201915b505050505081526020019060010190610991565b60085460009060ff1615610a55575060085460ff1690565b6040517f667f9d70000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d600482018190527f6661696c65640000000000000000000000000000000000000000000000000000602483015260009163667f9d7090604401602060405180830381865afa158015610ae6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0a9190611418565b1415905090565b610522610b1e604f610c10565b6040518060400160405280600181526020017f4f00000000000000000000000000000000000000000000000000000000000000815250610c29565b606060158054806020026020016040519081016040528092919081815260200182805480156102a75760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161027c575050505050905090565b610522610bd5620186a0610c10565b6040518060400160405280600481526020017f830186a000000000000000000000000000000000000000000000000000000000815250610c29565b6060610c23610c1e83610caf565b610e14565b92915050565b6040517f97624631000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d90639762463190610c7b9085908590600401611431565b60006040518083038186803b158015610c9357600080fd5b505afa158015610ca7573d6000803e3d6000fd5b505050505050565b6060600082604051602001610cc691815260200190565b604051602081830303815290604052905060005b6020811015610d3557818181518110610cf557610cf561145f565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016600003610d355780610d2d816114bd565b915050610cda565b610d408160206114f5565b67ffffffffffffffff811115610d5857610d5861150c565b6040519080825280601f01601f191660200182016040528015610d82576020820181803683370190505b50925060005b8351811015610e0c578282610d9c816114bd565b935081518110610dae57610dae61145f565b602001015160f81c60f81b848281518110610dcb57610dcb61145f565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080610e04816114bd565b915050610d88565b505050919050565b606081516001148015610e415750608082600081518110610e3757610e3761145f565b016020015160f81c105b15610e4a575090565b610e5682516080610e7e565b82604051602001610e6892919061153b565b6040516020818303038152906040529050919050565b60606038831015610efc5760408051600180825281830190925290602082018180368337019050509050610eb2828461156a565b60f81b81600081518110610ec857610ec861145f565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610c23565b600060015b610f0b81866115be565b15610f315781610f1a816114bd565b9250610f2a9050610100826115d2565b9050610f01565b610f3c82600161160f565b67ffffffffffffffff811115610f5457610f5461150c565b6040519080825280601f01601f191660200182016040528015610f7e576020820181803683370190505b509250610f8b848361156a565b610f9690603761156a565b60f81b83600081518110610fac57610fac61145f565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600190505b81811161106a57610100610ff482846114f5565b61100090610100611747565b61100a90876115be565b611014919061175a565b60f81b8382815181106110295761102961145f565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080611062816114bd565b915050610fe0565b505092915050565b6020808252825182820181905260009190848201906040850190845b818110156110c057835173ffffffffffffffffffffffffffffffffffffffff168352928401929184019160010161108e565b50909695505050505050565b60005b838110156110e75781810151838201526020016110cf565b838111156110f6576000848401525b50505050565b600081518084526111148160208601602086016110cc565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b8581101561123f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08b85030187528251805173ffffffffffffffffffffffffffffffffffffffff1685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015611229577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08985030183526112178486516110fc565b948e01949350918d01916001016111dd565b505050978a01979450509188019160010161116d565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015611336578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b808310156113215783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b01906112df565b50978a01979550505091870191600101611277565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156113b8577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526113a68583516110fc565b9450928501929085019060010161136c565b5092979650505050505050565b600181811c908216806113d957607f821691505b602082108103611412577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60006020828403121561142a57600080fd5b5051919050565b60408152600061144460408301856110fc565b828103602084015261145681856110fc565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036114ee576114ee61148e565b5060010190565b6000828210156115075761150761148e565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000835161154d8184602088016110cc565b8351908301906115618183602088016110cc565b01949350505050565b600060ff821660ff84168060ff038211156115875761158761148e565b019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826115cd576115cd61158f565b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561160a5761160a61148e565b500290565b600082198211156116225761162261148e565b500190565b600181815b8085111561168057817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156116665761166661148e565b8085161561167357918102915b93841c939080029061162c565b509250929050565b60008261169757506001610c23565b816116a457506000610c23565b81600181146116ba57600281146116c4576116e0565b6001915050610c23565b60ff8411156116d5576116d561148e565b50506001821b610c23565b5060208310610133831016604e8410600b8410161715611703575081810a610c23565b61170d8383611627565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561173f5761173f61148e565b029392505050565b60006117538383611688565b9392505050565b6000826117695761176961158f565b50069056fea164736f6c634300080f000a";

type RLPWriter_writeUint_TestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RLPWriter_writeUint_TestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RLPWriter_writeUint_Test__factory extends ContractFactory {
  constructor(...args: RLPWriter_writeUint_TestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<RLPWriter_writeUint_Test> {
    return super.deploy(overrides || {}) as Promise<RLPWriter_writeUint_Test>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RLPWriter_writeUint_Test {
    return super.attach(address) as RLPWriter_writeUint_Test;
  }
  override connect(signer: Signer): RLPWriter_writeUint_Test__factory {
    return super.connect(signer) as RLPWriter_writeUint_Test__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RLPWriter_writeUint_TestInterface {
    return new utils.Interface(_abi) as RLPWriter_writeUint_TestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RLPWriter_writeUint_Test {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RLPWriter_writeUint_Test;
  }
}

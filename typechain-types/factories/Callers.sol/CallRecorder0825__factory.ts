/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CallRecorder0825,
  CallRecorder0825Interface,
} from "../../Callers.sol/CallRecorder0825";

const _abi = [
  {
    type: "function",
    name: "lastCall",
    inputs: [],
    outputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "gas",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "record",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f80fd5b506103c88061001c5f395ff3fe608060405260043610610028575f3560e01c8063266cf1091461002c578063da516aa914610036575b5f80fd5b610034610063565b005b348015610041575f80fd5b5061004a6100a6565b60405161005a949392919061015d565b60405180910390f35b5f80547fffffffffffffffffffffffff0000000000000000000000000000000000000000163317815560019061009b903690836102a5565b505a60025534600355565b5f80546001805473ffffffffffffffffffffffffffffffffffffffff90921692916100d090610208565b80601f01602080910402602001604051908101604052809291908181526020018280546100fc90610208565b80156101475780601f1061011e57610100808354040283529160200191610147565b820191905f5260205f20905b81548152906001019060200180831161012a57829003601f168201915b5050505050908060020154908060030154905084565b73ffffffffffffffffffffffffffffffffffffffff85168152608060208201525f8451806080840152806020870160a085015e5f60a0828501015260a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505083604083015282606083015295945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b600181811c9082168061021c57607f821691505b602082108103610253577f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b50919050565b601f8211156102a057805f5260205f20601f840160051c8101602085101561027e5750805b601f840160051c820191505b8181101561029d575f815560010161028a565b50505b505050565b67ffffffffffffffff8311156102bd576102bd6101db565b6102d1836102cb8354610208565b83610259565b5f601f841160018114610321575f85156102eb5750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b17835561029d565b5f838152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08716915b8281101561036e578685013582556020948501946001909201910161034e565b50868210156103a9577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b018355505050505056fea164736f6c6343000819000a";

type CallRecorder0825ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CallRecorder0825ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CallRecorder0825__factory extends ContractFactory {
  constructor(...args: CallRecorder0825ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<CallRecorder0825> {
    return super.deploy(overrides || {}) as Promise<CallRecorder0825>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CallRecorder0825 {
    return super.attach(address) as CallRecorder0825;
  }
  override connect(signer: Signer): CallRecorder0825__factory {
    return super.connect(signer) as CallRecorder0825__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CallRecorder0825Interface {
    return new utils.Interface(_abi) as CallRecorder0825Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CallRecorder0825 {
    return new Contract(address, _abi, signerOrProvider) as CallRecorder0825;
  }
}

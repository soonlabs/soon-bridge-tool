/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConfigurableCaller0815,
  ConfigurableCaller0815Interface,
} from "../../Callers.sol/ConfigurableCaller0815";

const _abi = [
  {
    type: "fallback",
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "call",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setDoRevert",
    inputs: [
      {
        name: "_doRevert",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setPayload",
    inputs: [
      {
        name: "_payload",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setTarget",
    inputs: [
      {
        name: "_target",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "WhatHappened",
    inputs: [
      {
        name: "success",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
      {
        name: "returndata",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60806040526000805460ff1916600117905534801561001d57600080fd5b506106958061002d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806328b5e32b146100c0578063776d1a01146100c8578063781dd75014610122578063deb3cdf214610161575b60005460ff16156100be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f436f6e666967757261626c6543616c6c65723a2072657665727400000000000060448201526064015b60405180910390fd5b005b6100be610174565b6100be6100d63660046102bb565b6000805473ffffffffffffffffffffffffffffffffffffffff909216610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff909216919091179055565b6100be6101303660046102f8565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b6100be61016f36600461031a565b6102ae565b60005460ff16156101e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f436f6e666967757261626c6543616c6c65723a2072657665727400000000000060448201526064016100b5565b600080546040518291610100900473ffffffffffffffffffffffffffffffffffffffff1690610212906001906103df565b6000604051808303816000865af19150503d806000811461024f576040519150601f19603f3d011682016040523d82523d6000602084013e610254565b606091505b50915091507f2106b16c04ed7c28102e8f5bae2a81f8f969346efa3d397f8dd488794385d414828260405161028a929190610473565b60405180910390a18180156102a157815160208301f35b815160208301fd5b505050565b60016102a982848361056d565b6000602082840312156102cd57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146102f157600080fd5b9392505050565b60006020828403121561030a57600080fd5b813580151581146102f157600080fd5b6000806020838503121561032d57600080fd5b823567ffffffffffffffff8082111561034557600080fd5b818501915085601f83011261035957600080fd5b81358181111561036857600080fd5b86602082850101111561037a57600080fd5b60209290920196919550909350505050565b600181811c908216806103a057607f821691505b6020821081036103d9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60008083546103ed8161038c565b60018281168015610405576001811461043857610467565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0084168752821515830287019450610467565b8760005260208060002060005b8581101561045e5781548a820152908401908201610445565b50505082870194505b50929695505050505050565b821515815260006020604081840152835180604085015260005b818110156104a95785810183015185820160600152820161048d565b818111156104bb576000606083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01692909201606001949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b601f8211156102a957600081815260208120601f850160051c810160208610156105465750805b601f850160051c820191505b8181101561056557828155600101610552565b505050505050565b67ffffffffffffffff831115610585576105856104f0565b61059983610593835461038c565b8361051f565b6000601f8411600181146105eb57600085156105b55750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b178355610681565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b8281101561063a578685013582556020948501946001909201910161061a565b5086821015610675577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b505050505056fea164736f6c634300080f000a";

type ConfigurableCaller0815ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConfigurableCaller0815ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConfigurableCaller0815__factory extends ContractFactory {
  constructor(...args: ConfigurableCaller0815ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<ConfigurableCaller0815> {
    return super.deploy(overrides || {}) as Promise<ConfigurableCaller0815>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ConfigurableCaller0815 {
    return super.attach(address) as ConfigurableCaller0815;
  }
  override connect(signer: Signer): ConfigurableCaller0815__factory {
    return super.connect(signer) as ConfigurableCaller0815__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfigurableCaller0815Interface {
    return new utils.Interface(_abi) as ConfigurableCaller0815Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConfigurableCaller0815 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ConfigurableCaller0815;
  }
}

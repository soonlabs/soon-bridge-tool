/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConfigurableCaller0825,
  ConfigurableCaller0825Interface,
} from "../../Callers.sol/ConfigurableCaller0825";

const _abi = [
  {
    type: "fallback",
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "call",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setDoRevert",
    inputs: [
      {
        name: "_doRevert",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setPayload",
    inputs: [
      {
        name: "_payload",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setTarget",
    inputs: [
      {
        name: "_target",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "WhatHappened",
    inputs: [
      {
        name: "success",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
      {
        name: "returndata",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60806040525f805460ff19166001179055348015601a575f80fd5b5061064d806100285f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c806328b5e32b146100bd578063776d1a01146100c5578063781dd7501461011e578063deb3cdf21461015c575b5f5460ff16156100bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f436f6e666967757261626c6543616c6c65723a2072657665727400000000000060448201526064015b60405180910390fd5b005b6100bb61016f565b6100bb6100d33660046102b0565b5f805473ffffffffffffffffffffffffffffffffffffffff909216610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff909216919091179055565b6100bb61012c3660046102ea565b5f80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b6100bb61016a366004610309565b6102a3565b5f5460ff16156101db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f436f6e666967757261626c6543616c6c65723a2072657665727400000000000060448201526064016100b2565b5f80546040518291610100900473ffffffffffffffffffffffffffffffffffffffff169061020b906001906103c6565b5f604051808303815f865af19150503d805f8114610244576040519150601f19603f3d011682016040523d82523d5f602084013e610249565b606091505b50915091507f2106b16c04ed7c28102e8f5bae2a81f8f969346efa3d397f8dd488794385d414828260405161027f929190610456565b60405180910390a181801561029657815160208301f35b815160208301fd5b505050565b600161029e82848361052a565b5f602082840312156102c0575f80fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146102e3575f80fd5b9392505050565b5f602082840312156102fa575f80fd5b813580151581146102e3575f80fd5b5f806020838503121561031a575f80fd5b823567ffffffffffffffff80821115610331575f80fd5b818501915085601f830112610344575f80fd5b813581811115610352575f80fd5b866020828501011115610363575f80fd5b60209290920196919550909350505050565b600181811c9082168061038957607f821691505b6020821081036103c0577f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b50919050565b5f8083546103d381610375565b600182811680156103eb576001811461041e5761044a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008416875282151583028701945061044a565b875f526020805f205f5b858110156104415781548a820152908401908201610428565b50505082870194505b50929695505050505050565b8215158152604060208201525f82518060408401528060208501606085015e5f6060828501015260607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168401019150509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b601f82111561029e57805f5260205f20601f840160051c810160208510156105045750805b601f840160051c820191505b81811015610523575f8155600101610510565b5050505050565b67ffffffffffffffff831115610542576105426104b2565b610556836105508354610375565b836104df565b5f601f8411600181146105a6575f85156105705750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b178355610523565b5f838152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08716915b828110156105f357868501358255602094850194600190920191016105d3565b508682101561062e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b018355505050505056fea164736f6c6343000819000a";

type ConfigurableCaller0825ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConfigurableCaller0825ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConfigurableCaller0825__factory extends ContractFactory {
  constructor(...args: ConfigurableCaller0825ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<ConfigurableCaller0825> {
    return super.deploy(overrides || {}) as Promise<ConfigurableCaller0825>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ConfigurableCaller0825 {
    return super.attach(address) as ConfigurableCaller0825;
  }
  override connect(signer: Signer): ConfigurableCaller0825__factory {
    return super.connect(signer) as ConfigurableCaller0825__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfigurableCaller0825Interface {
    return new utils.Interface(_abi) as ConfigurableCaller0825Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConfigurableCaller0825 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ConfigurableCaller0825;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Bytes_slice_TestFail,
  Bytes_slice_TestFailInterface,
} from "../../Bytes.t.sol/Bytes_slice_TestFail";

const _abi = [
  {
    type: "function",
    name: "IS_TEST",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeArtifacts",
    inputs: [],
    outputs: [
      {
        name: "excludedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeContracts",
    inputs: [],
    outputs: [
      {
        name: "excludedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeSenders",
    inputs: [],
    outputs: [
      {
        name: "excludedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "failed",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetArtifactSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifactSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetArtifacts",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetContracts",
    inputs: [],
    outputs: [
      {
        name: "targetedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetInterfaces",
    inputs: [],
    outputs: [
      {
        name: "targetedInterfaces_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzInterface[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "artifacts",
            type: "string[]",
            internalType: "string[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSenders",
    inputs: [],
    outputs: [
      {
        name: "targetedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "testFuzz_slice_lengthOverflows_reverts",
    inputs: [
      {
        name: "_input",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "_start",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_length",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testFuzz_slice_outOfBounds_reverts",
    inputs: [
      {
        name: "_input",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "_start",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_length",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testFuzz_slice_rangeOverflows_reverts",
    inputs: [
      {
        name: "_input",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "_start",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_length",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "log",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_address",
    inputs: [
      {
        name: "",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes32",
    inputs: [
      {
        name: "",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_int",
    inputs: [
      {
        name: "",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_address",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes32",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_string",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_string",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_uint",
    inputs: [
      {
        name: "",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "logs",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x6080604052600c8054600160ff199182168117909255601e8054909116909117905534801561002d57600080fd5b506118488061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806385226c811161008c578063b5508aa911610066578063b5508aa91461019f578063ba414fa6146101a7578063e20c9f71146101bf578063fa7626d4146101c757600080fd5b806385226c811461016f57806386bec17e14610184578063916a17c61461019757600080fd5b80632ade3880116100c85780632ade3880146101355780633e5e3c231461014a5780633f7286f41461015257806366d9a9a01461015a57600080fd5b806310d46130146100ef5780631ed7831c1461010457806323631e8314610122575b600080fd5b6101026100fd36600461126e565b6101d4565b005b61010c610414565b6040516101199190611350565b60405180910390f35b61010261013036600461126e565b610483565b61013d610504565b6040516101199190611415565b61010c610653565b61010c6106c0565b61016261072d565b604051610119919061151e565b610177610835565b6040516101199190611614565b61010261019236600461126e565b610905565b610162610a86565b610177610b8e565b6101af610c5e565b6040519015158152602001610119565b61010c610d32565b601e546101af9060ff1681565b6101fd81600085516000146101f657600186516101f191906116c3565b610d9f565b6000610d9f565b83516040517f4c63e5620000000000000000000000000000000000000000000000000000000081529082106004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d90634c63e5629060240160006040518083038186803b15801561026757600080fd5b505afa15801561027b573d6000803e3d6000fd5b505050506102d582827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6102af91906116c3565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610d9f565b9150737109709ecfa91a80626ff3989d68f67f5b1dd12d634c63e56261031b837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6116c3565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815290851160048201526024015b60006040518083038186803b15801561036b57600080fd5b505afa15801561037f573d6000803e3d6000fd5b50506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063f28dceb391506103d1906004016116da565b600060405180830381600087803b1580156103eb57600080fd5b505af11580156103ff573d6000803e3d6000fd5b5050505061040e838383610df4565b50505050565b6060601680548060200260200160405190810160405280929190818152602001828054801561047957602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161044e575b5050505050905090565b737109709ecfa91a80626ff3989d68f67f5b1dd12d634c63e5626104c8601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6116c3565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681529084116004820152602401610353565b6060601d805480602002602001604051908101604052809291908181526020016000905b8282101561064a576000848152602080822060408051808201825260028702909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939591948681019491929084015b828210156106335783829060005260206000200180546105a69061171d565b80601f01602080910402602001604051908101604052809291908181526020018280546105d29061171d565b801561061f5780601f106105f45761010080835404028352916020019161061f565b820191906000526020600020905b81548152906001019060200180831161060257829003601f168201915b505050505081526020019060010190610587565b505050508152505081526020019060010190610528565b50505050905090565b606060188054806020026020016040519081016040528092919081815260200182805480156104795760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161044e575050505050905090565b606060178054806020026020016040519081016040528092919081815260200182805480156104795760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161044e575050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b8282101561064a57600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561081d57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116107ca5790505b50505050508152505081526020019060010190610751565b6060601a805480602002602001604051908101604052809291908181526020016000905b8282101561064a5783829060005260206000200180546108789061171d565b80601f01602080910402602001604051908101604052809291908181526020018280546108a49061171d565b80156108f15780601f106108c6576101008083540402835291602001916108f1565b820191906000526020600020905b8154815290600101906020018083116108d457829003601f168201915b505050505081526020019060010190610859565b8251737109709ecfa91a80626ff3989d68f67f5b1dd12d90634c63e562908410801561095a5750610957601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6116c3565b83105b6040518263ffffffff1660e01b815260040161097a911515815260200190565b60006040518083038186803b15801561099257600080fd5b505afa1580156109a6573d6000803e3d6000fd5b50508451737109709ecfa91a80626ff3989d68f67f5b1dd12d9250634c63e56291506109d28486611770565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681529110600482015260240160006040518083038186803b158015610a2057600080fd5b505afa158015610a34573d6000803e3d6000fd5b50506040517ff28dceb3000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063f28dceb391506103d190600401611788565b6060601c805480602002602001604051908101604052809291908181526020016000905b8282101561064a57600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939491938583019392830182828015610b7657602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411610b235790505b50505050508152505081526020019060010190610aaa565b60606019805480602002602001604051908101604052809291908181526020016000905b8282101561064a578382906000526020600020018054610bd19061171d565b80601f0160208091040260200160405190810160405280929190818152602001828054610bfd9061171d565b8015610c4a5780601f10610c1f57610100808354040283529160200191610c4a565b820191906000526020600020905b815481529060010190602001808311610c2d57829003601f168201915b505050505081526020019060010190610bb2565b60085460009060ff1615610c76575060085460ff1690565b6040517f667f9d70000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d600482018190527f6661696c65640000000000000000000000000000000000000000000000000000602483015260009163667f9d7090604401602060405180830381865afa158015610d07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2b91906117c5565b1415905090565b606060158054806020026020016040519081016040528092919081815260200182805480156104795760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161044e575050505050905090565b6000610dac848484610f45565b9050610ded6040518060400160405280600c81526020017f426f756e6420726573756c7400000000000000000000000000000000000000008152508261117d565b9392505050565b60608182601f011015610e3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e33906116da565b60405180910390fd5b828284011015610e78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e33906116da565b81830184511015610eb5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3390611788565b606082158015610ed45760405191506000825260208201604052610f3c565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015610f0d578051835260209283019201610ef5565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b600081831115610fd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5374645574696c7320626f756e642875696e743235362c75696e743235362c7560448201527f696e74323536293a204d6178206973206c657373207468616e206d696e2e00006064820152608401610e33565b828410158015610fe75750818411155b15610ff3575082610ded565b6000610fff84846116c3565b61100a906001611770565b90506003851115801561101c57508481115b156110335761102b8585611770565b915050610ded565b61105e60037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6116c3565b85101580156110955750611092857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6116c3565b81115b156110ce576110c4857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6116c3565b61102b90846116c3565b828511156111245760006110e284876116c3565b905060006110f083836117de565b90508060000361110557849350505050610ded565b60016111118288611770565b61111b91906116c3565b93505050611175565b8385101561117557600061113886866116c3565b9050600061114683836117de565b90508060000361115b57859350505050610ded565b61116581866116c3565b611170906001611770565b935050505b509392505050565b61120e8282604051602401611193929190611819565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc00000000000000000000000000000000000000000000000000000000179052611212565b5050565b61121b8161121e565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060006060848603121561128357600080fd5b833567ffffffffffffffff8082111561129b57600080fd5b818601915086601f8301126112af57600080fd5b8135818111156112c1576112c161123f565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156113075761130761123f565b8160405282815289602084870101111561132057600080fd5b82602086016020830137600060208483010152809750505050505060208401359150604084013590509250925092565b6020808252825182820181905260009190848201906040850190845b8181101561139e57835173ffffffffffffffffffffffffffffffffffffffff168352928401929184019160010161136c565b50909695505050505050565b6000815180845260005b818110156113d0576020818501810151868301820152016113b4565b818111156113e2576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b8581101561150e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08b85030187528251805173ffffffffffffffffffffffffffffffffffffffff1685528901518985018990528051898601819052908a0190606081881b870181019190870190855b818110156114f8577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08985030183526114e68486516113aa565b948e01949350918d01916001016114ac565b505050978a01979450509188019160010161143c565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015611605578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b808310156115f05783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b01906115ae565b50978a01979550505091870191600101611546565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611687577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526116758583516113aa565b9450928501929085019060010161163b565b5092979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156116d5576116d5611694565b500390565b60208152600061171760208301600e81527f736c6963655f6f766572666c6f77000000000000000000000000000000000000602082015260400190565b92915050565b600181811c9082168061173157607f821691505b60208210810361176a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000821982111561178357611783611694565b500190565b60208152600061171760208301601181527f736c6963655f6f75744f66426f756e6473000000000000000000000000000000602082015260400190565b6000602082840312156117d757600080fd5b5051919050565b600082611814577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b60408152600061182c60408301856113aa565b9050826020830152939250505056fea164736f6c634300080f000a";

type Bytes_slice_TestFailConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Bytes_slice_TestFailConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Bytes_slice_TestFail__factory extends ContractFactory {
  constructor(...args: Bytes_slice_TestFailConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<Bytes_slice_TestFail> {
    return super.deploy(overrides || {}) as Promise<Bytes_slice_TestFail>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Bytes_slice_TestFail {
    return super.attach(address) as Bytes_slice_TestFail;
  }
  override connect(signer: Signer): Bytes_slice_TestFail__factory {
    return super.connect(signer) as Bytes_slice_TestFail__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Bytes_slice_TestFailInterface {
    return new utils.Interface(_abi) as Bytes_slice_TestFailInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Bytes_slice_TestFail {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as Bytes_slice_TestFail;
  }
}

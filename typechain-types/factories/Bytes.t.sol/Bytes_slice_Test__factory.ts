/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Bytes_slice_Test,
  Bytes_slice_TestInterface,
} from "../../Bytes.t.sol/Bytes_slice_Test";

const _abi = [
  {
    type: "function",
    name: "IS_TEST",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeArtifacts",
    inputs: [],
    outputs: [
      {
        name: "excludedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeContracts",
    inputs: [],
    outputs: [
      {
        name: "excludedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeSenders",
    inputs: [],
    outputs: [
      {
        name: "excludedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "failed",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetArtifactSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifactSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetArtifacts",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetContracts",
    inputs: [],
    outputs: [
      {
        name: "targetedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetInterfaces",
    inputs: [],
    outputs: [
      {
        name: "targetedInterfaces_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzInterface[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "artifacts",
            type: "string[]",
            internalType: "string[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSenders",
    inputs: [],
    outputs: [
      {
        name: "targetedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "testFuzz_slice_memorySafety_succeeds",
    inputs: [
      {
        name: "_input",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "_start",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_length",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "test_slice_acrossMultipleWords_works",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "test_slice_acrossWords_works",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "test_slice_fromNonZeroIdx_works",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "test_slice_fromZeroIdx_works",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "event",
    name: "log",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_address",
    inputs: [
      {
        name: "",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes32",
    inputs: [
      {
        name: "",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_int",
    inputs: [
      {
        name: "",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_address",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes32",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_string",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_string",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_uint",
    inputs: [
      {
        name: "",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "logs",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x6080604052600c8054600160ff199182168117909255601e8054909116909117905534801561002d57600080fd5b50611f6e8061003d6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806384932af811610097578063ba414fa611610066578063ba414fa6146101af578063e20c9f71146101c7578063e621eb35146101cf578063fa7626d4146101d757600080fd5b806384932af81461017757806385226c811461018a578063916a17c61461019f578063b5508aa9146101a757600080fd5b80633f7286f4116100d35780633f7286f41461014a578063440f3c401461015257806349034c2a1461015a57806366d9a9a01461016257600080fd5b80631bcbcfe0146101055780631ed7831c1461010f5780632ade38801461012d5780633e5e3c2314610142575b600080fd5b61010d6101e4565b005b61011761052d565b60405161012491906118c9565b60405180910390f35b61013561059c565b604051610124919061198e565b6101176106eb565b610117610758565b61010d6107c5565b61010d610a7c565b61016a610ad0565b6040516101249190611a97565b61010d610185366004611bbc565b610bd8565b610192610ec3565b6040516101249190611c9e565b61016a610f93565b61019261109b565b6101b761116b565b6040519015158152602001610124565b61011761123f565b61010d6112ac565b601e546101b79060ff1681565b60408051808201909152600a81527f1122334455667788990000000000000000000000000000000000000000000000602082015261023c610227826000806112d5565b604051806020016040528060008152506114b4565b61028761024c82600060016112d5565b6040518060400160405280600181526020017f11000000000000000000000000000000000000000000000000000000000000008152506114b4565b6102d261029782600060026112d5565b6040518060400160405280600281526020017f11220000000000000000000000000000000000000000000000000000000000008152506114b4565b61031d6102e282600060036112d5565b6040518060400160405280600381526020017f11223300000000000000000000000000000000000000000000000000000000008152506114b4565b61036861032d82600060046112d5565b6040518060400160405280600481526020017f11223344000000000000000000000000000000000000000000000000000000008152506114b4565b6103b361037882600060056112d5565b6040518060400160405280600581526020017f11223344550000000000000000000000000000000000000000000000000000008152506114b4565b6103fe6103c382600060066112d5565b6040518060400160405280600681526020017f11223344556600000000000000000000000000000000000000000000000000008152506114b4565b61044961040e82600060076112d5565b6040518060400160405280600781526020017f11223344556677000000000000000000000000000000000000000000000000008152506114b4565b61049461045982600060086112d5565b6040518060400160405280600881526020017f11223344556677880000000000000000000000000000000000000000000000008152506114b4565b6104df6104a482600060096112d5565b6040518060400160405280600981526020017f11223344556677889900000000000000000000000000000000000000000000008152506114b4565b61052a6104ef826000600a6112d5565b6040518060400160405280600a81526020017f11223344556677889900000000000000000000000000000000000000000000008152506114b4565b50565b6060601680548060200260200160405190810160405280929190818152602001828054801561059257602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610567575b5050505050905090565b6060601d805480602002602001604051908101604052809291908181526020016000905b828210156106e2576000848152602080822060408051808201825260028702909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939591948681019491929084015b828210156106cb57838290600052602060002001805461063e90611d1e565b80601f016020809104026020016040519081016040528092919081815260200182805461066a90611d1e565b80156106b75780601f1061068c576101008083540402835291602001916106b7565b820191906000526020600020905b81548152906001019060200180831161069a57829003601f168201915b50505050508152602001906001019061061f565b5050505081525050815260200190600101906105c0565b50505050905090565b606060188054806020026020016040519081016040528092919081815260200182805480156105925760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610567575050505050905090565b606060178054806020026020016040519081016040528092919081815260200182805480156105925760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610567575050505050905090565b60408051808201909152600a81527f1122334455667788990000000000000000000000000000000000000000000000602082015261082561080982600960016112d5565b60405180604001604052806001815260200160008152506114b4565b61087061083582600860026112d5565b6040518060400160405280600281526020017f99000000000000000000000000000000000000000000000000000000000000008152506114b4565b6108bb61088082600760036112d5565b6040518060400160405280600381526020017f88990000000000000000000000000000000000000000000000000000000000008152506114b4565b6109066108cb82600660046112d5565b6040518060400160405280600481526020017f77889900000000000000000000000000000000000000000000000000000000008152506114b4565b610950610915826005806112d5565b6040518060400160405280600581526020017f66778899000000000000000000000000000000000000000000000000000000008152506114b4565b61099b61096082600460066112d5565b6040518060400160405280600681526020017f55667788990000000000000000000000000000000000000000000000000000008152506114b4565b6109e66109ab82600360076112d5565b6040518060400160405280600781526020017f44556677889900000000000000000000000000000000000000000000000000008152506114b4565b610a316109f682600260086112d5565b6040518060400160405280600881526020017f33445566778899000000000000000000000000000000000000000000000000008152506114b4565b61052a610a4182600160096112d5565b6040518060400160405280600981526020017f22334455667788990000000000000000000000000000000000000000000000008152506114b4565b6000604051806080016040528060608152602001611f026060913990506000604051806060016040528060228152602001611ea0602291399050610acc610ac683601f60226112d5565b826114b4565b5050565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156106e257600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939491938583019392830182828015610bc057602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411610b6d5790505b50505050508152505081526020019060010190610af4565b82516040517f4c63e5620000000000000000000000000000000000000000000000000000000081529015156004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90634c63e5629060240160006040518083038186803b158015610c3f57600080fd5b505afa158015610c53573d6000803e3d6000fd5b50505050610c7082600060018651610c6b9190611da0565b61153a565b9150610c85816000848651610c6b9190611da0565b60405190915060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe083610cba846020611db7565b67ffffffffffffffff16610cce9190611de3565b610cd990601f611de3565b6040517f6d01668800000000000000000000000000000000000000000000000000000000815267ffffffffffffffff80861660048301529190921690811660248301529150737109709ecfa91a80626ff3989d68f67f5b1dd12d90636d01668890604401600060405180830381600087803b158015610d5757600080fd5b505af1158015610d6b573d6000803e3d6000fd5b505050506000610d7c8686866112d5565b90507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c73ffffffffffffffffffffffffffffffffffffffff16630956441b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610de957600080fd5b505af1158015610dfd573d6000803e3d6000fd5b50506040519150506000859003610e3b57610e3667ffffffffffffffff8216610e27866020611db7565b67ffffffffffffffff16611588565b610eaf565b600060058087610e4c886020611db7565b67ffffffffffffffff16610e609190611de3565b610e6b90601f611de3565b901c901b9050610e8f8267ffffffffffffffff168267ffffffffffffffff16611588565b610ead8167ffffffffffffffff168567ffffffffffffffff16611588565b505b610eba825186611588565b50505050505050565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156106e2578382906000526020600020018054610f0690611d1e565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3290611d1e565b8015610f7f5780601f10610f5457610100808354040283529160200191610f7f565b820191906000526020600020905b815481529060010190602001808311610f6257829003601f168201915b505050505081526020019060010190610ee7565b6060601c805480602002602001604051908101604052809291908181526020016000905b828210156106e257600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561108357602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116110305790505b50505050508152505081526020019060010190610fb7565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156106e25783829060005260206000200180546110de90611d1e565b80601f016020809104026020016040519081016040528092919081815260200182805461110a90611d1e565b80156111575780601f1061112c57610100808354040283529160200191611157565b820191906000526020600020905b81548152906001019060200180831161113a57829003601f168201915b5050505050815260200190600101906110bf565b60085460009060ff1615611183575060085460ff1690565b6040517f667f9d70000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d600482018190527f6661696c65640000000000000000000000000000000000000000000000000000602483015260009163667f9d7090604401602060405180830381865afa158015611214573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112389190611dfb565b1415905090565b606060158054806020026020016040519081016040528092919081815260200182805480156105925760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610567575050505050905090565b6000604051806060016040528060408152602001611ec260409139905061052a61029782601f60025b60608182601f011015611349576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f7700000000000000000000000000000000000060448201526064015b60405180910390fd5b8282840110156113b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f770000000000000000000000000000000000006044820152606401611340565b81830184511015611422576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e64730000000000000000000000000000006044820152606401611340565b60608215801561144157604051915060008252602082016040526114a9565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561147a578051835260209283019201611462565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b5090505b9392505050565b6040517f97624631000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d906397624631906115069085908590600401611e14565b60006040518083038186803b15801561151e57600080fd5b505afa158015611532573d6000803e3d6000fd5b505050505050565b60006115478484846115e0565b90506114ad6040518060400160405280600c81526020017f426f756e6420726573756c74000000000000000000000000000000000000000081525082611818565b6040517f98296c540000000000000000000000000000000000000000000000000000000081526004810183905260248101829052737109709ecfa91a80626ff3989d68f67f5b1dd12d906398296c5490604401611506565b600081831115611672576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5374645574696c7320626f756e642875696e743235362c75696e743235362c7560448201527f696e74323536293a204d6178206973206c657373207468616e206d696e2e00006064820152608401611340565b8284101580156116825750818411155b1561168e5750826114ad565b600061169a8484611da0565b6116a5906001611de3565b9050600385111580156116b757508481115b156116ce576116c68585611de3565b9150506114ad565b6116f960037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611da0565b8510158015611730575061172d857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611da0565b81115b156117695761175f857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611da0565b6116c69084611da0565b828511156117bf57600061177d8487611da0565b9050600061178b8383611e42565b9050806000036117a0578493505050506114ad565b60016117ac8288611de3565b6117b69190611da0565b93505050611810565b838510156118105760006117d38686611da0565b905060006117e18383611e42565b9050806000036117f6578593505050506114ad565b6118008186611da0565b61180b906001611de3565b935050505b509392505050565b610acc828260405160240161182e929190611e7d565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc0000000000000000000000000000000000000000000000000000000017905261052a8180516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6020808252825182820181905260009190848201906040850190845b8181101561191757835173ffffffffffffffffffffffffffffffffffffffff16835292840192918401916001016118e5565b50909695505050505050565b6000815180845260005b818110156119495760208185018101518683018201520161192d565b8181111561195b576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b85811015611a87577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08b85030187528251805173ffffffffffffffffffffffffffffffffffffffff1685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015611a71577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0898503018352611a5f848651611923565b948e01949350918d0191600101611a25565b505050978a0197945050918801916001016119b5565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015611b7e578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b80831015611b695783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b0190611b27565b50978a01979550505091870191600101611abf565b50919998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080600060608486031215611bd157600080fd5b833567ffffffffffffffff80821115611be957600080fd5b818601915086601f830112611bfd57600080fd5b813581811115611c0f57611c0f611b8d565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715611c5557611c55611b8d565b81604052828152896020848701011115611c6e57600080fd5b82602086016020830137600060208483010152809750505050505060208401359150604084013590509250925092565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611d11577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452611cff858351611923565b94509285019290850190600101611cc5565b5092979650505050505050565b600181811c90821680611d3257607f821691505b602082108103611d6b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015611db257611db2611d71565b500390565b600067ffffffffffffffff808316818516808303821115611dda57611dda611d71565b01949350505050565b60008219821115611df657611df6611d71565b500190565b600060208284031215611e0d57600080fd5b5051919050565b604081526000611e276040830185611923565b8281036020840152611e398185611923565b95945050505050565b600082611e78577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b604081526000611e906040830185611923565b9050826020830152939250505056fe1122ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1100000000000000000000000000000000000000000000000000000000000000112200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001122ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1100000000000000000000000000000000000000000000000000000000000000a164736f6c634300080f000a";

type Bytes_slice_TestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Bytes_slice_TestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Bytes_slice_Test__factory extends ContractFactory {
  constructor(...args: Bytes_slice_TestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<Bytes_slice_Test> {
    return super.deploy(overrides || {}) as Promise<Bytes_slice_Test>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Bytes_slice_Test {
    return super.attach(address) as Bytes_slice_Test;
  }
  override connect(signer: Signer): Bytes_slice_Test__factory {
    return super.connect(signer) as Bytes_slice_Test__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Bytes_slice_TestInterface {
    return new utils.Interface(_abi) as Bytes_slice_TestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Bytes_slice_Test {
    return new Contract(address, _abi, signerOrProvider) as Bytes_slice_Test;
  }
}

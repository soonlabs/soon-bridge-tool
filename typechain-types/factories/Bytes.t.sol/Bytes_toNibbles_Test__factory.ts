/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Bytes_toNibbles_Test,
  Bytes_toNibbles_TestInterface,
} from "../../Bytes.t.sol/Bytes_toNibbles_Test";

const _abi = [
  {
    type: "function",
    name: "IS_TEST",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeArtifacts",
    inputs: [],
    outputs: [
      {
        name: "excludedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeContracts",
    inputs: [],
    outputs: [
      {
        name: "excludedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeSenders",
    inputs: [],
    outputs: [
      {
        name: "excludedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "failed",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetArtifactSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifactSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetArtifacts",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetContracts",
    inputs: [],
    outputs: [
      {
        name: "targetedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetInterfaces",
    inputs: [],
    outputs: [
      {
        name: "targetedInterfaces_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzInterface[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "artifacts",
            type: "string[]",
            internalType: "string[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSenders",
    inputs: [],
    outputs: [
      {
        name: "targetedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "testFuzz_toNibbles_memorySafety_succeeds",
    inputs: [
      {
        name: "_input",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "test_toNibbles_expectedResult128Bytes_works",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "test_toNibbles_expectedResult5Bytes_works",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "test_toNibbles_zeroLengthInput_works",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "event",
    name: "log",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_address",
    inputs: [
      {
        name: "",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes32",
    inputs: [
      {
        name: "",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_int",
    inputs: [
      {
        name: "",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_address",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes32",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_string",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_string",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_uint",
    inputs: [
      {
        name: "",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "logs",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x6080604052600c8054600160ff199182168117909255601e8054909116909117905534801561002d57600080fd5b506115408061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063916a17c611610097578063e20c9f7111610066578063e20c9f71146101ac578063fa7626d4146101b4578063fab357a3146101c1578063fc89e485146101c957600080fd5b8063916a17c61461017c578063a331479314610184578063b5508aa91461018c578063ba414fa61461019457600080fd5b80633e5e3c23116100d35780633e5e3c23146101425780633f7286f41461014a57806366d9a9a01461015257806385226c811461016757600080fd5b80631ed7831c146100fa5780632a1130b0146101185780632ade38801461012d575b600080fd5b6101026101d1565b60405161010f9190610e27565b60405180910390f35b61012b610126366004610eb0565b610240565b005b610135610497565b60405161010f9190610fea565b6101026105e6565b610102610653565b61015a6106c0565b60405161010f91906110f3565b61016f6107c8565b60405161010f91906111e9565b61015a610898565b61012b6109a0565b61016f6109fb565b61019c610acb565b604051901515815260200161010f565b610102610b9f565b601e5461019c9060ff1681565b61012b610c0c565b61012b610ca6565b6060601680548060200260200160405190810160405280929190818152602001828054801561023657602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161020b575b5050505050905090565b60405181516000907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090610275906002611298565b61028090601f6112d5565b1661028c8360206112ed565b67ffffffffffffffff166102a091906112d5565b6040517f6d01668800000000000000000000000000000000000000000000000000000000815267ffffffffffffffff808516600483015282166024820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d90636d01668890604401600060405180830381600087803b15801561031a57600080fd5b505af115801561032e573d6000803e3d6000fd5b50505050600061033d84610cea565b90507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c73ffffffffffffffffffffffffffffffffffffffff16630956441b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156103aa57600080fd5b505af11580156103be573d6000803e3d6000fd5b505050506000604051905084516000036103ff576103fa67ffffffffffffffff82166103eb8660206112ed565b67ffffffffffffffff16610d4d565b610480565b6000600580875160026104129190611298565b61041d90601f6112d5565b901c901b61042c8660206112ed565b67ffffffffffffffff1661044091906112d5565b90506104608267ffffffffffffffff168267ffffffffffffffff16610d4d565b61047e8167ffffffffffffffff168567ffffffffffffffff16610d4d565b505b610490825160018751901b610d4d565b5050505050565b6060601d805480602002602001604051908101604052809291908181526020016000905b828210156105dd576000848152602080822060408051808201825260028702909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939591948681019491929084015b828210156105c657838290600052602060002001805461053990611319565b80601f016020809104026020016040519081016040528092919081815260200182805461056590611319565b80156105b25780601f10610587576101008083540402835291602001916105b2565b820191906000526020600020905b81548152906001019060200180831161059557829003601f168201915b50505050508152602001906001019061051a565b5050505081525050815260200190600101906104bb565b50505050905090565b606060188054806020026020016040519081016040528092919081815260200182805480156102365760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161020b575050505050905090565b606060178054806020026020016040519081016040528092919081815260200182805480156102365760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161020b575050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156105dd57600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff1683526001810180548351818702810187019094528084529394919385830193928301828280156107b057602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841161075d5790505b505050505081525050815260200190600101906106e4565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156105dd57838290600052602060002001805461080b90611319565b80601f016020809104026020016040519081016040528092919081815260200182805461083790611319565b80156108845780601f1061085957610100808354040283529160200191610884565b820191906000526020600020905b81548152906001019060200180831161086757829003601f168201915b5050505050815260200190600101906107ec565b6060601c805480602002602001604051908101604052809291908181526020016000905b828210156105dd57600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561098857602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116109355790505b505050505081525050815260200190600101906108bc565b60408051602080820183526000808352835191820190935282815290916109c683610cea565b90506109d483516000610d4d565b6109e082516000610d4d565b6109ec81516000610d4d565b6109f68183610dd5565b505050565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156105dd578382906000526020600020018054610a3e90611319565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6a90611319565b8015610ab75780601f10610a8c57610100808354040283529160200191610ab7565b820191906000526020600020905b815481529060010190602001808311610a9a57829003601f168201915b505050505081526020019060010190610a1f565b60085460009060ff1615610ae3575060085460ff1690565b6040517f667f9d70000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d600482018190527f6661696c65640000000000000000000000000000000000000000000000000000602483015260009163667f9d7090604401602060405180830381865afa158015610b74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b98919061136c565b1415905090565b606060158054806020026020016040519081016040528092919081815260200182805480156102365760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161020b575050505050905090565b604080518082018252600581527f12345678900000000000000000000000000000000000000000000000000000006020808301919091528251808401909352600a83527f010203040506070809000000000000000000000000000000000000000000000090830152906000610c8083610cea565b9050610c9a83516002610c939190611298565b8251610d4d565b6109ec82518251610d4d565b60006040518060a00160405280608081526020016114b4608091399050600060405180610120016040528061010081526020016113b4610100913990506000610c80835b606080604051905082518060011b603f8101601f1916830160405280835250602084016020830160005b83811015610d42578060011b82018184015160001a8060041c8253600f811660018301535050600101610d14565b509295945050505050565b6040517f98296c540000000000000000000000000000000000000000000000000000000081526004810183905260248101829052737109709ecfa91a80626ff3989d68f67f5b1dd12d906398296c54906044015b60006040518083038186803b158015610db957600080fd5b505afa158015610dcd573d6000803e3d6000fd5b505050505050565b6040517f97624631000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d90639762463190610da19085908590600401611385565b6020808252825182820181905260009190848201906040850190845b81811015610e7557835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610e43565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060208284031215610ec257600080fd5b813567ffffffffffffffff80821115610eda57600080fd5b818401915084601f830112610eee57600080fd5b813581811115610f0057610f00610e81565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610f4657610f46610e81565b81604052828152876020848701011115610f5f57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000815180845260005b81811015610fa557602081850181015186830182015201610f89565b81811115610fb7576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b858110156110e3577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08b85030187528251805173ffffffffffffffffffffffffffffffffffffffff1685528901518985018990528051898601819052908a0190606081881b870181019190870190855b818110156110cd577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08985030183526110bb848651610f7f565b948e01949350918d0191600101611081565b505050978a019794505091880191600101611011565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156111da578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b808310156111c55783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b0190611183565b50978a0197955050509187019160010161111b565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561125c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845261124a858351610f7f565b94509285019290850190600101611210565b5092979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156112d0576112d0611269565b500290565b600082198211156112e8576112e8611269565b500190565b600067ffffffffffffffff80831681851680830382111561131057611310611269565b01949350505050565b600181811c9082168061132d57607f821691505b602082108103611366577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60006020828403121561137e57600080fd5b5051919050565b6040815260006113986040830185610f7f565b82810360208401526113aa8185610f7f565b9594505050505056fe0000000100020003000400050006000700080009000a000b000c000d000e000f0100010101020103010401050106010701080109010a010b010c010d010e010f0200020102020203020402050206020702080209020a020b020c020d020e020f0300030103020303030403050306030703080309030a030b030c030d030e030f0400040104020403040404050406040704080409040a040b040c040d040e040f0500050105020503050405050506050705080509050a050b050c050d050e050f0600060106020603060406050606060706080609060a060b060c060d060e060f0700070107020703070407050706070707080709070a070b070c070d070e070f000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7fa164736f6c634300080f000a";

type Bytes_toNibbles_TestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Bytes_toNibbles_TestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Bytes_toNibbles_Test__factory extends ContractFactory {
  constructor(...args: Bytes_toNibbles_TestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<Bytes_toNibbles_Test> {
    return super.deploy(overrides || {}) as Promise<Bytes_toNibbles_Test>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Bytes_toNibbles_Test {
    return super.attach(address) as Bytes_toNibbles_Test;
  }
  override connect(signer: Signer): Bytes_toNibbles_Test__factory {
    return super.connect(signer) as Bytes_toNibbles_Test__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Bytes_toNibbles_TestInterface {
    return new utils.Interface(_abi) as Bytes_toNibbles_TestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Bytes_toNibbles_Test {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as Bytes_toNibbles_Test;
  }
}

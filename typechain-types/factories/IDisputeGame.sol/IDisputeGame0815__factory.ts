/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IDisputeGame0815,
  IDisputeGame0815Interface,
} from "../../IDisputeGame.sol/IDisputeGame0815";

const _abi = [
  {
    type: "function",
    name: "createdAt",
    inputs: [],
    outputs: [
      {
        name: "createdAt_",
        type: "uint64",
        internalType: "Timestamp",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "extraData",
    inputs: [],
    outputs: [
      {
        name: "extraData_",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "gameCreator",
    inputs: [],
    outputs: [
      {
        name: "creator_",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "gameData",
    inputs: [],
    outputs: [
      {
        name: "gameType_",
        type: "uint32",
        internalType: "GameType",
      },
      {
        name: "rootClaim_",
        type: "bytes32",
        internalType: "Claim",
      },
      {
        name: "extraData_",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "gameType",
    inputs: [],
    outputs: [
      {
        name: "gameType_",
        type: "uint32",
        internalType: "GameType",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "l1Head",
    inputs: [],
    outputs: [
      {
        name: "l1Head_",
        type: "bytes32",
        internalType: "Hash",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "resolve",
    inputs: [],
    outputs: [
      {
        name: "status_",
        type: "uint8",
        internalType: "enum GameStatus",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "resolvedAt",
    inputs: [],
    outputs: [
      {
        name: "resolvedAt_",
        type: "uint64",
        internalType: "Timestamp",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "rootClaim",
    inputs: [],
    outputs: [
      {
        name: "rootClaim_",
        type: "bytes32",
        internalType: "Claim",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "status",
    inputs: [],
    outputs: [
      {
        name: "status_",
        type: "uint8",
        internalType: "enum GameStatus",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "Resolved",
    inputs: [
      {
        name: "status",
        type: "uint8",
        indexed: true,
        internalType: "enum GameStatus",
      },
    ],
    anonymous: false,
  },
] as const;

export class IDisputeGame0815__factory {
  static readonly abi = _abi;
  static createInterface(): IDisputeGame0815Interface {
    return new utils.Interface(_abi) as IDisputeGame0815Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDisputeGame0815 {
    return new Contract(address, _abi, signerOrProvider) as IDisputeGame0815;
  }
}

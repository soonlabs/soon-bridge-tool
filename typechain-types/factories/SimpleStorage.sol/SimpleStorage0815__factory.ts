/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SimpleStorage0815,
  SimpleStorage0815Interface,
} from "../../SimpleStorage.sol/SimpleStorage0815";

const _abi = [
  {
    type: "function",
    name: "db",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "get",
    inputs: [
      {
        name: "_key",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "set",
    inputs: [
      {
        name: "_key",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_value",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060fe8061001f6000396000f3fe60806040526004361060305760003560e01c80638eaa6ac0146035578063ecf265bc146070578063f71f7a25146099575b600080fd5b348015604057600080fd5b50605e604c36600460b8565b60009081526020819052604090205490565b60405190815260200160405180910390f35b348015607b57600080fd5b50605e608736600460b8565b60006020819052908152604090205481565b60b660a436600460d0565b60009182526020829052604090912055565b005b60006020828403121560c957600080fd5b5035919050565b6000806040838503121560e257600080fd5b5050803592602090910135915056fea164736f6c634300080f000a";

type SimpleStorage0815ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleStorage0815ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleStorage0815__factory extends ContractFactory {
  constructor(...args: SimpleStorage0815ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<SimpleStorage0815> {
    return super.deploy(overrides || {}) as Promise<SimpleStorage0815>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SimpleStorage0815 {
    return super.attach(address) as SimpleStorage0815;
  }
  override connect(signer: Signer): SimpleStorage0815__factory {
    return super.connect(signer) as SimpleStorage0815__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleStorage0815Interface {
    return new utils.Interface(_abi) as SimpleStorage0815Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleStorage0815 {
    return new Contract(address, _abi, signerOrProvider) as SimpleStorage0815;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IGelato1Balance,
  IGelato1BalanceInterface,
} from "../IGelato1Balance";

const _abi = [
  {
    type: "event",
    name: "LogUseGelato1Balance",
    inputs: [
      {
        name: "sponsor",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "target",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "feeToken",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "oneBalanceChainId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "nativeToFeeTokenXRateNumerator",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "nativeToFeeTokenXRateDenominator",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "correlationId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
] as const;

export class IGelato1Balance__factory {
  static readonly abi = _abi;
  static createInterface(): IGelato1BalanceInterface {
    return new utils.Interface(_abi) as IGelato1BalanceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IGelato1Balance {
    return new Contract(address, _abi, signerOrProvider) as IGelato1Balance;
  }
}

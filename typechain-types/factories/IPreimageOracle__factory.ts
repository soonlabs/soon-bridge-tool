/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IPreimageOracle,
  IPreimageOracleInterface,
} from "../IPreimageOracle";

const _abi = [
  {
    type: "function",
    name: "challengePeriod",
    inputs: [],
    outputs: [
      {
        name: "challengePeriod_",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "loadBlobPreimagePart",
    inputs: [
      {
        name: "_z",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_y",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_commitment",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "_proof",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "_partOffset",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "loadKeccak256PreimagePart",
    inputs: [
      {
        name: "_partOffset",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_preimage",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "loadLocalData",
    inputs: [
      {
        name: "_ident",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_localContext",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_word",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_size",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_partOffset",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "key_",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "loadPrecompilePreimagePart",
    inputs: [
      {
        name: "_partOffset",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_precompile",
        type: "address",
        internalType: "address",
      },
      {
        name: "_requiredGas",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "_input",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "loadSha256PreimagePart",
    inputs: [
      {
        name: "_partOffset",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_preimage",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "readPreimage",
    inputs: [
      {
        name: "_key",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_offset",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "dat_",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "datLen_",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
] as const;

export class IPreimageOracle__factory {
  static readonly abi = _abi;
  static createInterface(): IPreimageOracleInterface {
    return new utils.Interface(_abi) as IPreimageOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPreimageOracle {
    return new Contract(address, _abi, signerOrProvider) as IPreimageOracle;
  }
}

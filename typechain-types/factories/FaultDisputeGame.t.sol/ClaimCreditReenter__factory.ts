/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ClaimCreditReenter,
  ClaimCreditReenterInterface,
} from "../../FaultDisputeGame.t.sol/ClaimCreditReenter";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_gameProxy",
        type: "address",
        internalType: "contract FaultDisputeGame",
      },
      {
        name: "_vm",
        type: "address",
        internalType: "contract Vm",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "claimCredit",
    inputs: [
      {
        name: "_recipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "numCalls",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161036238038061036283398101604081905261002f9161005e565b6001600160a01b0391821660a05216608052610098565b6001600160a01b038116811461005b57600080fd5b50565b6000806040838503121561007157600080fd5b825161007c81610046565b602084015190925061008d81610046565b809150509250929050565b60805160a0516102a56100bd60003960006101bd0152600061010601526102a56000f3fe60806040526004361061002d5760003560e01c806360e274641461004e57806382f161ca1461006e57600080fd5b366100495760005460050361003e57005b61004730610096565b005b600080fd5b34801561005a57600080fd5b5061004761006936600461021c565b610096565b34801561007a57600080fd5b5061008460005481565b60405190815260200160405180910390f35b60016000808282546100a89190610259565b909155505060005460011015610178576040517fc31eb0e00000000000000000000000000000000000000000000000000000000081527f17bfe5f70000000000000000000000000000000000000000000000000000000060048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063c31eb0e090602401600060405180830381600087803b15801561015f57600080fd5b505af1158015610173573d6000803e3d6000fd5b505050505b6040517f60e2746400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301527f000000000000000000000000000000000000000000000000000000000000000016906360e2746490602401600060405180830381600087803b15801561020157600080fd5b505af1158015610215573d6000803e3d6000fd5b5050505050565b60006020828403121561022e57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461025257600080fd5b9392505050565b60008219821115610293577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50019056fea164736f6c634300080f000a";

type ClaimCreditReenterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClaimCreditReenterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ClaimCreditReenter__factory extends ContractFactory {
  constructor(...args: ClaimCreditReenterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gameProxy: string,
    _vm: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ClaimCreditReenter> {
    return super.deploy(
      _gameProxy,
      _vm,
      overrides || {}
    ) as Promise<ClaimCreditReenter>;
  }
  override getDeployTransaction(
    _gameProxy: string,
    _vm: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_gameProxy, _vm, overrides || {});
  }
  override attach(address: string): ClaimCreditReenter {
    return super.attach(address) as ClaimCreditReenter;
  }
  override connect(signer: Signer): ClaimCreditReenter__factory {
    return super.connect(signer) as ClaimCreditReenter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClaimCreditReenterInterface {
    return new utils.Interface(_abi) as ClaimCreditReenterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClaimCreditReenter {
    return new Contract(address, _abi, signerOrProvider) as ClaimCreditReenter;
  }
}

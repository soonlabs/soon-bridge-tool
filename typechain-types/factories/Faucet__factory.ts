/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Faucet, FaucetInterface } from "../Faucet";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_admin",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "ADMIN",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "configure",
    inputs: [
      {
        name: "_module",
        type: "address",
        internalType: "contract IFaucetAuthModule",
      },
      {
        name: "_config",
        type: "tuple",
        internalType: "struct Faucet.ModuleConfig",
        components: [
          {
            name: "name",
            type: "string",
            internalType: "string",
          },
          {
            name: "enabled",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "ttl",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "drip",
    inputs: [
      {
        name: "_params",
        type: "tuple",
        internalType: "struct Faucet.DripParameters",
        components: [
          {
            name: "recipient",
            type: "address",
            internalType: "address payable",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "nonce",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "gasLimit",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
      {
        name: "_auth",
        type: "tuple",
        internalType: "struct Faucet.AuthParameters",
        components: [
          {
            name: "module",
            type: "address",
            internalType: "contract IFaucetAuthModule",
          },
          {
            name: "id",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "proof",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isModuleEnabled",
    inputs: [
      {
        name: "_module",
        type: "address",
        internalType: "contract IFaucetAuthModule",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "modules",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IFaucetAuthModule",
      },
    ],
    outputs: [
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
      {
        name: "enabled",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "ttl",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "nonces",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "timeouts",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IFaucetAuthModule",
      },
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "_recipient",
        type: "address",
        internalType: "address payable",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Drip",
    inputs: [
      {
        name: "authModule",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "userId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "recipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161136738038061136783398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516112ce6100996000396000818161010f0152818161026d0152610a3001526112ce6000f3fe60806040526004361061007f5760003560e01c806338757bfd1161004e57806338757bfd1461019f578063a8ee49fe146101e5578063b1510e4314610215578063f3fef3a31461023557600080fd5b80631cb81b881461008b5780631d5d26bc146100ad5780632a0acc6a146100fd5780632d9ad53d1461015657600080fd5b3661008657005b600080fd5b34801561009757600080fd5b506100ab6100a6366004610c6e565b610255565b005b3480156100b957600080fd5b506100e86100c8366004610d2f565b600260209081526000928352604080842090915290825290205460ff1681565b60405190151581526020015b60405180910390f35b34801561010957600080fd5b506101317f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f4565b34801561016257600080fd5b506100e8610171366004610d51565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090206001015460ff1690565b3480156101ab57600080fd5b506101d76101ba366004610d75565b600160209081526000928352604080842090915290825290205481565b6040519081526020016100f4565b3480156101f157600080fd5b50610205610200366004610d51565b6103a6565b6040516100f49493929190610e17565b34801561022157600080fd5b506100ab610230366004610eeb565b61045c565b34801561024157600080fd5b506100ab610250366004610d75565b610a18565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461031f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4661756365743a2066756e6374696f6e2063616e206f6e6c792062652063616c60448201527f6c65642062792061646d696e000000000000000000000000000000000000000060648201526084015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902081518291908190610355908261105d565b5060208201516001820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055604082015160028201556060909101516003909101555050565b6000602081905290815260409020805481906103c190610fbb565b80601f01602080910402602001604051908101604052809291908181526020018280546103ed90610fbb565b801561043a5780601f1061040f5761010080835404028352916020019161043a565b820191906000526020600020905b81548152906001019060200180831161041d57829003601f168201915b5050505060018301546002840154600390940154929360ff9091169290915084565b805173ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604080822081516080810190925280548290829061049b90610fbb565b80601f01602080910402602001604051908101604052809291908181526020018280546104c790610fbb565b80156105145780601f106104e957610100808354040283529160200191610514565b820191906000526020600020905b8154815290600101906020018083116104f757829003601f168201915b5050509183525050600182015460ff161515602080830191909152600283015460408301526003909201546060909101528101519091506105d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603c60248201527f4661756365743a2070726f76696465642061757468206d6f64756c652069732060448201527f6e6f7420737570706f72746564206279207468697320666175636574000000006064820152608401610316565b6020808301516000908152600282526040808220868201518352909252205460ff1615610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4661756365743a206e6f6e63652068617320616c7265616479206265656e207560448201527f73656400000000000000000000000000000000000000000000000000000000006064820152608401610316565b815173ffffffffffffffffffffffffffffffffffffffff1660009081526001602090815260408083208286015184529091529020544211610749576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603f60248201527f4661756365743a20617574682063616e6e6f742062652075736564207965742060448201527f626563617573652074696d656f757420686173206e6f7420656c6170736564006064820152608401610316565b8151602083015160408085015190517fd855814f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9093169263d855814f926107a8928892600401611177565b602060405180830381865afa1580156107c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e991906111f0565b61087757604080517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482015260248101919091527f4661756365743a206472697020706172616d657465727320636f756c64206e6f60448201527f74206265207665726966696564206279207365637572697479206d6f64756c656064820152608401610316565b82513073ffffffffffffffffffffffffffffffffffffffff909116036108f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4661756365743a2063616e6e6f74206472697020746f20697473656c660000006044820152606401610316565b6040810151610908904261120d565b825173ffffffffffffffffffffffffffffffffffffffff1660009081526001602081815260408084208288018051865290835281852095909555935183526002815283832087850151845281529290912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169091179055835160608086015190840151928601516109a59363ffffffff9092169190610b2b565b5082516020830151825160405173ffffffffffffffffffffffffffffffffffffffff909316926109d5919061124c565b60405190819003812060608501518252907f2cebdf1cc706a50e1b28bf2fc5cfbd7204747a3b82439b85721a474df3a355a49060200160405180910390a4505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610add576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4661756365743a2066756e6374696f6e2063616e206f6e6c792062652063616c60448201527f6c65642062792061646d696e00000000000000000000000000000000000000006064820152608401610316565b8082604051610aeb90610b43565b73ffffffffffffffffffffffffffffffffffffffff90911681526020016040518091039082f0905080158015610b25573d6000803e3d6000fd5b50505050565b6000806000835160208501868989f195945050505050565b60598061126983390190565b73ffffffffffffffffffffffffffffffffffffffff81168114610b7157600080fd5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715610bc657610bc6610b74565b60405290565b600067ffffffffffffffff80841115610be757610be7610b74565b604051601f85017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715610c2d57610c2d610b74565b81604052809350858152868686011115610c4657600080fd5b858560208301376000602087830101525050509392505050565b8015158114610b7157600080fd5b60008060408385031215610c8157600080fd5b8235610c8c81610b4f565b9150602083013567ffffffffffffffff80821115610ca957600080fd5b9084019060808287031215610cbd57600080fd5b610cc5610ba3565b823582811115610cd457600080fd5b83019150601f82018713610ce757600080fd5b610cf687833560208501610bcc565b815260208301359150610d0882610c60565b81602082015260408301356040820152606083013560608201528093505050509250929050565b60008060408385031215610d4257600080fd5b50508035926020909101359150565b600060208284031215610d6357600080fd5b8135610d6e81610b4f565b9392505050565b60008060408385031215610d8857600080fd5b8235610d9381610b4f565b946020939093013593505050565b60005b83811015610dbc578181015183820152602001610da4565b83811115610b255750506000910152565b60008151808452610de5816020860160208601610da1565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b608081526000610e2a6080830187610dcd565b9415156020830152506040810192909252606090910152919050565b600082601f830112610e5757600080fd5b610d6e83833560208501610bcc565b600060608284031215610e7857600080fd5b6040516060810167ffffffffffffffff8282108183111715610e9c57610e9c610b74565b8160405282935084359150610eb082610b4f565b818352602085013560208401526040850135915080821115610ed157600080fd5b50610ede85828601610e46565b6040830152505092915050565b60008060408385031215610efe57600080fd5b823567ffffffffffffffff80821115610f1657600080fd5b9084019060808287031215610f2a57600080fd5b610f32610ba3565b8235610f3d81610b4f565b8152602083013582811115610f5157600080fd5b610f5d88828601610e46565b602083015250604083013560408201526060830135925063ffffffff83168314610f8657600080fd5b826060820152809450506020850135915080821115610fa457600080fd5b50610fb185828601610e66565b9150509250929050565b600181811c90821680610fcf57607f821691505b602082108103611008577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561105857600081815260208120601f850160051c810160208610156110355750805b601f850160051c820191505b8181101561105457828155600101611041565b5050505b505050565b815167ffffffffffffffff81111561107757611077610b74565b61108b816110858454610fbb565b8461100e565b602080601f8311600181146110de57600084156110a85750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555611054565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561112b5788860151825594840194600190910190840161110c565b508582101561116757878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b6060815273ffffffffffffffffffffffffffffffffffffffff8451166060820152600060208501516080808401526111b260e0840182610dcd565b9050604086015160a084015263ffffffff60608701511660c084015284602084015282810360408401526111e68185610dcd565b9695505050505050565b60006020828403121561120257600080fd5b8151610d6e81610c60565b60008219821115611247577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b6000825161125e818460208701610da1565b919091019291505056fe608060405260405160593803806059833981016040819052601e91602a565b806001600160a01b0316ff5b600060208284031215603b57600080fd5b81516001600160a01b0381168114605157600080fd5b939250505056fea164736f6c634300080f000a";

type FaucetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FaucetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Faucet__factory extends ContractFactory {
  constructor(...args: FaucetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _admin: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Faucet> {
    return super.deploy(_admin, overrides || {}) as Promise<Faucet>;
  }
  override getDeployTransaction(
    _admin: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_admin, overrides || {});
  }
  override attach(address: string): Faucet {
    return super.attach(address) as Faucet;
  }
  override connect(signer: Signer): Faucet__factory {
    return super.connect(signer) as Faucet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FaucetInterface {
    return new utils.Interface(_abi) as FaucetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Faucet {
    return new Contract(address, _abi, signerOrProvider) as Faucet;
  }
}

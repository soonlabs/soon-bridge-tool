/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IDripCheck0825,
  IDripCheck0825Interface,
} from "../../IDripCheck.sol/IDripCheck0825";

const _abi = [
  {
    type: "function",
    name: "check",
    inputs: [
      {
        name: "_params",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "execute_",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "name_",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
] as const;

export class IDripCheck0825__factory {
  static readonly abi = _abi;
  static createInterface(): IDripCheck0825Interface {
    return new utils.Interface(_abi) as IDripCheck0825Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDripCheck0825 {
    return new Contract(address, _abi, signerOrProvider) as IDripCheck0825;
  }
}

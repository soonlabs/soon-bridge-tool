/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OPStackManager,
  OPStackManagerInterface,
} from "../OPStackManager";

const _abi = [
  {
    type: "function",
    name: "deploy",
    inputs: [
      {
        name: "_l2ChainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_basefeeScalar",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "_blobBasefeeScalar",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "_roles",
        type: "tuple",
        internalType: "struct OPStackManager.Roles",
        components: [
          {
            name: "proxyAdminOwner",
            type: "address",
            internalType: "address",
          },
          {
            name: "systemConfigOwner",
            type: "address",
            internalType: "address",
          },
          {
            name: "batcher",
            type: "address",
            internalType: "address",
          },
          {
            name: "unsafeBlockSigner",
            type: "address",
            internalType: "address",
          },
          {
            name: "proposer",
            type: "address",
            internalType: "address",
          },
          {
            name: "challenger",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "systemConfig_",
        type: "address",
        internalType: "contract SystemConfig",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "version",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "Deployed",
    inputs: [
      {
        name: "l2ChainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "systemConfig",
        type: "address",
        indexed: true,
        internalType: "contract SystemConfig",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "DeploymentFailed",
    inputs: [
      {
        name: "reason",
        type: "string",
        internalType: "string",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidChainId",
    inputs: [],
  },
  {
    type: "error",
    name: "NotImplemented",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061024b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806354fd4d501461003b57806388e1b16b1461008d575b600080fd5b6100776040518060400160405280600c81526020017f312e302e302d626574612e31000000000000000000000000000000000000000081525081565b604051610084919061013c565b60405180910390f35b6100a061009b3660046101c8565b6100c5565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610084565b60008415806100d357504685145b1561010a576040517f7a47c9a200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fd623472500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060208083528351808285015260005b818110156101695785810183015185820160400152820161014d565b8181111561017b576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803563ffffffff811681146101c357600080fd5b919050565b6000806000808486036101208112156101e057600080fd5b853594506101f0602087016101af565b93506101fe604087016101af565b925060c07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08201121561023057600080fd5b50929591945092606001915056fea164736f6c634300080f000a";

type OPStackManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OPStackManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OPStackManager__factory extends ContractFactory {
  constructor(...args: OPStackManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<OPStackManager> {
    return super.deploy(overrides || {}) as Promise<OPStackManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OPStackManager {
    return super.attach(address) as OPStackManager;
  }
  override connect(signer: Signer): OPStackManager__factory {
    return super.connect(signer) as OPStackManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OPStackManagerInterface {
    return new utils.Interface(_abi) as OPStackManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OPStackManager {
    return new Contract(address, _abi, signerOrProvider) as OPStackManager;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StandardBridgeTester,
  StandardBridgeTesterInterface,
} from "../../StandardBridge.t.sol/StandardBridgeTester";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "ERC20SharedDecimals",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "MESSENGER",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract CrossDomainMessenger",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "OTHER_BRIDGE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "bridgeERC20",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "bridgeERC20To",
    inputs: [
      {
        name: "_localToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "_remoteToken",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_to",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_minGasLimit",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "_extraData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "bridgeETH",
    inputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "bridgeETHTo",
    inputs: [
      {
        name: "_to",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_minGasLimit",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "_extraData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "deposits",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "finalizeBridgeERC20",
    inputs: [
      {
        name: "_localToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "_remoteToken",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_from",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_to",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_extraData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "finalizeBridgeETH",
    inputs: [
      {
        name: "_from",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_to",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_extraData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "isCorrectTokenPair",
    inputs: [
      {
        name: "_mintableToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "_otherToken",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isOptimismMintableERC20",
    inputs: [
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "messenger",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract CrossDomainMessenger",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "otherBridge",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "paused",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "ERC20BridgeFinalized",
    inputs: [
      {
        name: "localToken",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "remoteToken",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "from",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "to",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "extraData",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ERC20BridgeInitiated",
    inputs: [
      {
        name: "localToken",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "remoteToken",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "extraData",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ETHBridgeFinalized",
    inputs: [
      {
        name: "from",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "extraData",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ETHBridgeInitiated",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "extraData",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506123ba806100206000396000f3fe6080604052600436106100ec5760003560e01c80637438bde71161008a578063c89701a211610059578063c89701a214610287578063d1a1beb61461029d578063d8411f49146102bd578063f73fb39c146102dd57600080fd5b80637438bde71461020c5780637f46ddb21461022c5780638708762314610241578063927ede2d1461025c57600080fd5b80632c5f766b116100c65780632c5f766b146101745780633cb747bf14610187578063596a37c5146101d95780635c975abb146101ec57600080fd5b806309fc8843146100f857806315a98d3a1461010d5780632260a9c21461012e57600080fd5b366100f357005b600080fd5b61010b610106366004611c68565b6102fd565b005b34801561011957600080fd5b50604051600981526020015b60405180910390f35b34801561013a57600080fd5b50610166610149366004611cdf565b600260209081526000928352604080842090915290825290205481565b604051908152602001610125565b61010b610182366004611d09565b6103f3565b34801561019357600080fd5b506003546101b49073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610125565b61010b6101e7366004611d63565b61043c565b3480156101f857600080fd5b5060005b6040519015158152602001610125565b34801561021857600080fd5b506101fc610227366004611dcb565b610889565b34801561023857600080fd5b50600454610166565b34801561024d57600080fd5b5061010b610106366004611de6565b34801561026857600080fd5b5060035473ffffffffffffffffffffffffffffffffffffffff166101b4565b34801561029357600080fd5b5061016660045481565b3480156102a957600080fd5b5061010b6102b8366004611e65565b61089a565b3480156102c957600080fd5b506101fc6102d8366004611cdf565b6108df565b3480156102e957600080fd5b5061010b6102f8366004611ee7565b6108f2565b333b15610391576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f4100000000000000000060648201526084015b60405180910390fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f646973616c6c6f770000000000000000000000000000000000000000000000006044820152606401610388565b6104363385348686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d0292505050565b50505050565b60035473ffffffffffffffffffffffffffffffffffffffff16331480156104f45750600454600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f29190611f4a565b145b6105a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604160248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20746865206f7468657220627269646760648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a401610388565b60006105b184610ec4565b9050803414610642576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f5374616e646172644272696467653a20616d6f756e742073656e7420646f657360448201527f206e6f74206d6174636820616d6f756e742072657175697265640000000000006064820152608401610388565b3073ffffffffffffffffffffffffffffffffffffffff8616036106e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f5374616e646172644272696467653a2063616e6e6f742073656e6420746f207360448201527f656c6600000000000000000000000000000000000000000000000000000000006064820152608401610388565b60035473ffffffffffffffffffffffffffffffffffffffff90811690861603610792576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f5374616e646172644272696467653a2063616e6e6f742073656e6420746f206d60448201527f657373656e6765720000000000000000000000000000000000000000000000006064820152608401610388565b6107d486868386868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610ed492505050565b60006107f1865a8460405180602001604052806000815250610f2b565b905080610880576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f5374616e646172644272696467653a20455448207472616e736665722066616960448201527f6c656400000000000000000000000000000000000000000000000000000000006064820152608401610388565b50505050505050565b600061089482610f43565b92915050565b61088087873388888888888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610f6f92505050565b60006108eb8383611448565b9392505050565b60035473ffffffffffffffffffffffffffffffffffffffff16331480156109aa5750600454600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015610984573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a89190611f4a565b145b610a5c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604160248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20746865206f7468657220627269646760648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a401610388565b60008773ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aa9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acd9190611f63565b905060096000610ade8683856114c2565b9050610ae98a610f43565b15610c3757610af88a8a611448565b610baa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f5374616e646172644272696467653a2077726f6e672072656d6f746520746f6b60448201527f656e20666f72204f7074696d69736d204d696e7461626c65204552433230206c60648201527f6f63616c20746f6b656e00000000000000000000000000000000000000000000608482015260a401610388565b6040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8881166004830152602482018390528b16906340c10f1990604401600060405180830381600087803b158015610c1a57600080fd5b505af1158015610c2e573d6000803e3d6000fd5b50505050610cb2565b73ffffffffffffffffffffffffffffffffffffffff8a1660009081526002602090815260408083208c8452909152902054610c73908290611fb5565b73ffffffffffffffffffffffffffffffffffffffff8b1660008181526002602090815260408083208e8452909152902091909155610cb2908883611529565b610cf68a8a8a8a858a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061160292505050565b50505050505050505050565b823414610d91576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5374616e646172644272696467653a206272696467696e6720455448206d757360448201527f7420696e636c7564652073756666696369656e74204554482076616c756500006064820152608401610388565b610d9d8585858461165e565b60035460045473ffffffffffffffffffffffffffffffffffffffff9091169063e223d3db9085907f596a37c5000000000000000000000000000000000000000000000000000000008989610df0856116a7565b88604051602401610e049493929190612042565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009485161790525160e086901b9092168252610e9792918890600401612087565b6000604051808303818588803b158015610eb057600080fd5b505af1158015610cf6573d6000803e3d6000fd5b6000610894633b9aca00836120b6565b8273ffffffffffffffffffffffffffffffffffffffff16847fb9d74035c12953c6d54c2ba89238a69e82228f6df0ba6a310b4335ef221643598484604051610f1d9291906120f3565b60405180910390a350505050565b6000806000835160208501868989f195945050505050565b6000610894827fec4fc8e3000000000000000000000000000000000000000000000000000000006116b7565b3415610ffd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5374616e646172644272696467653a2063616e6e6f742073656e642076616c7560448201527f65000000000000000000000000000000000000000000000000000000000000006064820152608401610388565b60008060008973ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561104d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110719190611f63565b905060096110808783836116d3565b935061108d8783836114c2565b9250505081600003611120576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f5374616e646172644272696467653a20696e76616c696420746f6b656e20616d60448201527f6f756e74000000000000000000000000000000000000000000000000000000006064820152608401610388565b61112989610f43565b15611277576111388989611448565b6111ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f5374616e646172644272696467653a2077726f6e672072656d6f746520746f6b60448201527f656e20666f72204f7074696d69736d204d696e7461626c65204552433230206c60648201527f6f63616c20746f6b656e00000000000000000000000000000000000000000000608482015260a401610388565b6040517f9dc29fac00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8881166004830152602482018490528a1690639dc29fac90604401600060405180830381600087803b15801561125a57600080fd5b505af115801561126e573d6000803e3d6000fd5b50505050611307565b61129973ffffffffffffffffffffffffffffffffffffffff8a16883085611717565b73ffffffffffffffffffffffffffffffffffffffff891660009081526002602090815260408083208b84529091529020546112d590839061210c565b73ffffffffffffffffffffffffffffffffffffffff8a1660009081526002602090815260408083208c84529091529020555b611315898989898688611775565b60035460045460405173ffffffffffffffffffffffffffffffffffffffff9092169163e223d3db91907ff73fb39c0000000000000000000000000000000000000000000000000000000090611378908d908f908e908e908a908d90602401612124565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009485161790525160e085901b909216825261140b92918990600401612087565b600060405180830381600087803b15801561142557600080fd5b505af1158015611439573d6000803e3d6000fd5b50505050505050505050505050565b60008273ffffffffffffffffffffffffffffffffffffffff1663d6c0b2c46040518163ffffffff1660e01b8152600401602060405180830381865afa158015611495573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b99190611f4a565b90911492915050565b60008160ff168360ff1611156114fd5760006114de838561217b565b6114e990600a6122be565b90506114f581866122cd565b9150506108eb565b6000611509848461217b565b61151490600a6122be565b905061152081866120b6565b95945050505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526115fd9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526117d7565b505050565b83858773ffffffffffffffffffffffffffffffffffffffff167f32e5449e7fea5fb77946053e43ed8b853f7a34620ed7804d3af7354a54d7685286868660405161164e93929190612308565b60405180910390a4505050505050565b828473ffffffffffffffffffffffffffffffffffffffff167f657f5322d05eb184849ecc761434dbea6aae0ad5dfc848ebb2e5b538817cbb098484604051610f1d9291906120f3565b6000610894633b9aca00836122cd565b60006116c2836118e3565b80156108eb57506108eb8383611947565b60008160ff168360ff16116116e95750826108eb565b60006116f5838561217b565b61170090600a6122be565b90508061170d81876122cd565b61152091906120b6565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526104369085907f23b872dd000000000000000000000000000000000000000000000000000000009060840161157b565b8373ffffffffffffffffffffffffffffffffffffffff16858773ffffffffffffffffffffffffffffffffffffffff167f7d6bfb6966a3d1179e265073861bb549088fe2f5c69b829377bba2db7e756b8486868660405161164e9392919061233d565b6000611839826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611a169092919063ffffffff16565b8051909150156115fd5780806020019051810190611857919061235c565b6115fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610388565b600061190f827f01ffc9a700000000000000000000000000000000000000000000000000000000611947565b80156108945750611940827fffffffff00000000000000000000000000000000000000000000000000000000611947565b1592915050565b604080517fffffffff000000000000000000000000000000000000000000000000000000008316602480830191909152825180830390910181526044909101909152602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01ffc9a700000000000000000000000000000000000000000000000000000000178152825160009392849283928392918391908a617530fa92503d915060005190508280156119ff575060208210155b8015611a0b5750600081115b979650505050505050565b6060611a258484600085611a2d565b949350505050565b606082471015611abf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610388565b73ffffffffffffffffffffffffffffffffffffffff85163b611b3d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610388565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611b66919061237e565b60006040518083038185875af1925050503d8060008114611ba3576040519150601f19603f3d011682016040523d82523d6000602084013e611ba8565b606091505b5091509150611a0b82828660608315611bc25750816108eb565b825115611bd25782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610388919061239a565b803563ffffffff81168114611c1a57600080fd5b919050565b60008083601f840112611c3157600080fd5b50813567ffffffffffffffff811115611c4957600080fd5b602083019150836020828501011115611c6157600080fd5b9250929050565b600080600060408486031215611c7d57600080fd5b611c8684611c06565b9250602084013567ffffffffffffffff811115611ca257600080fd5b611cae86828701611c1f565b9497909650939450505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611c1a57600080fd5b60008060408385031215611cf257600080fd5b611cfb83611cbb565b946020939093013593505050565b60008060008060608587031215611d1f57600080fd5b84359350611d2f60208601611c06565b9250604085013567ffffffffffffffff811115611d4b57600080fd5b611d5787828801611c1f565b95989497509550505050565b600080600080600060808688031215611d7b57600080fd5b85359450611d8b60208701611cbb565b935060408601359250606086013567ffffffffffffffff811115611dae57600080fd5b611dba88828901611c1f565b969995985093965092949392505050565b600060208284031215611ddd57600080fd5b6108eb82611cbb565b60008060008060008060a08789031215611dff57600080fd5b611e0887611cbb565b9550611e1660208801611cbb565b945060408701359350611e2b60608801611c06565b9250608087013567ffffffffffffffff811115611e4757600080fd5b611e5389828a01611c1f565b979a9699509497509295939492505050565b600080600080600080600060c0888a031215611e8057600080fd5b611e8988611cbb565b9650602088013595506040880135945060608801359350611eac60808901611c06565b925060a088013567ffffffffffffffff811115611ec857600080fd5b611ed48a828b01611c1f565b989b979a50959850939692959293505050565b600080600080600080600060c0888a031215611f0257600080fd5b611f0b88611cbb565b96506020880135955060408801359450611f2760608901611cbb565b93506080880135925060a088013567ffffffffffffffff811115611ec857600080fd5b600060208284031215611f5c57600080fd5b5051919050565b600060208284031215611f7557600080fd5b815160ff811681146108eb57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015611fc757611fc7611f86565b500390565b60005b83811015611fe7578181015183820152602001611fcf565b838111156104365750506000910152565b60008151808452612010816020860160208601611fcc565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff8516815283602082015282604082015260806060820152600061207d6080830184611ff8565b9695505050505050565b8381526060602082015260006120a06060830185611ff8565b905063ffffffff83166040830152949350505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156120ee576120ee611f86565b500290565b828152604060208201526000611a256040830184611ff8565b6000821982111561211f5761211f611f86565b500190565b868152600073ffffffffffffffffffffffffffffffffffffffff808816602084015280871660408401525084606083015283608083015260c060a083015261216f60c0830184611ff8565b98975050505050505050565b600060ff821660ff84168082101561219557612195611f86565b90039392505050565b600181815b808511156121f757817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156121dd576121dd611f86565b808516156121ea57918102915b93841c93908002906121a3565b509250929050565b60008261220e57506001610894565b8161221b57506000610894565b8160018114612231576002811461223b57612257565b6001915050610894565b60ff84111561224c5761224c611f86565b50506001821b610894565b5060208310610133831016604e8410600b841016171561227a575081810a610894565b612284838361219e565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156122b6576122b6611f86565b029392505050565b60006108eb60ff8416836121ff565b600082612303577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b73ffffffffffffffffffffffffffffffffffffffff841681528260208201526060604082015260006115206060830184611ff8565b8381528260208201526060604082015260006115206060830184611ff8565b60006020828403121561236e57600080fd5b815180151581146108eb57600080fd5b60008251612390818460208701611fcc565b9190910192915050565b6020815260006108eb6020830184611ff856fea164736f6c634300080f000a";

type StandardBridgeTesterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StandardBridgeTesterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StandardBridgeTester__factory extends ContractFactory {
  constructor(...args: StandardBridgeTesterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<StandardBridgeTester> {
    return super.deploy(overrides || {}) as Promise<StandardBridgeTester>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StandardBridgeTester {
    return super.attach(address) as StandardBridgeTester;
  }
  override connect(signer: Signer): StandardBridgeTester__factory {
    return super.connect(signer) as StandardBridgeTester__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StandardBridgeTesterInterface {
    return new utils.Interface(_abi) as StandardBridgeTesterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StandardBridgeTester {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as StandardBridgeTester;
  }
}

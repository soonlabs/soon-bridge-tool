/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  EIP1271Verifier,
  EIP1271VerifierInterface,
} from "../EIP1271Verifier";

const _abi = [
  {
    type: "function",
    name: "getAttestTypeHash",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "getDomainSeparator",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getName",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getNonce",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRevokeTypeHash",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "increaseNonce",
    inputs: [
      {
        name: "newNonce",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "NonceIncreased",
    inputs: [
      {
        name: "oldNonce",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "newNonce",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "InvalidNonce",
    inputs: [],
  },
] as const;

export class EIP1271Verifier__factory {
  static readonly abi = _abi;
  static createInterface(): EIP1271VerifierInterface {
    return new utils.Interface(_abi) as EIP1271VerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EIP1271Verifier {
    return new Contract(address, _abi, signerOrProvider) as EIP1271Verifier;
  }
}

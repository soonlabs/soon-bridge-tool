/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DeputyGuardianModule,
  DeputyGuardianModuleInterface,
} from "../DeputyGuardianModule";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_safe",
        type: "address",
        internalType: "contract GnosisSafe",
      },
      {
        name: "_superchainConfig",
        type: "address",
        internalType: "contract SuperchainConfig",
      },
      {
        name: "_deputyGuardian",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "blacklistDisputeGame",
    inputs: [
      {
        name: "_portal",
        type: "address",
        internalType: "contract OptimismPortal2",
      },
      {
        name: "_game",
        type: "address",
        internalType: "contract IDisputeGame",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "deputyGuardian",
    inputs: [],
    outputs: [
      {
        name: "deputyGuardian_",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pause",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "safe",
    inputs: [],
    outputs: [
      {
        name: "safe_",
        type: "address",
        internalType: "contract GnosisSafe",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setAnchorState",
    inputs: [
      {
        name: "_registry",
        type: "address",
        internalType: "contract AnchorStateRegistry",
      },
      {
        name: "_game",
        type: "address",
        internalType: "contract IFaultDisputeGame",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setRespectedGameType",
    inputs: [
      {
        name: "_portal",
        type: "address",
        internalType: "contract OptimismPortal2",
      },
      {
        name: "_gameType",
        type: "uint32",
        internalType: "GameType",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "superchainConfig",
    inputs: [],
    outputs: [
      {
        name: "superchainConfig_",
        type: "address",
        internalType: "contract SuperchainConfig",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "unpause",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "version",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "DisputeGameBlacklisted",
    inputs: [
      {
        name: "game",
        type: "address",
        indexed: true,
        internalType: "contract IDisputeGame",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Paused",
    inputs: [
      {
        name: "identifier",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RespectedGameTypeSet",
    inputs: [
      {
        name: "gameType",
        type: "uint32",
        indexed: true,
        internalType: "GameType",
      },
      {
        name: "updatedAt",
        type: "uint64",
        indexed: true,
        internalType: "Timestamp",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Unpaused",
    inputs: [],
    anonymous: false,
  },
  {
    type: "error",
    name: "ExecutionFailed",
    inputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b5060405161102738038061102783398101604081905261002f91610064565b6001600160a01b0392831660805290821660a0521660c0526100b1565b6001600160a01b038116811461006157600080fd5b50565b60008060006060848603121561007957600080fd5b83516100848161004c565b60208501519093506100958161004c565b60408501519092506100a68161004c565b809150509250925092565b60805160a05160c051610f0a61011d6000396000818160aa0152610be901526000818161011c015281816102a301528181610789015261088901526000818160f6015281816102610152818161048e015281816106580152818161084d0152610ab00152610f0a6000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c806354fd4d5011610076578063629cdd491161005b578063629cdd49146101a65780638456cb59146101b9578063a1155ed9146101c157600080fd5b806354fd4d501461014a57806360ac1a4f1461019357600080fd5b80630f14b91f146100a8578063186f0354146100f457806335e80ab31461011a5780633f4ba83a14610140575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b7f00000000000000000000000000000000000000000000000000000000000000006100ca565b7f00000000000000000000000000000000000000000000000000000000000000006100ca565b6101486101d4565b005b6101866040518060400160405280600a81526020017f322e302e302d72632e310000000000000000000000000000000000000000000081525081565b6040516100eb9190610cbc565b6101486101a1366004610cfb565b6103a8565b6101486101b4366004610cfb565b610572565b61014861077d565b6101486101cf366004610d34565b6109da565b6101dc610bd1565b6040805160048082526024820183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f3f4ba83a0000000000000000000000000000000000000000000000000000000017905291517f5229073f000000000000000000000000000000000000000000000000000000008152909160009182917f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1691635229073f916102cf917f00000000000000000000000000000000000000000000000000000000000000009186918991839101610d6b565b6000604051808303816000875af11580156102ee573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526103349190810190610e17565b915091508161037a57806040517ff00364b10000000000000000000000000000000000000000000000000000000081526004016103719190610cbc565b60405180910390fd5b6040517fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693390600090a1505050565b6103b0610bd1565b60405173ffffffffffffffffffffffffffffffffffffffff82166024820152600090604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f17cf21a900000000000000000000000000000000000000000000000000000000179052517f5229073f000000000000000000000000000000000000000000000000000000008152909150600090819073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635229073f906104c9908890859088908290600401610d6b565b6000604051808303816000875af11580156104e8573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261052e9190810190610e17565b915091508161056b57806040517ff00364b10000000000000000000000000000000000000000000000000000000081526004016103719190610cbc565b5050505050565b61057a610bd1565b60405173ffffffffffffffffffffffffffffffffffffffff82166024820152600090604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f7d6be8dc00000000000000000000000000000000000000000000000000000000179052517f5229073f000000000000000000000000000000000000000000000000000000008152909150600090819073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635229073f90610693908890859088908290600401610d6b565b6000604051808303816000875af11580156106b2573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526106f89190810190610e17565b915091508161073557806040517ff00364b10000000000000000000000000000000000000000000000000000000081526004016103719190610cbc565b60405173ffffffffffffffffffffffffffffffffffffffff8516907f192c289026d59a41a27f5aea08f3969b57931b0589202d14f4368cded95d3cda90600090a25050505050565b610785610bd1565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636da66355604051602401610804906020808252600f908201527f44657075747920477561726469616e0000000000000000000000000000000000604082015260600190565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635229073f7f000000000000000000000000000000000000000000000000000000000000000060008660006040518563ffffffff1660e01b81526004016108cc9493929190610d6b565b6000604051808303816000875af11580156108eb573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109319190810190610e17565b915091508161096e57806040517ff00364b10000000000000000000000000000000000000000000000000000000081526004016103719190610cbc565b7fc32e6d5d6d1de257f64eac19ddb1f700ba13527983849c9486b1ab007ea283816040516109cd906020808252600f908201527f44657075747920477561726469616e0000000000000000000000000000000000604082015260600190565b60405180910390a1505050565b6109e2610bd1565b60405163ffffffff82166024820152600090604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f7fc4850400000000000000000000000000000000000000000000000000000000179052517f5229073f000000000000000000000000000000000000000000000000000000008152909150600090819073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635229073f90610aeb908890859088908290600401610d6b565b6000604051808303816000875af1158015610b0a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610b509190810190610e17565b9150915081610b8d57806040517ff00364b10000000000000000000000000000000000000000000000000000000081526004016103719190610cbc565b60405167ffffffffffffffff42169063ffffffff8616907f049fe9dd413cdf037cce27011cc1790c753118272f3630e6e8bdfa5e8208176090600090a35050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610c40576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60005b83811015610c5d578181015183820152602001610c45565b83811115610c6c576000848401525b50505050565b60008151808452610c8a816020860160208601610c42565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610ccf6020830184610c72565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610cf857600080fd5b50565b60008060408385031215610d0e57600080fd5b8235610d1981610cd6565b91506020830135610d2981610cd6565b809150509250929050565b60008060408385031215610d4757600080fd5b8235610d5281610cd6565b9150602083013563ffffffff81168114610d2957600080fd5b73ffffffffffffffffffffffffffffffffffffffff85168152836020820152608060408201526000610da06080830185610c72565b905060028310610dd9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82606083015295945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060408385031215610e2a57600080fd5b82518015158114610e3a57600080fd5b602084015190925067ffffffffffffffff80821115610e5857600080fd5b818501915085601f830112610e6c57600080fd5b815181811115610e7e57610e7e610de8565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610ec457610ec4610de8565b81604052828152886020848701011115610edd57600080fd5b610eee836020830160208801610c42565b8095505050505050925092905056fea164736f6c634300080f000a";

type DeputyGuardianModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeputyGuardianModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeputyGuardianModule__factory extends ContractFactory {
  constructor(...args: DeputyGuardianModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _safe: string,
    _superchainConfig: string,
    _deputyGuardian: string,
    overrides?: Overrides & { from?: string }
  ): Promise<DeputyGuardianModule> {
    return super.deploy(
      _safe,
      _superchainConfig,
      _deputyGuardian,
      overrides || {}
    ) as Promise<DeputyGuardianModule>;
  }
  override getDeployTransaction(
    _safe: string,
    _superchainConfig: string,
    _deputyGuardian: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _safe,
      _superchainConfig,
      _deputyGuardian,
      overrides || {}
    );
  }
  override attach(address: string): DeputyGuardianModule {
    return super.attach(address) as DeputyGuardianModule;
  }
  override connect(signer: Signer): DeputyGuardianModule__factory {
    return super.connect(signer) as DeputyGuardianModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeputyGuardianModuleInterface {
    return new utils.Interface(_abi) as DeputyGuardianModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeputyGuardianModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DeputyGuardianModule;
  }
}

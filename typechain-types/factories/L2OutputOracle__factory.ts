/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  L2OutputOracle,
  L2OutputOracleInterface,
} from "../L2OutputOracle";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "CHALLENGER",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "FINALIZATION_PERIOD_SECONDS",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "L2_BLOCK_TIME",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "PROPOSER",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "SUBMISSION_INTERVAL",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "challenger",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "computeL2Timestamp",
    inputs: [
      {
        name: "_l2BlockNumber",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "deleteL2Outputs",
    inputs: [
      {
        name: "_l2OutputIndex",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "devClearL2Outputs",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "finalizationPeriodSeconds",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getL2Output",
    inputs: [
      {
        name: "_l2OutputIndex",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Types.OutputProposal",
        components: [
          {
            name: "outputRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "timestamp",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "l2BlockNumber",
            type: "uint128",
            internalType: "uint128",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getL2OutputAfter",
    inputs: [
      {
        name: "_l2BlockNumber",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Types.OutputProposal",
        components: [
          {
            name: "outputRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "timestamp",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "l2BlockNumber",
            type: "uint128",
            internalType: "uint128",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getL2OutputIndexAfter",
    inputs: [
      {
        name: "_l2BlockNumber",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_submissionInterval",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_l2BlockTime",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_startingBlockNumber",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_startingTimestamp",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_proposer",
        type: "address",
        internalType: "address",
      },
      {
        name: "_challenger",
        type: "address",
        internalType: "address",
      },
      {
        name: "_finalizationPeriodSeconds",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "l2BlockTime",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "latestBlockNumber",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "latestOutputIndex",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "nextBlockNumber",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "nextOutputIndex",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proposeL2Output",
    inputs: [
      {
        name: "_outputRoot",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_l2BlockNumber",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_l1BlockHash",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_l1BlockNumber",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "proposer",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "startingBlockNumber",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "startingTimestamp",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "submissionInterval",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "version",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OutputProposed",
    inputs: [
      {
        name: "outputRoot",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "l2OutputIndex",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "l2BlockNumber",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "l1Timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OutputsDeleted",
    inputs: [
      {
        name: "prevNextOutputIndex",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "newNextOutputIndex",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50620000256001806000808080806200002b565b62000328565b600054610100900460ff16158080156200004c5750600054600160ff909116105b806200007c575062000069306200031960201b620014481760201c565b1580156200007c575060005460ff166001145b620000e55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801562000109576000805461ff0019166101001790555b60008811620001815760405162461bcd60e51b815260206004820152603a60248201527f4c324f75747075744f7261636c653a207375626d697373696f6e20696e74657260448201527f76616c206d7573742062652067726561746572207468616e20300000000000006064820152608401620000dc565b60008711620001f95760405162461bcd60e51b815260206004820152603460248201527f4c324f75747075744f7261636c653a204c3220626c6f636b2074696d65206d7560448201527f73742062652067726561746572207468616e20300000000000000000000000006064820152608401620000dc565b428511156200027f5760405162461bcd60e51b8152602060048201526044602482018190527f4c324f75747075744f7261636c653a207374617274696e67204c322074696d65908201527f7374616d70206d757374206265206c657373207468616e2063757272656e742060648201526374696d6560e01b608482015260a401620000dc565b6004889055600587905560018690556002859055600780546001600160a01b038087166001600160a01b0319928316179092556006805492861692909116919091179055600882905580156200030f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b6001600160a01b03163b151590565b6116c080620003386000396000f3fe6080604052600436106101955760003560e01c806389c44cbb116100e1578063bffa7f0f1161008a578063d1de856c11610064578063d1de856c1461049b578063dcec3348146104bb578063e1a41bcf146104d0578063f4daa291146104e657600080fd5b8063bffa7f0f1461043a578063ce5db8d614610465578063cf8e5cf01461047b57600080fd5b80639c1cd874116100bb5780639c1cd8741461039c578063a25ae557146103b1578063a8e4fb901461040d57600080fd5b806389c44cbb1461035357806393991af3146103735780639aaab6481461038957600080fd5b806369f16eec1161014357806370872aa51161011d57806370872aa5146103075780637f0064201461031d578063887862721461033d57600080fd5b806369f16eec146102b25780636abcf563146102c75780636b4d98dd146102dc57600080fd5b8063529933df11610174578063529933df146101f5578063534db0e21461020a57806354fd4d501461025c57600080fd5b80622134cc1461019a5780631c89c97d146101be5780634599c788146101e0575b600080fd5b3480156101a657600080fd5b506005545b6040519081526020015b60405180910390f35b3480156101ca57600080fd5b506101de6101d936600461148d565b6104fb565b005b3480156101ec57600080fd5b506101ab6108d6565b34801561020157600080fd5b506004546101ab565b34801561021657600080fd5b506006546102379073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b5565b34801561026857600080fd5b506102a56040518060400160405280600581526020017f312e382e3000000000000000000000000000000000000000000000000000000081525081565b6040516101b591906114f0565b3480156102be57600080fd5b506101ab610949565b3480156102d357600080fd5b506003546101ab565b3480156102e857600080fd5b5060065473ffffffffffffffffffffffffffffffffffffffff16610237565b34801561031357600080fd5b506101ab60015481565b34801561032957600080fd5b506101ab610338366004611563565b61095b565b34801561034957600080fd5b506101ab60025481565b34801561035f57600080fd5b506101de61036e366004611563565b610b6f565b34801561037f57600080fd5b506101ab60055481565b6101de61039736600461157c565b610e09565b3480156103a857600080fd5b506101de61126a565b3480156103bd57600080fd5b506103d16103cc366004611563565b611328565b60408051825181526020808401516fffffffffffffffffffffffffffffffff9081169183019190915292820151909216908201526060016101b5565b34801561041957600080fd5b506007546102379073ffffffffffffffffffffffffffffffffffffffff1681565b34801561044657600080fd5b5060075473ffffffffffffffffffffffffffffffffffffffff16610237565b34801561047157600080fd5b506101ab60085481565b34801561048757600080fd5b506103d1610496366004611563565b6113bc565b3480156104a757600080fd5b506101ab6104b6366004611563565b6113f4565b3480156104c757600080fd5b506101ab611431565b3480156104dc57600080fd5b506101ab60045481565b3480156104f257600080fd5b506008546101ab565b600054610100900460ff161580801561051b5750600054600160ff909116105b806105355750303b158015610535575060005460ff166001145b6105c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561062457600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b600088116106b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4c324f75747075744f7261636c653a207375626d697373696f6e20696e74657260448201527f76616c206d7573742062652067726561746572207468616e203000000000000060648201526084016105bd565b60008711610744576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f4c324f75747075744f7261636c653a204c3220626c6f636b2074696d65206d7560448201527f73742062652067726561746572207468616e203000000000000000000000000060648201526084016105bd565b428511156107fb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526044602482018190527f4c324f75747075744f7261636c653a207374617274696e67204c322074696d65908201527f7374616d70206d757374206265206c657373207468616e2063757272656e742060648201527f74696d6500000000000000000000000000000000000000000000000000000000608482015260a4016105bd565b60048890556005879055600186905560028590556007805473ffffffffffffffffffffffffffffffffffffffff8087167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179092556006805492861692909116919091179055600882905580156108cc57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b6003546000901561094057600380546108f1906001906115dd565b81548110610901576109016115f4565b600091825260209091206002909102016001015470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff16919050565b6001545b905090565b600354600090610944906001906115dd565b60006109656108d6565b821115610a1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604860248201527f4c324f75747075744f7261636c653a2063616e6e6f7420676574206f7574707560448201527f7420666f72206120626c6f636b207468617420686173206e6f74206265656e2060648201527f70726f706f736564000000000000000000000000000000000000000000000000608482015260a4016105bd565b600354610acf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604660248201527f4c324f75747075744f7261636c653a2063616e6e6f7420676574206f7574707560448201527f74206173206e6f206f7574707574732068617665206265656e2070726f706f7360648201527f6564207965740000000000000000000000000000000000000000000000000000608482015260a4016105bd565b6003546000905b80821015610b685760006002610aec8385611623565b610af6919061163b565b90508460038281548110610b0c57610b0c6115f4565b600091825260209091206002909102016001015470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff161015610b5e57610b57816001611623565b9250610b62565b8091505b50610ad6565b5092915050565b60065473ffffffffffffffffffffffffffffffffffffffff163314610c16576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f4c324f75747075744f7261636c653a206f6e6c7920746865206368616c6c656e60448201527f67657220616464726573732063616e2064656c657465206f757470757473000060648201526084016105bd565b6003548110610ccd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604360248201527f4c324f75747075744f7261636c653a2063616e6e6f742064656c657465206f7560448201527f747075747320616674657220746865206c6174657374206f757470757420696e60648201527f6465780000000000000000000000000000000000000000000000000000000000608482015260a4016105bd565b60085460038281548110610ce357610ce36115f4565b6000918252602090912060016002909202010154610d13906fffffffffffffffffffffffffffffffff16426115dd565b10610dc6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604660248201527f4c324f75747075744f7261636c653a2063616e6e6f742064656c657465206f7560448201527f74707574732074686174206861766520616c7265616479206265656e2066696e60648201527f616c697a65640000000000000000000000000000000000000000000000000000608482015260a4016105bd565b6000610dd160035490565b90508160035581817f4ee37ac2c786ec85e87592d3c5c8a1dd66f8496dda3f125d9ea8ca5f657629b660405160405180910390a35050565b60075473ffffffffffffffffffffffffffffffffffffffff163314610ed6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604160248201527f4c324f75747075744f7261636c653a206f6e6c79207468652070726f706f736560448201527f7220616464726573732063616e2070726f706f7365206e6577206f757470757460648201527f7300000000000000000000000000000000000000000000000000000000000000608482015260a4016105bd565b610ede611431565b8314610f92576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604860248201527f4c324f75747075744f7261636c653a20626c6f636b206e756d626572206d757360448201527f7420626520657175616c20746f206e65787420657870656374656420626c6f6360648201527f6b206e756d626572000000000000000000000000000000000000000000000000608482015260a4016105bd565b42610f9c846113f4565b10611029576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f4c324f75747075744f7261636c653a2063616e6e6f742070726f706f7365204c60448201527f32206f757470757420696e20746865206675747572650000000000000000000060648201526084016105bd565b836110b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4c324f75747075744f7261636c653a204c32206f75747075742070726f706f7360448201527f616c2063616e6e6f7420626520746865207a65726f206861736800000000000060648201526084016105bd565b81156111725781814014611172576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604960248201527f4c324f75747075744f7261636c653a20626c6f636b206861736820646f65732060448201527f6e6f74206d61746368207468652068617368206174207468652065787065637460648201527f6564206865696768740000000000000000000000000000000000000000000000608482015260a4016105bd565b8261117c60035490565b857fa7aaf2512769da4e444e3de247be2564225c2e7a8f74cfe528e46e17d24868e2426040516111ae91815260200190565b60405180910390a45050604080516060810182529283526fffffffffffffffffffffffffffffffff4281166020850190815292811691840191825260038054600181018255600091909152935160029094027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b810194909455915190518216700100000000000000000000000000000000029116177fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c90910155565b60035460000361127657565b4662aa36a781146112e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f64657620636f646520666f72207365706f6c696100000000000000000000000060448201526064016105bd565b60006112ee60035490565b905060006003556000817f4ee37ac2c786ec85e87592d3c5c8a1dd66f8496dda3f125d9ea8ca5f657629b660405160405180910390a35050565b604080516060810182526000808252602082018190529181019190915260038281548110611358576113586115f4565b600091825260209182902060408051606081018252600290930290910180548352600101546fffffffffffffffffffffffffffffffff8082169484019490945270010000000000000000000000000000000090049092169181019190915292915050565b604080516060810182526000808252602082018190529181019190915260036113e48361095b565b81548110611358576113586115f4565b60006103e86005546001548461140a91906115dd565b6114149190611676565b61141e919061163b565b60025461142b9190611623565b92915050565b600060045461143e6108d6565b6109449190611623565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b803573ffffffffffffffffffffffffffffffffffffffff8116811461148857600080fd5b919050565b600080600080600080600060e0888a0312156114a857600080fd5b873596506020880135955060408801359450606088013593506114cd60808901611464565b92506114db60a08901611464565b915060c0880135905092959891949750929550565b600060208083528351808285015260005b8181101561151d57858101830151858201604001528201611501565b8181111561152f576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60006020828403121561157557600080fd5b5035919050565b6000806000806080858703121561159257600080fd5b5050823594602084013594506040840135936060013592509050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156115ef576115ef6115ae565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008219821115611636576116366115ae565b500190565b600082611671577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156116ae576116ae6115ae565b50029056fea164736f6c634300080f000a";

type L2OutputOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L2OutputOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L2OutputOracle__factory extends ContractFactory {
  constructor(...args: L2OutputOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<L2OutputOracle> {
    return super.deploy(overrides || {}) as Promise<L2OutputOracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): L2OutputOracle {
    return super.attach(address) as L2OutputOracle;
  }
  override connect(signer: Signer): L2OutputOracle__factory {
    return super.connect(signer) as L2OutputOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L2OutputOracleInterface {
    return new utils.Interface(_abi) as L2OutputOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L2OutputOracle {
    return new Contract(address, _abi, signerOrProvider) as L2OutputOracle;
  }
}

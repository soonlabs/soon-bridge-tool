/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  GameSolver,
  GameSolverInterface,
} from "../../FaultDisputeActors.sol/GameSolver";

const _abi = [
  {
    type: "function",
    name: "GAME",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract FaultDisputeGame",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "absolutePrestateData",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "agreeWithRoot",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "l2Outputs",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "processedBuf",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "solveGame",
    inputs: [],
    outputs: [
      {
        name: "moves_",
        type: "tuple[]",
        internalType: "struct GameSolver.Move[]",
        components: [
          {
            name: "kind",
            type: "uint8",
            internalType: "enum GameSolver.MoveKind",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "value",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "trace",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
] as const;

export class GameSolver__factory {
  static readonly abi = _abi;
  static createInterface(): GameSolverInterface {
    return new utils.Interface(_abi) as GameSolverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GameSolver {
    return new Contract(address, _abi, signerOrProvider) as GameSolver;
  }
}

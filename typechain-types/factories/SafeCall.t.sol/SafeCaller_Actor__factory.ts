/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SafeCaller_Actor,
  SafeCaller_ActorInterface,
} from "../../SafeCall.t.sol/SafeCaller_Actor";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_vm",
        type: "address",
        internalType: "contract Vm",
      },
      {
        name: "_fails",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "numCalls",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "performSafeCallMinGas",
    inputs: [
      {
        name: "gas",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "minGas",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610a86380380610a8683398101604081905261002f9161005a565b600080546001600160a01b0319166001600160a01b03939093169290921790915515156080526100a5565b6000806040838503121561006d57600080fd5b82516001600160a01b038116811461008457600080fd5b6020840151909250801515811461009a57600080fd5b809150509250929050565b6080516109b86100ce600039600081816101310152818161034c015261038901526109b86000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806382f161ca1461003b578063e0f8035b14610056575b600080fd5b61004460015481565b60405190815260200160405180910390f35b61006961006436600461075d565b61006b565b005b60005473ffffffffffffffffffffffffffffffffffffffff90811690634c63e5629084163b1580156100be57506a636f6e736f6c652e6c6f6773ffffffffffffffffffffffffffffffffffffffff851614155b6040518263ffffffff1660e01b81526004016100de911515815260200190565b60006040518083038186803b1580156100f657600080fd5b505afa15801561010a573d6000803e3d6000fd5b5050505061012d8367ffffffffffffffff166109c465ffffffffffff80166103d5565b92507f0000000000000000000000000000000000000000000000000000000000000000156101945761018d67ffffffffffffffff808616908516603f610174876040610803565b61017e9190610862565b67ffffffffffffffff166103d5565b93506101ee565b6101eb67ffffffffffffffff8516603f6101af866040610803565b6101b99190610862565b6101c590619c40610889565b6101d1906103e8610889565b67ffffffffffffffff1667ffffffffffffffff80166103d5565b93505b600080546040517f08e4e11600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015260ff8516602483015267ffffffffffffffff871660448301526080606483015260848201939093529116906308e4e1169060a401600060405180830381600087803b15801561028357600080fd5b505af1158015610297573d6000803e3d6000fd5b50506040805173ffffffffffffffffffffffffffffffffffffffff8616602482015267ffffffffffffffff8781166044808401919091528351808403909101815260649092019092526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f9741e3b300000000000000000000000000000000000000000000000000000000179052600093506103409250339188169060ff86169061042a565b905080801561036c57507f00000000000000000000000000000000000000000000000000000000000000005b156103875760018054906000610381836108b5565b91905055505b7f00000000000000000000000000000000000000000000000000000000000000001580156103b3575080155b156103ce57600180549060006103c8836108b5565b91905055505b5050505050565b60006103e2848484610442565b90506104236040518060400160405280600c81526020017f426f756e6420726573756c7400000000000000000000000000000000000000008152508261067e565b9392505050565b6000806000835160208501868989f195945050505050565b6000818311156104d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5374645574696c7320626f756e642875696e743235362c75696e743235362c7560448201527f696e74323536293a204d6178206973206c657373207468616e206d696e2e0000606482015260840160405180910390fd5b8284101580156104e85750818411155b156104f4575082610423565b600061050084846108ed565b61050b906001610904565b90506003851115801561051d57508481115b156105345761052c8585610904565b915050610423565b61055f60037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6108ed565b85101580156105965750610593857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6108ed565b81115b156105cf576105c5857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6108ed565b61052c90846108ed565b828511156106255760006105e384876108ed565b905060006105f1838361091c565b90508060000361060657849350505050610423565b60016106128288610904565b61061c91906108ed565b93505050610676565b8385101561067657600061063986866108ed565b90506000610647838361091c565b90508060000361065c57859350505050610423565b61066681866108ed565b610671906001610904565b935050505b509392505050565b61070f8282604051602401610694929190610930565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc00000000000000000000000000000000000000000000000000000000179052610713565b5050565b61071c8161071f565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b803567ffffffffffffffff8116811461075857600080fd5b919050565b6000806000806080858703121561077357600080fd5b61077c85610740565b935061078a60208601610740565b9250604085013573ffffffffffffffffffffffffffffffffffffffff811681146107b357600080fd5b9150606085013560ff811681146107c957600080fd5b939692955090935050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff8083168185168183048111821515161561082a5761082a6107d4565b02949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600067ffffffffffffffff8084168061087d5761087d610833565b92169190910492915050565b600067ffffffffffffffff8083168185168083038211156108ac576108ac6107d4565b01949350505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036108e6576108e66107d4565b5060010190565b6000828210156108ff576108ff6107d4565b500390565b60008219821115610917576109176107d4565b500190565b60008261092b5761092b610833565b500690565b604081526000835180604084015260005b8181101561095e5760208187018101516060868401015201610941565b81811115610970576000606083860101525b50602083019390935250601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160160600191905056fea164736f6c634300080f000a";

type SafeCaller_ActorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SafeCaller_ActorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SafeCaller_Actor__factory extends ContractFactory {
  constructor(...args: SafeCaller_ActorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vm: string,
    _fails: boolean,
    overrides?: Overrides & { from?: string }
  ): Promise<SafeCaller_Actor> {
    return super.deploy(
      _vm,
      _fails,
      overrides || {}
    ) as Promise<SafeCaller_Actor>;
  }
  override getDeployTransaction(
    _vm: string,
    _fails: boolean,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_vm, _fails, overrides || {});
  }
  override attach(address: string): SafeCaller_Actor {
    return super.attach(address) as SafeCaller_Actor;
  }
  override connect(signer: Signer): SafeCaller_Actor__factory {
    return super.connect(signer) as SafeCaller_Actor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafeCaller_ActorInterface {
    return new utils.Interface(_abi) as SafeCaller_ActorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeCaller_Actor {
    return new Contract(address, _abi, signerOrProvider) as SafeCaller_Actor;
  }
}

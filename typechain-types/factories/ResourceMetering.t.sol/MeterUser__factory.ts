/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MeterUser,
  MeterUserInterface,
} from "../../ResourceMetering.t.sol/MeterUser";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "innerConfig",
    inputs: [],
    outputs: [
      {
        name: "maxResourceLimit",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "elasticityMultiplier",
        type: "uint8",
        internalType: "uint8",
      },
      {
        name: "baseFeeMaxChangeDenominator",
        type: "uint8",
        internalType: "uint8",
      },
      {
        name: "minimumBaseFee",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "systemTxMaxGas",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "maximumBaseFee",
        type: "uint128",
        internalType: "uint128",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "params",
    inputs: [],
    outputs: [
      {
        name: "prevBaseFee",
        type: "uint128",
        internalType: "uint128",
      },
      {
        name: "prevBoughtGas",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "prevBlockNum",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "resourceConfig",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct ResourceMetering.ResourceConfig",
        components: [
          {
            name: "maxResourceLimit",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "elasticityMultiplier",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "baseFeeMaxChangeDenominator",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "minimumBaseFee",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "systemTxMaxGas",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "maximumBaseFee",
            type: "uint128",
            internalType: "uint128",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "set",
    inputs: [
      {
        name: "_prevBaseFee",
        type: "uint128",
        internalType: "uint128",
      },
      {
        name: "_prevBoughtGas",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "_prevBlockNum",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setParams",
    inputs: [
      {
        name: "newConfig",
        type: "tuple",
        internalType: "struct ResourceMetering.ResourceConfig",
        components: [
          {
            name: "maxResourceLimit",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "elasticityMultiplier",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "baseFeeMaxChangeDenominator",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "minimumBaseFee",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "systemTxMaxGas",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "maximumBaseFee",
            type: "uint128",
            internalType: "uint128",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "use",
    inputs: [
      {
        name: "_amount",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "OutOfGas",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001c620000f8565b620000316200022a60201b6200073a1760201c565b805160328054602084015160408501516060860151608087015160a09097015163ffffffff96871664ffffffffff199095169490941764010000000060ff948516021764ffffffffff60281b191665010000000000939092169290920263ffffffff60301b19161766010000000000009185169190910217600160501b600160f01b0319166a01000000000000000000009390941692909202600160701b600160f01b03191692909217600160701b6001600160801b03909216919091021790556200036f565b600054610100900460ff1615808015620001195750600054600160ff909116105b806200014957506200013630620002a160201b620007ba1760201c565b15801562000149575060005460ff166001145b620001b25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015620001d6576000805461ff0019166101001790555b620001e0620002b0565b801562000227576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152506040805160c0810182526301312d008152600a6020820152600891810191909152633b9aca006060820152620f424060808201526001600160801b0360a082015290565b6001600160a01b03163b151590565b600054610100900460ff166200031d5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401620001a9565b600154600160c01b90046001600160401b03166000036200036d5760408051606081018252633b9aca0080825260006020830152436001600160401b031691909201819052600160c01b02176001555b565b6117a3806200037f6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b4b64fbb1161005b578063b4b64fbb1461021c578063b77429a01461022f578063cc731b0214610387578063cff0ab96146103ff57600080fd5b80636f1696061461008257806381171ef81461014e5780638129fc1c14610214575b600080fd5b61014c610090366004611317565b604080516060810182526fffffffffffffffffffffffffffffffff9490941680855267ffffffffffffffff93841660208601819052929093169301839052600180547fffffffffffffffff000000000000000000000000000000000000000000000000169092177001000000000000000000000000000000009091021777ffffffffffffffffffffffffffffffffffffffffffffffff167801000000000000000000000000000000000000000000000000909202919091179055565b005b6032546101bd9063ffffffff8082169160ff640100000000820481169265010000000000830490911691660100000000000081048216916a0100000000000000000000820416906fffffffffffffffffffffffffffffffff6e0100000000000000000000000000009091041686565b6040805163ffffffff978816815260ff96871660208201529490951694840194909452908416606083015290921660808301526fffffffffffffffffffffffffffffffff1660a082015260c0015b60405180910390f35b61014c610493565b61014c61022a36600461135a565b61062a565b61014c61023d36600461139a565b805160328054602084015160408501516060860151608087015160a09097015163ffffffff9687167fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000009095169490941764010000000060ff94851602177fffffffffffffffffffffffffffffffffffffffffffff0000000000ffffffffff166501000000000093909216929092027fffffffffffffffffffffffffffffffffffffffffffff00000000ffffffffffff1617660100000000000091851691909102177fffff0000000000000000000000000000000000000000ffffffffffffffffffff166a010000000000000000000093909416929092027fffff00000000000000000000000000000000ffffffffffffffffffffffffffff16929092176e0100000000000000000000000000006fffffffffffffffffffffffffffffffff90921691909102179055565b61038f61063f565b60405161020b9190600060c08201905063ffffffff80845116835260ff602085015116602084015260ff6040850151166040840152806060850151166060840152806080850151166080840152506fffffffffffffffffffffffffffffffff60a08401511660a083015292915050565b60015461045a906fffffffffffffffffffffffffffffffff81169067ffffffffffffffff7001000000000000000000000000000000008204811691780100000000000000000000000000000000000000000000000090041683565b604080516fffffffffffffffffffffffffffffffff909416845267ffffffffffffffff928316602085015291169082015260600161020b565b600054610100900460ff16158080156104b35750600054600160ff909116105b806104cd5750303b1580156104cd575060005460ff166001145b61055e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905580156105bc57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b6105c46107d6565b801561062757600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b8060005a905061063a82826108ea565b505050565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a08101919091526107356040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152506040805160c08101825260325463ffffffff8082168352640100000000820460ff9081166020850152650100000000008304169383019390935266010000000000008104831660608301526a0100000000000000000000810490921660808201526e0100000000000000000000000000009091046fffffffffffffffffffffffffffffffff1660a082015290565b905090565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152506040805160c0810182526301312d008152600a6020820152600891810191909152633b9aca006060820152620f424060808201526fffffffffffffffffffffffffffffffff60a082015290565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b600054610100900460ff1661086d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610555565b6001547801000000000000000000000000000000000000000000000000900467ffffffffffffffff166000036108e85760408051606081018252633b9aca00808252600060208301524367ffffffffffffffff1691909201819052780100000000000000000000000000000000000000000000000002176001555b565b600154600090610920907801000000000000000000000000000000000000000000000000900467ffffffffffffffff164361148f565b905060006109e86040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152506040805160c08101825260325463ffffffff8082168352640100000000820460ff9081166020850152650100000000008304169383019390935266010000000000008104831660608301526a0100000000000000000000810490921660808201526e0100000000000000000000000000009091046fffffffffffffffffffffffffffffffff1660a082015290565b90506000816020015160ff16826000015163ffffffff16610a0991906114d5565b90508215610b4057600154600090610a40908390700100000000000000000000000000000000900467ffffffffffffffff1661153d565b90506000836040015160ff1683610a5791906115b1565b600154610a779084906fffffffffffffffffffffffffffffffff166115b1565b610a8191906114d5565b600154909150600090610ad290610aab9084906fffffffffffffffffffffffffffffffff1661166d565b866060015163ffffffff168760a001516fffffffffffffffffffffffffffffffff16610c7d565b90506001861115610b0157610afe610aab82876040015160ff1660018a610af9919061148f565b610c9a565b90505b6fffffffffffffffffffffffffffffffff16780100000000000000000000000000000000000000000000000067ffffffffffffffff4316021760015550505b60018054869190601090610b73908490700100000000000000000000000000000000900467ffffffffffffffff166116e1565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550816000015163ffffffff16600160000160109054906101000a900467ffffffffffffffff1667ffffffffffffffff161315610c00576040517f77ebef4d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600154600090610c2c906fffffffffffffffffffffffffffffffff1667ffffffffffffffff881661170d565b90506000610c3e48633b9aca00610cef565b610c48908361174a565b905060005a610c57908861148f565b905080821115610c7357610c73610c6e828461148f565b610d08565b5050505050505050565b6000610c92610c8c8585610d31565b83610d41565b949350505050565b6000670de0b6b3a7640000610cdb610cb285836114d5565b610cc490670de0b6b3a764000061153d565b610cd685670de0b6b3a76400006115b1565b610d50565b610ce590866115b1565b610c9291906114d5565b600081831015610cff5781610d01565b825b9392505050565b6000805a90505b825a610d1b908361148f565b101561063a57610d2a8261175e565b9150610d0f565b600081831215610cff5781610d01565b6000818312610cff5781610d01565b6000610d01670de0b6b3a764000083610d6886610d81565b610d7291906115b1565b610d7c91906114d5565b610fc5565b6000808213610dec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f554e444546494e454400000000000000000000000000000000000000000000006044820152606401610555565b60006060610df984611204565b03609f8181039490941b90931c6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d7fffffffffffffffffffffffffffffffffffffff73c0c716a594e00d54e3c4cbc9018302821d7ffffffffffffffffffffffffffffffffffffffdc7b88c420e53a9890533129f6f01830290911d7fffffffffffffffffffffffffffffffffffffff465fda27eb4d63ded474e5f832019091027ffffffffffffffff5f6af8f7b3396644f18e157960000000000000000000000000105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b393909302929092017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b60007ffffffffffffffffffffffffffffffffffffffffffffffffdb731c958f34d94c18213610ff657506000919050565b680755bf798b4a1bf1e58212611068576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4558505f4f564552464c4f5700000000000000000000000000000000000000006044820152606401610555565b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056b80000000000000000000000001901d6bb17217f7d1cf79abc9e3b39881029093037fffffffffffffffffffffffffffffffffffffffdbf3ccf1604d263450f02a550481018102606090811d6d0277594991cfc85f6e2461837cd9018202811d7fffffffffffffffffffffffffffffffffffffe5adedaa1cb095af9e4da10e363c018202811d6db1bbb201f443cf962f1a1d3db4a5018202811d7ffffffffffffffffffffffffffffffffffffd38dc772608b0ae56cce01296c0eb018202811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765084018402831d9081019084017ffffffffffffffffffffffffffffffffffffffe2c69812cf03b0763fd454a8f7e010290911d6e0587f503bb6ea29d25fcb7401964500190910279d835ebba824c98fb31b83b2ca45c000000000000000000000000010574029d9dc38563c32e5c2f6dc192ee70ef65f9978af30260c3939093039290921c92915050565b600080821161126f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f554e444546494e454400000000000000000000000000000000000000000000006044820152606401610555565b5060016fffffffffffffffffffffffffffffffff821160071b82811c67ffffffffffffffff1060061b1782811c63ffffffff1060051b1782811c61ffff1060041b1782811c60ff10600390811b90911783811c600f1060021b1783811c909110821b1791821c111790565b80356fffffffffffffffffffffffffffffffff811681146112fa57600080fd5b919050565b803567ffffffffffffffff811681146112fa57600080fd5b60008060006060848603121561132c57600080fd5b611335846112da565b9250611343602085016112ff565b9150611351604085016112ff565b90509250925092565b60006020828403121561136c57600080fd5b610d01826112ff565b803563ffffffff811681146112fa57600080fd5b803560ff811681146112fa57600080fd5b600060c082840312156113ac57600080fd5b60405160c0810181811067ffffffffffffffff821117156113f6577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405261140283611375565b815261141060208401611389565b602082015261142160408401611389565b604082015261143260608401611375565b606082015261144360808401611375565b608082015261145460a084016112da565b60a08201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156114a1576114a1611460565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826114e4576114e46114a6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f80000000000000000000000000000000000000000000000000000000000000008314161561153857611538611460565b500590565b6000808312837f80000000000000000000000000000000000000000000000000000000000000000183128115161561157757611577611460565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0183138116156115ab576115ab611460565b50500390565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6000841360008413858304851182821616156115f2576115f2611460565b7f8000000000000000000000000000000000000000000000000000000000000000600087128682058812818416161561162d5761162d611460565b6000871292508782058712848416161561164957611649611460565b8785058712818416161561165f5761165f611460565b505050929093029392505050565b6000808212827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038413811516156116a7576116a7611460565b827f80000000000000000000000000000000000000000000000000000000000000000384128116156116db576116db611460565b50500190565b600067ffffffffffffffff80831681851680830382111561170457611704611460565b01949350505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561174557611745611460565b500290565b600082611759576117596114a6565b500490565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361178f5761178f611460565b506001019056fea164736f6c634300080f000a";

type MeterUserConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MeterUserConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MeterUser__factory extends ContractFactory {
  constructor(...args: MeterUserConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<MeterUser> {
    return super.deploy(overrides || {}) as Promise<MeterUser>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MeterUser {
    return super.attach(address) as MeterUser;
  }
  override connect(signer: Signer): MeterUser__factory {
    return super.connect(signer) as MeterUser__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MeterUserInterface {
    return new utils.Interface(_abi) as MeterUserInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MeterUser {
    return new Contract(address, _abi, signerOrProvider) as MeterUser;
  }
}

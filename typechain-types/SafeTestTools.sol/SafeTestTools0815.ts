/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../common";

export type SafeInstanceStruct = {
  instanceId: BigNumberish;
  ownerPKs: BigNumberish[];
  owners: string[];
  threshold: BigNumberish;
  safe: string;
};

export type SafeInstanceStructOutput = [
  BigNumber,
  BigNumber[],
  string[],
  BigNumber,
  string
] & {
  instanceId: BigNumber;
  ownerPKs: BigNumber[];
  owners: string[];
  threshold: BigNumber;
  safe: string;
};

export type AdvancedSafeInitParamsStruct = {
  includeFallbackHandler: boolean;
  saltNonce: BigNumberish;
  setupModulesCall_to: string;
  setupModulesCall_data: BytesLike;
  refundAmount: BigNumberish;
  refundToken: string;
  refundReceiver: string;
  initData: BytesLike;
};

export type AdvancedSafeInitParamsStructOutput = [
  boolean,
  BigNumber,
  string,
  string,
  BigNumber,
  string,
  string,
  string
] & {
  includeFallbackHandler: boolean;
  saltNonce: BigNumber;
  setupModulesCall_to: string;
  setupModulesCall_data: string;
  refundAmount: BigNumber;
  refundToken: string;
  refundReceiver: string;
  initData: string;
};

export interface SafeTestTools0815Interface extends utils.Interface {
  functions: {
    "_setupSafe(uint256[],uint256)": FunctionFragment;
    "_setupSafe(uint256[],uint256,uint256,(bool,uint256,address,bytes,uint256,address,address,bytes))": FunctionFragment;
    "_setupSafe(uint256[],uint256,uint256)": FunctionFragment;
    "_setupSafe()": FunctionFragment;
    "getSafe()": FunctionFragment;
    "getSafe(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "_setupSafe(uint256[],uint256)"
      | "_setupSafe(uint256[],uint256,uint256,(bool,uint256,address,bytes,uint256,address,address,bytes))"
      | "_setupSafe(uint256[],uint256,uint256)"
      | "_setupSafe()"
      | "getSafe()"
      | "getSafe(address)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "_setupSafe(uint256[],uint256)",
    values: [BigNumberish[], BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_setupSafe(uint256[],uint256,uint256,(bool,uint256,address,bytes,uint256,address,address,bytes))",
    values: [
      BigNumberish[],
      BigNumberish,
      BigNumberish,
      AdvancedSafeInitParamsStruct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "_setupSafe(uint256[],uint256,uint256)",
    values: [BigNumberish[], BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_setupSafe()",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "getSafe()", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getSafe(address)",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "_setupSafe(uint256[],uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_setupSafe(uint256[],uint256,uint256,(bool,uint256,address,bytes,uint256,address,address,bytes))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_setupSafe(uint256[],uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_setupSafe()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getSafe()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getSafe(address)",
    data: BytesLike
  ): Result;

  events: {};
}

export interface SafeTestTools0815 extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: SafeTestTools0815Interface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    /**
     * Sets up a Safe with the given parameters.
     * @param ownerPKs The public keys of the owners.
     * @param threshold The threshold for the Safe.
     */
    "_setupSafe(uint256[],uint256)"(
      ownerPKs: BigNumberish[],
      threshold: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    "_setupSafe(uint256[],uint256,uint256,(bool,uint256,address,bytes,uint256,address,address,bytes))"(
      ownerPKs: BigNumberish[],
      threshold: BigNumberish,
      initialBalance: BigNumberish,
      advancedParams: AdvancedSafeInitParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    /**
     * Sets up a Safe with the given parameters.
     * @param initialBalance The initial balance of the Safe.
     * @param ownerPKs The public keys of the owners.
     * @param threshold The threshold for the Safe.
     */
    "_setupSafe(uint256[],uint256,uint256)"(
      ownerPKs: BigNumberish[],
      threshold: BigNumberish,
      initialBalance: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    /**
     * Sets up a Safe with default parameters. The SafeInstance will have 3 owners and a threshold of 2.
     */
    "_setupSafe()"(
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    /**
     * Returns the first Safe instance.
     */
    "getSafe()"(overrides?: CallOverrides): Promise<[SafeInstanceStructOutput]>;

    /**
     * Returns the Safe instance with the given address.
     * @param _safe The address of the Safe instance to return.
     */
    "getSafe(address)"(
      _safe: string,
      overrides?: CallOverrides
    ): Promise<[SafeInstanceStructOutput]>;
  };

  /**
   * Sets up a Safe with the given parameters.
   * @param ownerPKs The public keys of the owners.
   * @param threshold The threshold for the Safe.
   */
  "_setupSafe(uint256[],uint256)"(
    ownerPKs: BigNumberish[],
    threshold: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  "_setupSafe(uint256[],uint256,uint256,(bool,uint256,address,bytes,uint256,address,address,bytes))"(
    ownerPKs: BigNumberish[],
    threshold: BigNumberish,
    initialBalance: BigNumberish,
    advancedParams: AdvancedSafeInitParamsStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  /**
   * Sets up a Safe with the given parameters.
   * @param initialBalance The initial balance of the Safe.
   * @param ownerPKs The public keys of the owners.
   * @param threshold The threshold for the Safe.
   */
  "_setupSafe(uint256[],uint256,uint256)"(
    ownerPKs: BigNumberish[],
    threshold: BigNumberish,
    initialBalance: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  /**
   * Sets up a Safe with default parameters. The SafeInstance will have 3 owners and a threshold of 2.
   */
  "_setupSafe()"(
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  /**
   * Returns the first Safe instance.
   */
  "getSafe()"(overrides?: CallOverrides): Promise<SafeInstanceStructOutput>;

  /**
   * Returns the Safe instance with the given address.
   * @param _safe The address of the Safe instance to return.
   */
  "getSafe(address)"(
    _safe: string,
    overrides?: CallOverrides
  ): Promise<SafeInstanceStructOutput>;

  callStatic: {
    /**
     * Sets up a Safe with the given parameters.
     * @param ownerPKs The public keys of the owners.
     * @param threshold The threshold for the Safe.
     */
    "_setupSafe(uint256[],uint256)"(
      ownerPKs: BigNumberish[],
      threshold: BigNumberish,
      overrides?: CallOverrides
    ): Promise<SafeInstanceStructOutput>;

    "_setupSafe(uint256[],uint256,uint256,(bool,uint256,address,bytes,uint256,address,address,bytes))"(
      ownerPKs: BigNumberish[],
      threshold: BigNumberish,
      initialBalance: BigNumberish,
      advancedParams: AdvancedSafeInitParamsStruct,
      overrides?: CallOverrides
    ): Promise<SafeInstanceStructOutput>;

    /**
     * Sets up a Safe with the given parameters.
     * @param initialBalance The initial balance of the Safe.
     * @param ownerPKs The public keys of the owners.
     * @param threshold The threshold for the Safe.
     */
    "_setupSafe(uint256[],uint256,uint256)"(
      ownerPKs: BigNumberish[],
      threshold: BigNumberish,
      initialBalance: BigNumberish,
      overrides?: CallOverrides
    ): Promise<SafeInstanceStructOutput>;

    /**
     * Sets up a Safe with default parameters. The SafeInstance will have 3 owners and a threshold of 2.
     */
    "_setupSafe()"(
      overrides?: CallOverrides
    ): Promise<SafeInstanceStructOutput>;

    /**
     * Returns the first Safe instance.
     */
    "getSafe()"(overrides?: CallOverrides): Promise<SafeInstanceStructOutput>;

    /**
     * Returns the Safe instance with the given address.
     * @param _safe The address of the Safe instance to return.
     */
    "getSafe(address)"(
      _safe: string,
      overrides?: CallOverrides
    ): Promise<SafeInstanceStructOutput>;
  };

  filters: {};

  estimateGas: {
    /**
     * Sets up a Safe with the given parameters.
     * @param ownerPKs The public keys of the owners.
     * @param threshold The threshold for the Safe.
     */
    "_setupSafe(uint256[],uint256)"(
      ownerPKs: BigNumberish[],
      threshold: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    "_setupSafe(uint256[],uint256,uint256,(bool,uint256,address,bytes,uint256,address,address,bytes))"(
      ownerPKs: BigNumberish[],
      threshold: BigNumberish,
      initialBalance: BigNumberish,
      advancedParams: AdvancedSafeInitParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    /**
     * Sets up a Safe with the given parameters.
     * @param initialBalance The initial balance of the Safe.
     * @param ownerPKs The public keys of the owners.
     * @param threshold The threshold for the Safe.
     */
    "_setupSafe(uint256[],uint256,uint256)"(
      ownerPKs: BigNumberish[],
      threshold: BigNumberish,
      initialBalance: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    /**
     * Sets up a Safe with default parameters. The SafeInstance will have 3 owners and a threshold of 2.
     */
    "_setupSafe()"(
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    /**
     * Returns the first Safe instance.
     */
    "getSafe()"(overrides?: CallOverrides): Promise<BigNumber>;

    /**
     * Returns the Safe instance with the given address.
     * @param _safe The address of the Safe instance to return.
     */
    "getSafe(address)"(
      _safe: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    /**
     * Sets up a Safe with the given parameters.
     * @param ownerPKs The public keys of the owners.
     * @param threshold The threshold for the Safe.
     */
    "_setupSafe(uint256[],uint256)"(
      ownerPKs: BigNumberish[],
      threshold: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    "_setupSafe(uint256[],uint256,uint256,(bool,uint256,address,bytes,uint256,address,address,bytes))"(
      ownerPKs: BigNumberish[],
      threshold: BigNumberish,
      initialBalance: BigNumberish,
      advancedParams: AdvancedSafeInitParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    /**
     * Sets up a Safe with the given parameters.
     * @param initialBalance The initial balance of the Safe.
     * @param ownerPKs The public keys of the owners.
     * @param threshold The threshold for the Safe.
     */
    "_setupSafe(uint256[],uint256,uint256)"(
      ownerPKs: BigNumberish[],
      threshold: BigNumberish,
      initialBalance: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    /**
     * Sets up a Safe with default parameters. The SafeInstance will have 3 owners and a threshold of 2.
     */
    "_setupSafe()"(
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    /**
     * Returns the first Safe instance.
     */
    "getSafe()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    /**
     * Returns the Safe instance with the given address.
     * @param _safe The address of the Safe instance to return.
     */
    "getSafe(address)"(
      _safe: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../common";

export declare namespace DeploySuperchainOutput {
  export type OutputStruct = {
    superchainProxyAdmin: string;
    superchainConfigImpl: string;
    superchainConfigProxy: string;
    protocolVersionsImpl: string;
    protocolVersionsProxy: string;
  };

  export type OutputStructOutput = [string, string, string, string, string] & {
    superchainProxyAdmin: string;
    superchainConfigImpl: string;
    superchainConfigProxy: string;
    protocolVersionsImpl: string;
    protocolVersionsProxy: string;
  };
}

export interface DeploySuperchainOutputInterface extends utils.Interface {
  functions: {
    "checkOutput()": FunctionFragment;
    "output()": FunctionFragment;
    "protocolVersionsImpl()": FunctionFragment;
    "protocolVersionsProxy()": FunctionFragment;
    "set(bytes4,address)": FunctionFragment;
    "superchainConfigImpl()": FunctionFragment;
    "superchainConfigProxy()": FunctionFragment;
    "superchainProxyAdmin()": FunctionFragment;
    "writeOutputFile(string)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "checkOutput"
      | "output"
      | "protocolVersionsImpl"
      | "protocolVersionsProxy"
      | "set"
      | "superchainConfigImpl"
      | "superchainConfigProxy"
      | "superchainProxyAdmin"
      | "writeOutputFile"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "checkOutput",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "output", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "protocolVersionsImpl",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "protocolVersionsProxy",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "set",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "superchainConfigImpl",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "superchainConfigProxy",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "superchainProxyAdmin",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "writeOutputFile",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "checkOutput",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "output", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "protocolVersionsImpl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "protocolVersionsProxy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "set", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "superchainConfigImpl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "superchainConfigProxy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "superchainProxyAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "writeOutputFile",
    data: BytesLike
  ): Result;

  events: {};
}

export interface DeploySuperchainOutput extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: DeploySuperchainOutputInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    checkOutput(overrides?: CallOverrides): Promise<[void]>;

    output(
      overrides?: CallOverrides
    ): Promise<[DeploySuperchainOutput.OutputStructOutput]>;

    protocolVersionsImpl(overrides?: CallOverrides): Promise<[string]>;

    protocolVersionsProxy(overrides?: CallOverrides): Promise<[string]>;

    set(
      sel: BytesLike,
      _address: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    superchainConfigImpl(overrides?: CallOverrides): Promise<[string]>;

    superchainConfigProxy(overrides?: CallOverrides): Promise<[string]>;

    superchainProxyAdmin(overrides?: CallOverrides): Promise<[string]>;

    writeOutputFile(
      _outfile: string,
      overrides?: CallOverrides
    ): Promise<[void]>;
  };

  checkOutput(overrides?: CallOverrides): Promise<void>;

  output(
    overrides?: CallOverrides
  ): Promise<DeploySuperchainOutput.OutputStructOutput>;

  protocolVersionsImpl(overrides?: CallOverrides): Promise<string>;

  protocolVersionsProxy(overrides?: CallOverrides): Promise<string>;

  set(
    sel: BytesLike,
    _address: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  superchainConfigImpl(overrides?: CallOverrides): Promise<string>;

  superchainConfigProxy(overrides?: CallOverrides): Promise<string>;

  superchainProxyAdmin(overrides?: CallOverrides): Promise<string>;

  writeOutputFile(_outfile: string, overrides?: CallOverrides): Promise<void>;

  callStatic: {
    checkOutput(overrides?: CallOverrides): Promise<void>;

    output(
      overrides?: CallOverrides
    ): Promise<DeploySuperchainOutput.OutputStructOutput>;

    protocolVersionsImpl(overrides?: CallOverrides): Promise<string>;

    protocolVersionsProxy(overrides?: CallOverrides): Promise<string>;

    set(
      sel: BytesLike,
      _address: string,
      overrides?: CallOverrides
    ): Promise<void>;

    superchainConfigImpl(overrides?: CallOverrides): Promise<string>;

    superchainConfigProxy(overrides?: CallOverrides): Promise<string>;

    superchainProxyAdmin(overrides?: CallOverrides): Promise<string>;

    writeOutputFile(_outfile: string, overrides?: CallOverrides): Promise<void>;
  };

  filters: {};

  estimateGas: {
    checkOutput(overrides?: CallOverrides): Promise<BigNumber>;

    output(overrides?: CallOverrides): Promise<BigNumber>;

    protocolVersionsImpl(overrides?: CallOverrides): Promise<BigNumber>;

    protocolVersionsProxy(overrides?: CallOverrides): Promise<BigNumber>;

    set(
      sel: BytesLike,
      _address: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    superchainConfigImpl(overrides?: CallOverrides): Promise<BigNumber>;

    superchainConfigProxy(overrides?: CallOverrides): Promise<BigNumber>;

    superchainProxyAdmin(overrides?: CallOverrides): Promise<BigNumber>;

    writeOutputFile(
      _outfile: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    checkOutput(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    output(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    protocolVersionsImpl(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    protocolVersionsProxy(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    set(
      sel: BytesLike,
      _address: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    superchainConfigImpl(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    superchainConfigProxy(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    superchainProxyAdmin(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    writeOutputFile(
      _outfile: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}

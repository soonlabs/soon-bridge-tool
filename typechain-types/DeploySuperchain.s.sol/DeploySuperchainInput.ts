/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../common";

export declare namespace DeploySuperchainInput {
  export type RolesStruct = {
    proxyAdminOwner: string;
    protocolVersionsOwner: string;
    guardian: string;
  };

  export type RolesStructOutput = [string, string, string] & {
    proxyAdminOwner: string;
    protocolVersionsOwner: string;
    guardian: string;
  };

  export type InputStruct = {
    roles: DeploySuperchainInput.RolesStruct;
    paused: boolean;
    requiredProtocolVersion: BigNumberish;
    recommendedProtocolVersion: BigNumberish;
  };

  export type InputStructOutput = [
    DeploySuperchainInput.RolesStructOutput,
    boolean,
    BigNumber,
    BigNumber
  ] & {
    roles: DeploySuperchainInput.RolesStructOutput;
    paused: boolean;
    requiredProtocolVersion: BigNumber;
    recommendedProtocolVersion: BigNumber;
  };
}

export interface DeploySuperchainInputInterface extends utils.Interface {
  functions: {
    "guardian()": FunctionFragment;
    "input()": FunctionFragment;
    "inputSet()": FunctionFragment;
    "loadInput(((address,address,address),bool,uint256,uint256))": FunctionFragment;
    "loadInputFile(string)": FunctionFragment;
    "paused()": FunctionFragment;
    "protocolVersionsOwner()": FunctionFragment;
    "proxyAdminOwner()": FunctionFragment;
    "recommendedProtocolVersion()": FunctionFragment;
    "requiredProtocolVersion()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "guardian"
      | "input"
      | "inputSet"
      | "loadInput"
      | "loadInputFile"
      | "paused"
      | "protocolVersionsOwner"
      | "proxyAdminOwner"
      | "recommendedProtocolVersion"
      | "requiredProtocolVersion"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "guardian", values?: undefined): string;
  encodeFunctionData(functionFragment: "input", values?: undefined): string;
  encodeFunctionData(functionFragment: "inputSet", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "loadInput",
    values: [DeploySuperchainInput.InputStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "loadInputFile",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "paused", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "protocolVersionsOwner",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "proxyAdminOwner",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "recommendedProtocolVersion",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "requiredProtocolVersion",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "guardian", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "input", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "inputSet", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "loadInput", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "loadInputFile",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "paused", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "protocolVersionsOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proxyAdminOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "recommendedProtocolVersion",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "requiredProtocolVersion",
    data: BytesLike
  ): Result;

  events: {};
}

export interface DeploySuperchainInput extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: DeploySuperchainInputInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    guardian(overrides?: CallOverrides): Promise<[string]>;

    input(
      overrides?: CallOverrides
    ): Promise<[DeploySuperchainInput.InputStructOutput]>;

    inputSet(overrides?: CallOverrides): Promise<[boolean]>;

    loadInput(
      _input: DeploySuperchainInput.InputStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    loadInputFile(
      _infile: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    paused(overrides?: CallOverrides): Promise<[boolean]>;

    protocolVersionsOwner(overrides?: CallOverrides): Promise<[string]>;

    proxyAdminOwner(overrides?: CallOverrides): Promise<[string]>;

    recommendedProtocolVersion(overrides?: CallOverrides): Promise<[BigNumber]>;

    requiredProtocolVersion(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  guardian(overrides?: CallOverrides): Promise<string>;

  input(
    overrides?: CallOverrides
  ): Promise<DeploySuperchainInput.InputStructOutput>;

  inputSet(overrides?: CallOverrides): Promise<boolean>;

  loadInput(
    _input: DeploySuperchainInput.InputStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  loadInputFile(
    _infile: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  paused(overrides?: CallOverrides): Promise<boolean>;

  protocolVersionsOwner(overrides?: CallOverrides): Promise<string>;

  proxyAdminOwner(overrides?: CallOverrides): Promise<string>;

  recommendedProtocolVersion(overrides?: CallOverrides): Promise<BigNumber>;

  requiredProtocolVersion(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    guardian(overrides?: CallOverrides): Promise<string>;

    input(
      overrides?: CallOverrides
    ): Promise<DeploySuperchainInput.InputStructOutput>;

    inputSet(overrides?: CallOverrides): Promise<boolean>;

    loadInput(
      _input: DeploySuperchainInput.InputStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    loadInputFile(_infile: string, overrides?: CallOverrides): Promise<void>;

    paused(overrides?: CallOverrides): Promise<boolean>;

    protocolVersionsOwner(overrides?: CallOverrides): Promise<string>;

    proxyAdminOwner(overrides?: CallOverrides): Promise<string>;

    recommendedProtocolVersion(overrides?: CallOverrides): Promise<BigNumber>;

    requiredProtocolVersion(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    guardian(overrides?: CallOverrides): Promise<BigNumber>;

    input(overrides?: CallOverrides): Promise<BigNumber>;

    inputSet(overrides?: CallOverrides): Promise<BigNumber>;

    loadInput(
      _input: DeploySuperchainInput.InputStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    loadInputFile(
      _infile: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    paused(overrides?: CallOverrides): Promise<BigNumber>;

    protocolVersionsOwner(overrides?: CallOverrides): Promise<BigNumber>;

    proxyAdminOwner(overrides?: CallOverrides): Promise<BigNumber>;

    recommendedProtocolVersion(overrides?: CallOverrides): Promise<BigNumber>;

    requiredProtocolVersion(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    guardian(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    input(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    inputSet(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    loadInput(
      _input: DeploySuperchainInput.InputStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    loadInputFile(
      _infile: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    paused(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    protocolVersionsOwner(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    proxyAdminOwner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    recommendedProtocolVersion(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    requiredProtocolVersion(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
